http://scholar.google.com/scholar?hl=en&q=Abadi%2C+M.%2C+Budiu%2C+M.%2C+Erlingsson%2C+U.%2C+and+Ligatti%2C+J.+2005.+Control-flow+integrity.+In+Proceedings+of+the+12th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F1102120.1102165+
http://scholar.google.com/scholar?hl=en&q=Akritidis%2C+P.%2C+Cadar%2C+C.%2C+Raiciu%2C+C.%2C+Costa%2C+M.%2C+and+Castro%2C+M.+2008.+Preventing+memory+error+exploits+with+wit.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+10.1109%2FSP.2008.30+
http://scholar.google.com/scholar?hl=en&q=Akritidis%2C+P.%2C+Costa%2C+M.%2C+Castro%2C+M.%2C+and+Hand%2C+S.+2009.+Baggy+bounds+checking%3A+An+efficient+and+backwards-compatible+defense+against+out-of-bounds+errors.+In+Proceedings+of+the+18th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Aleph+One.+1996.+Smashing+the+stack+for+fun+and+profit.+Phrack+49.
http://scholar.google.com/scholar?hl=en&q=Alexander%2C+S.+2005.+Defeating+compiler-level+buffer+overflow+protection.+USENIX+Mag.+30%2C+3.
http://scholar.google.com/scholar?hl=en&q=anonymous.+2001.+Once+upon+a+free%28%29.+Phrack+57.
http://scholar.google.com/scholar?hl=en&q=Arahori%2C+Y.%2C+Gondow%2C+K.%2C+and+Maejima%2C+H.+2009.+Tcbc%3A+Trap+caching+bounds+checking+for+C.+In+Proceedings+of+the+8th+IEEE+International+Conference+on+Dependable%2C+Autonomic+and+Secure+Computing.+10.1109%2FDASC.2009.80+
http://scholar.google.com/scholar?hl=en&q=Austin%2C+T.+M.%2C+Breach%2C+S.+E.%2C+and+Sohi%2C+G.+S.+1994.+Efficient+detection+of+all+pointer+and+array+access+errors.+In+Proceedings+of+the+ACM+Conference+on+Programming+Language+Design+and+Implementation.+10.1145%2F178243.178446+
http://scholar.google.com/scholar?hl=en&q=Avijit%2C+K.%2C+Gupta%2C+P.%2C+and+Gupta%2C+D.+2006.+Binary+rewriting+and+call+interception+for+efficient+runtime+protection+against+buffer+overflows%3A+Research+articles.+Softw.+Pract.+Exp.+36%2C+9.+10.1002%2Fspe.v36%3A9+
http://scholar.google.com/scholar?hl=en&q=Baratloo%2C+A.%2C+Singh%2C+N.%2C+and+Tsai%2C+T.+2000.+Transparent+runtime+defense+against+stack+smashing+attacks.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference.+
http://scholar.google.com/scholar?hl=en&q=Barrantes%2C+E.+G.%2C+Ackley%2C+D.+H.%2C+Forrest%2C+S.%2C+Palmer%2C+T.+S.%2C+Stefanovi%C4%87%2C+D.%2C+and+Zovi%2C+D.+D.+2003.+Randomized+instruction+set+emulation+to+disrupt+binary+code+injection+attacks.+In+Proceedings+of+the+10th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F948109.948147+
http://scholar.google.com/scholar?hl=en&q=BBP.+2003.+BSD+heap+smashing.+BlackHat.
http://scholar.google.com/scholar?hl=en&q=Berger%2C+E.+D.+and+Zorn%2C+B.+G.+2006.+Diehard%3A+Probabilistic+memory+safety+for+unsafe+languages.+In+Proceedings+of+the+ACM+Conference+on+Programming+Language+Design+and+Implementation.+10.1145%2F1133981.1134000+
http://scholar.google.com/scholar?hl=en&q=Bernaschi%2C+M.%2C+Gabrielli%2C+E.%2C+and+Mancini%2C+L.+V.+2000.+Operating+system+enhancements+to+prevent+the+misuse+of+system+calls.+In+Proceedings+of+the+7th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F352600.352624+
http://scholar.google.com/scholar?hl=en&q=Bhatkar%2C+S.%2C+DuVarney%2C+D.+C.%2C+and+Sekar%2C+R.+2003.+Address+obfuscation%3A+An+efficient+approach+to+combat+a+broad+range+of+memory+error+exploits.+In+Proceedings+of+the+12th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Bhatkar%2C+S.+and+Sekar%2C+R.+2008.+Data+space+randomization.+In+Proceedings+of+the+5th+Conference+on+Detection+of+Intrusions+and+Malware+%26+Vulnerability+Assessment.+10.1007%2F978-3-540-70542-0_1+
http://scholar.google.com/scholar?hl=en&q=Bhatkar%2C+S.%2C+Sekar%2C+R.%2C+and+DuVarney%2C+D.+C.+2005.+Efficient+techniques+for+comprehensive+protection+from+memory+error+exploits.+In+Proceedings+of+the+14th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Boehm%2C+H.+and+Weiser%2C+M.+1988.+Garbage+collection+in+an+uncooperative+environment.+Softw.+Pract.+Exp.+18%2C+9.+10.1002%2Fspe.4380180902+
http://scholar.google.com/scholar?hl=en&q=Bray%2C+B.+2002.+Compiler+security+checks+in+depth.+Microsoft+Corporation+Visual+C%2B%2B+.NET.
http://scholar.google.com/scholar?hl=en&q=Bruschi%2C+D.%2C+Cavallaro%2C+L.%2C+and+Lanzi%2C+A.+2007a.+Diversified+process+replicae+for+defeating+memory+error+exploits.+In+Proceedings+of+the+3rd+International+Workshop+on+Information+Assurance.
http://scholar.google.com/scholar?hl=en&q=Bruschi%2C+D.%2C+Cavallaro%2C+L.%2C+and+Lanzi%2C+A.+2007b.+An+efficient+technique+for+preventing+mimicry+and+impossible+paths+execution+attacks.+In+Proceedings+of+the+3rd+International+Workshop+on+Information+Assurance.
http://scholar.google.com/scholar?hl=en&q=Bulba+and+Kil3r.+2000.+Bypassing+stackguard+and+stackshield.+Phrack+56.
http://scholar.google.com/scholar?hl=en&q=Castro%2C+M.%2C+Costa%2C+M.%2C+and+Harris%2C+T.+2006.+Securing+software+by+enforcing+data-flow+integrity.+In+Proceedings+of+the+7th+Symposium+on+Operating+Systems+Design+and+Implementation.+
http://scholar.google.com/scholar?hl=en&q=Cavallaro%2C+L.+and+Sekar%2C+R.+2008.+Anomalous+taint+detection.+In+Proceedings+of+the+11th+International+Symposium+on+Recent+Advances+in+Intrusion+Detection.+10.1007%2F978-3-540-87403-4_34+
http://scholar.google.com/scholar?hl=en&q=Chen%2C+K.+and+Wagner%2C+D.+2007.+Large-scale+analysis+of+format+string+vulnerabilities+in+debian+linux.+In+Proceedings+of+the+Workshop+on+Programming+Languages+and+Analysis+for+Security.+10.1145%2F1255329.1255344+
http://scholar.google.com/scholar?hl=en&q=Chen%2C+P.%2C+Xiao%2C+H.%2C+Shen%2C+X.%2C+Yin%2C+X.%2C+Mao%2C+B.%2C+and+Xie%2C+L.+2009.+Drop%3A+Detecting+return-oriented+programming+malicious+code.+In+Proceedings+of+the+5th+International+Conference+on+Information+Systems+Security.+10.1007%2F978-3-642-10772-6_13+
http://scholar.google.com/scholar?hl=en&q=Chen%2C+S.%2C+Xu%2C+J.%2C+Nakka%2C+N.%2C+Kalbarczyk%2C+Z.%2C+and+Iyer%2C+R.+K.+2005.+Defeating+memory+corruption+attacks+via+pointer+taintedness+detection.+In+Proceedings+of+the+International+Conference+on+Dependable+Systems+and+Networks.+10.1109%2FDSN.2005.36+
http://scholar.google.com/scholar?hl=en&q=Chen%2C+S.%2C+Xu%2C+J.%2C+Sezer%2C+E.+C.%2C+Gauriar%2C+P.%2C+and+Iyer%2C+R.+K.+2005.+Non-control-data+attacks+are+realistic+threats.+In+Proceedings+of+the+14th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Chinchani%2C+R.%2C+Iyer%2C+A.%2C+Jayaraman%2C+B.%2C+and+Upadhyaya%2C+S.+2004.+Archerr%3A+Runtime+environment+driven+program+safety.+In+Proceedings+of+the+9th+European+Symposium+on+Research+in+Computer+Security.
http://scholar.google.com/scholar?hl=en&q=Chiueh%2C+T.+and+Hsu%2C+F.+2001.+RAD%3A+A+compile-time+solution+to+buffer+overflow+attacks.+In+Proceedings+of+the+21st+International+Conference+on+Distributed+Computing+Systems.+
http://scholar.google.com/scholar?hl=en&q=Condit%2C+J.%2C+Harren%2C+M.%2C+Anderson%2C+Z.%2C+Gay%2C+D.%2C+and+Necula%2C+G.+2007.+Dependent+types+for+low-level+programming.+In+Proceedings+of+the+16th+European+Symposium+on+Programming.+
http://scholar.google.com/scholar?hl=en&q=Conover%2C+M.+1999.+w00w00+on+Heap+Overflows.+http%3A%2F%2Fwww.w00w00.org%2Farticles.html.
http://scholar.google.com/scholar?hl=en&q=Corliss%2C+M.%2C+Lewis%2C+E.+C.%2C+and+Roth%2C+A.+2004.+Using+dise+to+protect+return+addresses+from+attack.+In+Proceedings+of+the+Workshop+on+Architectural+Support+for+Security+and+Anti-Virus.
http://scholar.google.com/scholar?hl=en&q=Cowan%2C+C.%2C+Barringer%2C+M.%2C+Beattie%2C+S.%2C+Kroah-Hartman%2C+G.%2C+Frantzen%2C+M.%2C+and+Lokier%2C+J.+2001.+FormatGuard%3A+Automatic+protection+from+printf+format+string+vulnerabilities.+In+Proceedings+of+the+10th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Cowan%2C+C.%2C+Beattie%2C+S.%2C+Johansen%2C+J.%2C+and+Wagle%2C+P.+2003.+PointGuard%3A+Protecting+pointers+from+buffer+overflow+vulnerabilities.+In+Proceedings+of+the+12th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Cowan%2C+C.%2C+Pu%2C+C.%2C+Maier%2C+D.%2C+Hinton%2C+H.%2C+Walpole%2C+J.%2C+Bakke%2C+P.%2C+Beattie%2C+S.%2C+Grier%2C+A.%2C+Wagle%2C+P.%2C+and+Zhang%2C+Q.+1998.+StackGuard%3A+Automatic+adaptive+detection+and+prevention+of+buffer+overflow+attacks.+In+Proceedings+of+the+7th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Cox%2C+B.%2C+Evans%2C+D.%2C+Filipi%2C+A.%2C+Rowanhill%2C+J.%2C+Hu%2C+W.%2C+Davidson%2C+J.%2C+Knight%2C+J.%2C+Nguyen-Tuong%2C+A.%2C+and+Hiser%2C+J.+2006.+N-variant+systems%3A+A+secretless+framework+for+security+through+diversity.+In+Proceedings+of+the+15th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Dahn%2C+C.+and+Mancoridis%2C+S.+2003.+Using+program+transformation+to+secure+C+programs+against+buffer+overflows.+In+Proceedings+of+the+10th+Working+Conference+on+Reverse+Engineering.+
http://scholar.google.com/scholar?hl=en&q=Dalton%2C+M.%2C+Kannan%2C+H.%2C+and+Kozyrakis%2C+C.+2008.+Real-world+buffer+overflow+protection+for+userspace+%26+kernelspace.+In+Proceedings+of+the+17th+USENIX+Security+symposium.+
http://scholar.google.com/scholar?hl=en&q=Dhurjati%2C+D.+and+Adve%2C+V.+2006a.+Backwards-compatible+array+bounds+checking+for+C+with+very+low+overhead.+In+Proceedings+of+the+28th+International+Conference+on+Software+Engineering.+10.1145%2F1134285.1134309+
http://scholar.google.com/scholar?hl=en&q=Dhurjati%2C+D.+and+Adve%2C+V.+2006b.+Efficiently+detecting+all+dangling+pointer+uses+in+production+servers.+In+Proceedings+of+the+International+Conference+on+Dependable+Systems+and+Networks.+10.1109%2FDSN.2006.31+
http://scholar.google.com/scholar?hl=en&q=Dhurjati%2C+D.%2C+Kowshik%2C+S.%2C+and+Adve%2C+V.+2006.+Safecode%3A+Enforcing+alias+analysis+for+weakly+typed+languages.+In+Proceedings+of+the+ACM+Conference+on+Programming+Language+Design+and+Implementation.+10.1145%2F1133981.1133999+
http://scholar.google.com/scholar?hl=en&q=Dhurjati%2C+D.%2C+Kowshik%2C+S.%2C+Adve%2C+V.%2C+and+Lattner%2C+C.+2003.+Memory+safety+without+runtime+checks+or+garbage+collection.+In+Proceedings+of+the+ACM+Conference+on+Language%2C+Compiler%2C+and+Tool+Support+for+Embedded+Systems.+10.1145%2F780732.780743+
http://scholar.google.com/scholar?hl=en&q=Dobrovitski%2C+I.+2003.+Exploit+for+CVS+double+free%28%29+for+Linux+pserver.+http%3A%2F%2Fseclists.org%2Fbugtraq%2F2003%2FFeb%2F42.
http://scholar.google.com/scholar?hl=en&q=Egele%2C+M.%2C+Wurzinger%2C+P.%2C+Kruegel%2C+C.%2C+and+Kirda%2C+E.+2009.+Defending+browsers+against+drive-by+downloads%3A+Mitigating+heap-spraying+code+injection+attacks.+In+Proceedings+of+the+Conference+on+Detection+of+Intrusions+and+Malware+%26+Vulnerability+Assessment.+10.1007%2F978-3-642-02918-9_6+
http://scholar.google.com/scholar?hl=en&q=Erlingsson%2C+U.+and+Schneider%2C+F.+B.+1999.+SASI+enforcement+of+security+policies%3A+A+retrospective.+In+Proceedings+of+the+New+Security+Paradigm+Workshop.+10.1145%2F335169.335201+
http://scholar.google.com/scholar?hl=en&q=Erlingsson%2C+U.%2C+Younan%2C+Y.%2C+and+Piessens%2C+F.+2010.+Low-level+software+security+by+example.+In+Handbook+of+Information+and+Communication+Security.+Springer.
http://scholar.google.com/scholar?hl=en&q=Etoh%2C+H.+and+Yoda%2C+K.+2000.+Protecting+from+stack-smashing+attacks.+Tech.+rep.%2C+IBM+Research+Divison%2C+Tokyo+Research+Laboratory.
http://scholar.google.com/scholar?hl=en&q=Evans%2C+D.+and+Twyman%2C+A.+1999.+Flexible+policy-directed+code+safety.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.
http://scholar.google.com/scholar?hl=en&q=Feng%2C+H.+H.%2C+Kolesnikov%2C+O.+M.%2C+Fogla%2C+P.%2C+Lee%2C+W.%2C+and+Gong%2C+W.+2003.+Anomaly+detection+using+call+stack+information.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+
http://scholar.google.com/scholar?hl=en&q=Fetzer%2C+C.+and+Xiao%2C+Z.+2001.+Detecting+heap-smashing+attacks+through+fault+containment+wrappers.+In+Proceedings+of+the+20th+IEEE+Symposium+on+Reliable+Distributed+Systems.
http://scholar.google.com/scholar?hl=en&q=Forrest%2C+S.%2C+Hofmeyr%2C+S.+A.%2C+Somayaji%2C+A.%2C+and+Longstaff%2C+T.+A.+1996.+A+sense+of+self+for+Unix+processes.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+
http://scholar.google.com/scholar?hl=en&q=Francillon%2C+A.+and+Castelluccia%2C+C.+2008.+Code+injection+attacks+on+harvard-architecture+devices.+In+Proceedings+of+the+15th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F1455770.1455775+
http://scholar.google.com/scholar?hl=en&q=Francillon%2C+A.%2C+Perito%2C+D.%2C+and+Castelluccia%2C+C.+2009.+Defending+embedded+systems+against+control+flow+attacks.+In+Proceedings+of+the+1st+ACM+Workshop+on+Secure+Execution+of+Untrusted+Code.+10.1145%2F1655077.1655083+
http://scholar.google.com/scholar?hl=en&q=Frantzen%2C+M.+and+Shuey%2C+M.+2001.+StackGhost%3A+Hardware+facilitated+stack+protection.+In+Proceedings+of+the+10th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Gadaleta%2C+F.%2C+Younan%2C+Y.%2C+Jacobs%2C+B.%2C+Joosen%2C+W.%2C+De+Neve%2C+E.%2C+and+Beosier%2C+N.+2009.+Instruction-level+countermeasures+against+stack-based+buffer+overflow+attacks.+In+Proceedings+of+the+1st+Workshop+on+Virtualization+Technology+for+Dependable+Systems.+10.1145%2F1518684.1518686+
http://scholar.google.com/scholar?hl=en&q=Gadaleta%2C+F.%2C+Younan%2C+Y.%2C+and+Joosen%2C+W.+2010.+Bubble%3A+A+javascript+engine-level+countermeasure+against+heap-spraying+attacks.+In+Proceedings+of+the+2nd+International+Symposium+on+Engineering+Secure+Software+and+Systems.+10.1007%2F978-3-642-11747-3_1+
http://scholar.google.com/scholar?hl=en&q=Goldberg%2C+I.%2C+Wagner%2C+D.%2C+Thomas%2C+R.%2C+and+Brewer%2C+E.+A.+1996.+A+secure+environment+for+untrusted+helper+applications.+In+Proceedings+of+the+6th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Grimes%2C+R.+2004.+Preventing+buffer+overflows+in+C%2B%2B.+Dr+Dobb%27s+J.+Softw.+Tools+Prof.+Program.+29%2C+1.
http://scholar.google.com/scholar?hl=en&q=Gupta%2C+S.%2C+Pratap%2C+P.%2C+Saran%2C+H.%2C+and+Arun-Kumar%2C+S.+2006.+Dynamic+code+instrumentation+to+detect+and+recover+from+return+address+corruption.+In+Proceedings+of+the+International+Workshop+on+Dynamic+Systems+Analysis.+10.1145%2F1138912.1138926+
http://scholar.google.com/scholar?hl=en&q=Hastings%2C+R.+and+Joyce%2C+B.+1992.+Purify%3A+Fast+detection+of+memory+leaks+and+access+errors.+In+Proceedings+of+the+Winter+USENIX+Conference.
http://scholar.google.com/scholar?hl=en&q=Hicks%2C+M.%2C+Morrisett%2C+G.%2C+Grossman%2C+D.%2C+and+Jim%2C+T.+2004.+Experience+with+safe+manual+memory-management+in+cyclone.+In+Proceedings+of+the+4th+International+Symposium+on+Memory+Management.+10.1145%2F1029873.1029883+
http://scholar.google.com/scholar?hl=en&q=Hiser%2C+J.+D.%2C+Coleman%2C+C.+L.%2C+Co%2C+M.%2C+and+Davidson%2C+J.+W.+2009.+Meds%3A+The+memory+error+detection+system.+In+Proceedings+of+the+1st+International+Symposium+on+Engineering+Secure+Software+and+Systems.+10.1007%2F978-3-642-00199-4_14+
http://scholar.google.com/scholar?hl=en&q=Ho%2C+A.%2C+Fetterman%2C+M.%2C+Clark%2C+C.%2C+Warfield%2C+A.%2C+and+Hand%2C+S.+2006.+Practical+taint-based+protection+using+demand+emulation.+In+Proceedings+of+the+1st+ACM+European+Conference+on+Computer+Systems.+10.1145%2F1217935.1217939+
http://scholar.google.com/scholar?hl=en&q=Howard%2C+M.+and+LeBlanc%2C+D.+2001.+Writing+Secure+Code.+Microsoft+Press.+
http://scholar.google.com/scholar?hl=en&q=Hu%2C+W.%2C+Hiser%2C+J.%2C+Williams%2C+D.%2C+Filipi%2C+A.%2C+Davidson%2C+J.+W.%2C+Evans%2C+D.%2C+Knight%2C+J.+C.%2C+Nguyen-Tuong%2C+A.%2C+and+Rowanhill%2C+J.+2006.+Secure+and+practical+defense+against+code-injection+attacks+using+software+dynamic+translation.+In+Proceedings+of+the+2nd+International+Conference+on+Virtual+Execution+Environments.+10.1145%2F1134760.1134764+
http://scholar.google.com/scholar?hl=en&q=Ikebe%2C+Y.%2C+Nakayama%2C+T.%2C+Katagiri%2C+M.%2C+Kawasaki%2C+S.%2C+Abe%2C+H.%2C+Shinagawa%2C+T.%2C+and+Kato%2C+K.+2008.+Efficient+anomaly+detection+system+for+mobile+handsets.+In+Proceedings+of+the+2nd+International+Conference+on+Emerging+Security+Information%2C+Systems%2C+and+Technologies.+10.1109%2FSECURWARE.2008.16+
http://scholar.google.com/scholar?hl=en&q=Intel+Corporation+2001.+IA-32+Intel+Architecture+Software+Developer%27s+Manual+Volume+1%3A+Basic+Architecture.+Intel+Corporation.+Order+Nr.+245470.
http://scholar.google.com/scholar?hl=en&q=ISO.+1999.+ISO%2FIEC+9899%3A1999%3A+Programming+languages+%2D%2D+C.+Tech.+rep.%2C+International+Organization+for+Standards.
http://scholar.google.com/scholar?hl=en&q=Jiang%2C+X.%2C+Wang%2C+H.+J.%2C+Xu%2C+D.%2C+and+Wang%2C+Y.+M.+2007.+Randsys%3A+Thwarting+code+injection+attacks+with+system+service+interface+randomization.+In+Proceedings+of+the+26th+IEEE+International+Symposium+on+Reliable+Distributed+Systems.+
http://scholar.google.com/scholar?hl=en&q=Jim%2C+T.%2C+Morrisett%2C+G.%2C+Grossman%2C+D.%2C+Hicks%2C+M.%2C+Cheney%2C+J.%2C+and+Wang%2C+Y.+2002.+Cyclone%3A+A+safe+dialect+of+C.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference.+
http://scholar.google.com/scholar?hl=en&q=Jones%2C+R.+W.+M.+and+Kelly%2C+P.+H.+J.+1997.+Backwards-compatible+bounds+checking+for+arrays+and+pointers+in+C+programs.+In+Proceedings+of+the+3rd+International+Workshop+on+Automatic+Debugging.
http://scholar.google.com/scholar?hl=en&q=Kaempf%2C+M.+2001.+Vudo%E2%80%94An+object+superstitiously+believed+to+embody+magical+powers.+Phrack+57.
http://scholar.google.com/scholar?hl=en&q=Kc%2C+G.+S.+and+Keromytis%2C+A.+D.+2005.+e-nexsh%3A+Achieving+an+effectively+non-executable+stack+and+heap+via+system-call+policing.+In+Proceedings+of+the+21st+Annual+Computer+Security+Applications+Conference.+10.1109%2FCSAC.2005.22+
http://scholar.google.com/scholar?hl=en&q=Kc%2C+G.+S.%2C+Keromytis%2C+A.+D.%2C+and+Prevelakis%2C+V.+2003.+Countering+code-injection+attacks+with+instruction-set+randomization.+In+Proceedings+of+the+10th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F948109.948146+
http://scholar.google.com/scholar?hl=en&q=Kendall%2C+S.+C.+1983.+Bcc%3A+Runtime+checking+for+C+programs.+In+Proceedings+of+the+USENIX+Summer+Conference.
http://scholar.google.com/scholar?hl=en&q=Kharbutli%2C+M.%2C+Jiang%2C+X.%2C+Solihin%2C+Y.%2C+Venkataramani%2C+G.%2C+and+Prvulovic%2C+M.+2006.+Comprehensively+and+efficiently+protecting+the+heap.+In+Proceedings+of+the+12th+International+Conference+on+Architectural+Support+for+Programming+Languages+and+Operating+Systems.+10.1145%2F1168857.1168884+
http://scholar.google.com/scholar?hl=en&q=Kil%2C+C.%2C+Jun%2C+J.%2C+Bookholt%2C+C.%2C+Xu%2C+J.%2C+and+Ning%2C+P.+2006.+Address+space+layout+permutation+%28aslp%29%3A+Towards+fine-grained+randomization+of+commodity+software.+In+Proceedings+of+the+22nd+Annual+Computer+Security+Applications+Conference.+10.1109%2FACSAC.2006.9+
http://scholar.google.com/scholar?hl=en&q=Kim%2C+D.+J.%2C+Kim%2C+T.+H.%2C+Kim%2C+J.%2C+and+Hong%2C+S.+J.+2006.+Return+address+randomization+scheme+for+annuling+data-injection+buffer+overflow+attacks.+In+Proceedings+of+the+2nd+Conference+on+Information+Security+and+Cryptology.+10.1007%2F11937807_19+
http://scholar.google.com/scholar?hl=en&q=Kiriansky%2C+V.%2C+Bruening%2C+D.%2C+and+Amarasinghe%2C+S.+2002.+Secure+execution+via+program+shepherding.+In+Proceedings+of+the+11th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Kohli%2C+P.+and+Bruhadeshwar%2C+B.+2008.+Formatshield%3A+A+binary+rewriting+defense+against+format+string+attacks.+In+Proceedings+of+the+13th+Australasian+Conference+on+Information+Security+and+Privacy.+10.1007%2F978-3-540-70500-0_28+
http://scholar.google.com/scholar?hl=en&q=Kowshik%2C+S.%2C+Dhurjati%2C+D.%2C+and+Adve%2C+V.+2002.+Ensuring+code+safety+without+runtime+checks+for+real-time+control+systems.+In+Proceedings+of+the+International+Conference+on+Compilers%2C+Architecture+and+Synthesis+for+Embedded+Systems.+10.1145%2F581630.581678+
http://scholar.google.com/scholar?hl=en&q=Krennmair%2C+A.+2003.+ContraPolice%3A+a+libc+extension+for+protecting+applications+from+heap-smashing+attacks.+http%3A%2F%2Fsynflood.at%2Fpapers%2Fcp.pdf.
http://scholar.google.com/scholar?hl=en&q=Kruegel%2C+C.%2C+Kirda%2C+E.%2C+Mutz%2C+D.%2C+Robertson%2C+W.%2C+and+Vigna%2C+G.+2005.+Automating+mimicry+attacks+using+static+binary+analysis.+In+Proceedings+of+the+14th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Lam%2C+L.+and+Chiueh%2C+T.+2005.+Checking+array+bound+violation+using+segmentation+hardware.+In+Proceedings+of+the+International+Conference+on+Dependable+Systems+and+Networks.+10.1109%2FDSN.2005.25+
http://scholar.google.com/scholar?hl=en&q=Larus%2C+J.+R.%2C+Ball%2C+T.%2C+Das%2C+M.%2C+DeLine%2C+R.%2C+F%C3%A4hndrich%2C+M.%2C+Pincus%2C+J.%2C+Rajamani%2C+S.+K.%2C+and+Venkatapathy%2C+R.+2004.+Righting+software.+IEEE+Softw.+21%2C+3.+10.1109%2FMS.2004.1293079+
http://scholar.google.com/scholar?hl=en&q=Lattner%2C+C.+and+Adve%2C+V.+2005.+Automatic+pool+allocation%3A+Improving+performance+by+controlling+data+structure+layout+in+the+heap.+In+Proceedings+of+the+ACM+Conference+on+Programming+Language+Design+and+Implementation.+10.1145%2F1065010.1065027+
http://scholar.google.com/scholar?hl=en&q=Lee%2C+R.+B.%2C+Karig%2C+D.+K.%2C+McGregor%2C+J.+P.%2C+and+Shi%2C+Z.+2003.+Enlisting+hardware+architecture+to+thwart+malicious+code+injection.+In+Proceedings+of+the+1st+International+Conference+on+Security+in+Pervasive+Computing.
http://scholar.google.com/scholar?hl=en&q=Lhee%2C+K.-S.+and+Chapin%2C+S.+J.+2002.+Type-assisted+dynamic+buffer+overflow+detection.+In+Proceedings+of+the+11th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Li%2C+W.+and+Chiueh%2C+T.+2007.+Automated+format+string+attack+prevention+for+win32%2Fx86+binaries.+In+Proceedings+of+the+23rd+Annual+Computer+Security+Applications+Conference.
http://scholar.google.com/scholar?hl=en&q=Liang%2C+Z.%2C+Liang%2C+B.%2C+and+Li%2C+L.+2009.+A+system+call+randomization-based+method+for+countering+code-injection+attacks.+Int.+J.+Inform.+Technol.+Comp.+Sci.+1%2C+1.
http://scholar.google.com/scholar?hl=en&q=Lin%2C+C.%2C+Rajagopalan%2C+M.%2C+Baker%2C+S.%2C+Collberg%2C+C.%2C+Debray%2C+S.%2C+and+Hartman%2C+J.+2005.+Protecting+against+unexpected+system+calls.+In+Proceedings+of+the+14th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Lin%2C+Y.-D.%2C+Wu%2C+F.-C.%2C+Lai%2C+Y.-C.%2C+Huang%2C+T.-Y.%2C+and+Lin%2C+F.+2010.+Embedded+tainttracker%3A+Lightweight+tracking+of+taint+data+against+buffer+overflow+attacks.+In+Proceedings+of+the+International+Conference+on+Communications.
http://scholar.google.com/scholar?hl=en&q=Lin%2C+Z.%2C+Riley%2C+R.+D.%2C+and+Xu%2C+D.+2009.+Polymorphing+software+by+randomizing+data+structure+layout.+In+Proceedings+of+the+6th+International+Conference+on+Detection+of+Intrusions+and+Malware%2C+and+Vulnerability+Assessment.+10.1007%2F978-3-642-02918-9_7+
http://scholar.google.com/scholar?hl=en&q=McCamant%2C+S.+and+Morrisett%2C+G.+2006.+Evaluating+SFI+for+a+CISC+architecture.+In+Proceedings+of+the+15th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Messier%2C+M.+and+Viega%2C+J.+2003.+Safe+c+string+library+v1.0.2.+http%3A%2F%2Fwww.zork.org%2Fsafestr.
http://scholar.google.com/scholar?hl=en&q=Microsoft.+2003.+Buffer+overrun+in+RPC+interface+could+allow+code+execution.+Microsoft+Security+Bulletin+MS03-026.
http://scholar.google.com/scholar?hl=en&q=Miller%2C+T.+C.+and+de+Raadt%2C+T.+1999.+strlcpy+and+strlcat%E2%80%94Consistent%2C+safe+string+copy+and+concatenation.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference.+
http://scholar.google.com/scholar?hl=en&q=Nagarakatte%2C+S.%2C+Zhao%2C+J.%2C+Martin%2C+M.+M.%2C+and+Zdancewic%2C+S.+2009.+Softbound%3A+Highly+compatible+and+complete+spatial+memory+safety+for+C.+In+Proceedings+of+the+ACM+Conference+on+Programming+Language+Design+and+Implementation.+10.1145%2F1542476.1542504+
http://scholar.google.com/scholar?hl=en&q=Nagarakatte%2C+S.%2C+Zhao%2C+J.%2C+Martin%2C+M.+M.%2C+and+Zdancewic%2C+S.+2010.+Cets%3A+Compiler+Enforced+Temporal+Safety+for+C.+In+Proceedings+of+the+International+Symposium+on+Memory+Management.+10.1145%2F1806651.1806657+
http://scholar.google.com/scholar?hl=en&q=Nanda%2C+S.%2C+Li%2C+W.%2C+Lam%2C+L.-C.%2C+and+Chiueh%2C+T.-c.+2006.+Foreign+code+detection+on+the+windows%2Fx86+platform.+In+Proceedings+of+the+22nd+Annual+Computer+Security+Applications+Conference.+10.1109%2FACSAC.2006.29+
http://scholar.google.com/scholar?hl=en&q=Necula%2C+G.%2C+McPeak%2C+S.%2C+and+Weimer%2C+W.+2002.+CCured%3A+Type-safe+retrofitting+of+legacy+code.+In+Proceedings+of+the+29th+Symposium+on+Principles+of+Programming+Languages.+10.1145%2F503272.503286+
http://scholar.google.com/scholar?hl=en&q=Nethercote%2C+N.+and+Fitzhardinge%2C+J.+2004.+Bounds-checking+entire+programs+without+recompiling.+In+Proceedings+of+the+2nd+Workshop+on+Semantics%2C+Program+Analysis%2C+and+Computing+Environments+for+Memory+Management.
http://scholar.google.com/scholar?hl=en&q=Newsome%2C+J.+and+Song%2C+D.+2005.+Dynamic+taint+analysis+for+automatic+detection%2C+analysis%2C+and+signature+generation+of+exploits+on+commodity+software.+In+Proceedings+of+the+12th+Annual+Network+and+Distributed+System+Security+Symposium.
http://scholar.google.com/scholar?hl=en&q=Oiwa%2C+Y.%2C+Sekiguchi%2C+T.%2C+Sumii%2C+E.%2C+and+Yonezawa%2C+A.+2002.+Fail-safe+ANSI-C+compiler%3A+An+approach+to+making+C+programs+secure%3A+Progress+report.+In+Proceedings+of+the+International+Symposium+on+Software+Security.+
http://scholar.google.com/scholar?hl=en&q=Parampalli%2C+C.%2C+Sekar%2C+R.%2C+and+Johnson%2C+R.+2008.+A+practical+mimicry+attack+against+powerful+system-call+monitors.+In+Proceedings+of+the+ACM+Symposium+on+Information%2C+Computer+and+Communications+Security.+10.1145%2F1368310.1368334+
http://scholar.google.com/scholar?hl=en&q=Patel%2C+K.%2C+Parameswaran%2C+S.%2C+and+Shee%2C+S.+L.+2007.+Ensuring+secure+program+execution+in+multiprocessor+embedded+systems%3A+A+case+study.+In+Proceedings+of+the+5th+IEEE%2FACM+International+Conference+on+Hardware%2FSoftware+Codesign+and+System+Synthesis.+10.1145%2F1289816.1289833+
http://scholar.google.com/scholar?hl=en&q=Patil%2C+H.+and+Fischer%2C+C.+N.+1997.+Low-cost%2C+concurrent+checking+of+pointer+and+array+accesses+in+C+programs.+Softw.+Pract.+Exp.+27%2C+1.+10.1002%2F%28SICI%291097-024X%28199701%2927%3A1%253C87%3A%3AAID-SPE78%253E3.0.CO%3B2-P+
http://scholar.google.com/scholar?hl=en&q=Perens%2C+B.+1987.+Electric+fence.+http%3A%2F%2Fperens.com.
http://scholar.google.com/scholar?hl=en&q=Pozza%2C+D.%2C+Sisto%2C+R.%2C+Durante%2C+L.%2C+and+Valenzano%2C+A.+2006.+Comparing+lexical+analysis+tools+for+buffer+overflow+detection+in+network+software.+In+Proceedings+of+the+1st+International+Conference+on+Communication+System+Software+and+Middleware.
http://scholar.google.com/scholar?hl=en&q=Prasad%2C+M.+and+Chiueh%2C+T.+2003.+A+binary+rewriting+defense+against+stack-based+overflow+attacks.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference.
http://scholar.google.com/scholar?hl=en&q=Prevelakis%2C+V.+and+Spinellis%2C+D.+2001.+Sandboxing+applications.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference.+
http://scholar.google.com/scholar?hl=en&q=Provos%2C+N.+2003.+Improving+host+security+with+system+call+policies.+In+Proceedings+of+the+12th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Qin%2C+F.%2C+Wang%2C+C.%2C+Li%2C+Z.%2C+Kim%2C+H.-s.%2C+Zhou%2C+Y.%2C+and+Wu%2C+Y.+2006.+Lift%3A+A+low-overhead+practical+information+flow+tracking+system+for+detecting+security+attacks.+In+Proceedings+of+the+39th+Annual+IEEE%2FACM+International+Symposium+on+Microarchitecture.+10.1109%2FMICRO.2006.29+
http://scholar.google.com/scholar?hl=en&q=Rabek%2C+J.+C.%2C+Khazan%2C+R.+I.%2C+Lewandowski%2C+S.+M.%2C+and+Cunningham%2C+R.+K.+2003.+Detection+of+injected%2C+dynamically+generated%2C+and+obfuscated+malicious+code.+In+Proceedings+of+the+ACM+Workshop+on+Rapid+Malcode.+10.1145%2F948187.948201+
http://scholar.google.com/scholar?hl=en&q=Rajagopalan%2C+M.%2C+Hiltunen%2C+M.%2C+Jim%2C+T.%2C+and+Schlichting%2C+R.+2005.+Authenticated+system+calls.+In+Proceedings+of+the+International+Conference+on+Dependable+Systems+and+Networks.+10.1109%2FDSN.2005.23+
http://scholar.google.com/scholar?hl=en&q=Ratanaworabhan%2C+P.%2C+Livshits%2C+B.%2C+and+Zorn%2C+B.+2009.+Nozzle%3A+A+defense+against+heap-spraying+code+injection+attacks.+In+Proceedings+of+the+18th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Rinard%2C+M.%2C+Cadar%2C+C.%2C+Dumitran%2C+D.%2C+Roy%2C+D.%2C+Leu%2C+T.%2C+and+Beebee%2C+W.+S.+2004.+Enhancing+server+availability+and+security+through+failure-oblivious+computing.+In+Proceedings+of+the+6th+Symposium+on+Operating+Systems+Design+and+Implementation.+
http://scholar.google.com/scholar?hl=en&q=Rinard%2C+M.%2C+Cadar%2C+C.%2C+Dumitran%2C+D.%2C+Roy%2C+D.+M.%2C+and+Leu%2C+T.+2004.+A+dynamic+technique+for+eliminating+buffer+overflow+vulnerabilities+%28and+other+memory+errors%29.+In+Proceedings+of+the+20th+Annual+Computer+Security+Applications+Conference.+10.1109%2FCSAC.2004.2+
http://scholar.google.com/scholar?hl=en&q=Ringenburg%2C+M.+F.+and+Grossman%2C+D.+2005.+Preventing+format-string+attacks+via+automatic+and+efficient+dynamic+checking.+In+Proceedings+of+the+12th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F1102120.1102166+
http://scholar.google.com/scholar?hl=en&q=rix.+2000.+Smashing+C%2B%2B+VPTRs.+Phrack+56.
http://scholar.google.com/scholar?hl=en&q=Robbins%2C+T.+2001.+Libformat.+http%3A%2F%2Fwww.securityfocus.com%2Ftools%2F1818.
http://scholar.google.com/scholar?hl=en&q=Robertson%2C+W.%2C+Kruegel%2C+C.%2C+Mutz%2C+D.%2C+and+Valeur%2C+F.+2003.+Runtime+detection+of+heap-based+overflows.+In+Proceedings+of+the+17th+Large+Installation+Systems+Administrators+Conference.+
http://scholar.google.com/scholar?hl=en&q=Roglia%2C+G.+F.%2C+Martignoni%2C+L.%2C+Paleari%2C+R.%2C+and+Bruschi%2C+D.+2009.+Surgically+returning+to+randomized+lib%28c%29.+In+Proceedings+of+the+25th+Annual+Computer+Security+Applications+Conference.+10.1109%2FACSAC.2009.16+
http://scholar.google.com/scholar?hl=en&q=Ruwase%2C+O.+and+Lam%2C+M.+S.+2004.+A+practical+dynamic+buffer+overflow+detector.+In+Proceedings+of+the+11th+Annual+Network+and+Distributed+System+Security+Symposium.
http://scholar.google.com/scholar?hl=en&q=Salamat%2C+B.%2C+Jackson%2C+T.%2C+Gal%2C+A.%2C+and+Franz%2C+M.+2009.+Orchestra%3A+Intrusion+detection+using+parallel+execution+and+monitoring+of+program+variants+in+user-space.+In+Proceedings+of+the+4th+ACM+European+Conference+on+Computer+Systems.+10.1145%2F1519065.1519071+
http://scholar.google.com/scholar?hl=en&q=Saltzer%2C+J.+H.+and+Schroeder%2C+M.+D.+1975.+The+protection+of+information+in+computer+systems.+Proc.+IEEE+63%2C+9.
http://scholar.google.com/scholar?hl=en&q=scut.+2001.+Exploiting+format+string+vulnerabilities.+http%3A%2F%2Fcrypto.stanford.edu%2Fcs155%2Fpapers%2Fformatstring-1.2.pdf.
http://scholar.google.com/scholar?hl=en&q=Sekar%2C+R.%2C+Bendre%2C+M.%2C+Dhurjati%2C+D.%2C+and+Bollineni%2C+P.+2001.+A+fast+automaton-based+method+for+detecting+anomalous+program+behaviors.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+
http://scholar.google.com/scholar?hl=en&q=Shacham%2C+H.+2007.+The+geometry+of+innocent+flesh+on+the+bone%3A+Return-into-libc+without+function+calls+%28on+the+x86%29.+In+Proceedings+of+the+14th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F1315245.1315313+
http://scholar.google.com/scholar?hl=en&q=Shacham%2C+H.%2C+Page%2C+M.%2C+Pfaff%2C+B.%2C+Goh%2C+E.-J.%2C+Modadugu%2C+N.%2C+and+Boneh%2C+D.+2004.+On+the+Effectiveness+of+Address-Space+Randomization.+In+Proceedings+of+the+11th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F1030083.1030124+
http://scholar.google.com/scholar?hl=en&q=Shao%2C+Z.%2C+Cao%2C+J.%2C+Chan%2C+K.+C.+C.%2C+Xue%2C+C.%2C+and+Sha%2C+E.+H.-M.+2006.+Hardware%2Fsoftware+optimization+for+array+%26+pointer+boundary+checking+against+buffer+overflow+attacks.+J.+Parall.+Distrib.+Comput.+66%2C+9.+10.1016%2Fj.jpdc.2006.04.010+
http://scholar.google.com/scholar?hl=en&q=Shao%2C+Z.%2C+Zhuge%2C+Q.%2C+He%2C+Y.%2C+and+Sha%2C+E.+H.+M.+2003.+Defending+embedded+systems+against+buffer+overflow+via+hardware%2Fsoftware.+In+Proceedings+of+the+19th+Annual+Computer+Security+Applications+Conference.+
http://scholar.google.com/scholar?hl=en&q=Shinagawa%2C+T.+2006.+Segmentshield%3A+Exploiting+segmentation+hardware+for+protecting+against+buffer+overflow+attacks.+In+Proceedings+of+the+25th+IEEE+Symposium+on+Reliable+Distributed+Systems.+10.1109%2FSRDS.2006.43+
http://scholar.google.com/scholar?hl=en&q=SkyLined.+2004.+Internet+explorer+iframe+src%26name+parameter+bof+remote+compromise.+Microsoft+Corporation.
http://scholar.google.com/scholar?hl=en&q=Small%2C+C.+1997.+A+tool+for+constructing+safe+extensible+C%2B%2B+systems.+In+Proceedings+of+the+3rd+USENIX+Conference+on+Object-Oriented+Technologies.+
http://scholar.google.com/scholar?hl=en&q=Smirnov%2C+A.+and+Chiueh%2C+T.+2005.+Dira%3A+Automatic+detection%2C+identification+and+repair+of+control-hijacking+attacks.+In+Proceedings+of+the+Network+and+Distributed+System+Security+Symposium.
http://scholar.google.com/scholar?hl=en&q=Smith%2C+N.+P.+1997.+Stack+smashing+vulnerabilities+in+the+unix+operating+system.+http%3A%2F%2Freality.sgi.com%2Fnate%2Fmachines%2Fsecurity%2Fstack-smashing%2F.
http://scholar.google.com/scholar?hl=en&q=Snarskii%2C+A.+1997.+Freebsd+libc+stack+integrity+patch.
http://scholar.google.com/scholar?hl=en&q=Snarskii%2C+A.+1999.+Libparanoia.
http://scholar.google.com/scholar?hl=en&q=Solar+Designer.+1997.+Non-executable+stack+patch.
http://scholar.google.com/scholar?hl=en&q=Solar+Designer.+2000.+JPEG+COM+marker+processing+vulnerability+in+netscape+browsers.+http%3A%2F%2Fwww.+openwall.com%2Flinux.
http://scholar.google.com/scholar?hl=en&q=Sovarel%2C+A.+N.%2C+Evans%2C+D.%2C+and+Paul%2C+N.+2005.+Where%27s+the+feeb%26quest%3B+The+effectiveness+of+instruction+set+randomization.+In+Proceedings+of+the+14th+Conference+on+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Spafford%2C+E.+H.+1989.+Crisis+and+aftermath.+Commun.+ACM+32%2C+6.+10.1145%2F63526.63527+
http://scholar.google.com/scholar?hl=en&q=Steffen%2C+J.+L.+1992.+Adding+runtime+checking+to+the+portable+C+compiler.+Softw.+Pract.+Exp.+22%2C+4.+10.1002%2Fspe.4380220403+
http://scholar.google.com/scholar?hl=en&q=Strackx%2C+R.%2C+Younan%2C+Y.%2C+Philippaerts%2C+P.%2C+Piessens%2C+F.%2C+Lachmund%2C+S.%2C+and+Walter%2C+T.+2009.+Breaking+the+memory+secrecy+assumption.+In+Proceedings+of+the+2nd+European+Workshop+on+System+Security.+10.1145%2F1519144.1519145+
http://scholar.google.com/scholar?hl=en&q=Suh%2C+G.+E.%2C+Lee%2C+J.+W.%2C+Zhang%2C+D.%2C+and+Devadas%2C+S.+2004.+Secure+program+execution+via+dynamic+information+flow+tracking.+In+Proceedings+of+the+11th+International+Conference+on+Architectural+Support+for+Programming+Languages+and+Operating+Systems.+10.1145%2F1024393.1024404+
http://scholar.google.com/scholar?hl=en&q=The+PaX+Team.+2000.+Documentation+for+the+PaX+project.+http%3A%2F%2Fpax.grsecurity.net%2Fdocs%2F.
http://scholar.google.com/scholar?hl=en&q=Tuck%2C+N.%2C+Calder%2C+B.%2C+and+Varghese%2C+G.+2004.+Hardware+and+binary+modification+support+for+code+pointer+protection+from+buffer+overflow.+In+Proceedings+of+the+37th+Annual+IEEE%2FACM+International+Symposium+on+Microarchitecture.+10.1109%2FMICRO.2004.20+
http://scholar.google.com/scholar?hl=en&q=Vendicator.+2000.+Documentation+for+Stack+Shield.
http://scholar.google.com/scholar?hl=en&q=Viega%2C+J.+and+McGraw%2C+G.+2002.+Building+Secure+Software.+Addison-Wesley.
http://scholar.google.com/scholar?hl=en&q=Wagner%2C+D.+and+Dean%2C+D.+2001.+Intrusion+detection+via+static+analysis.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+
http://scholar.google.com/scholar?hl=en&q=Wahbe%2C+R.%2C+Lucco%2C+S.%2C+Anderson%2C+T.+E.%2C+and+Graham%2C+S.+L.+1993.+Efficient+software-based+fault+isolation.+In+Proceedings+of+the+14th+ACM+Symposium+on+Operating+System+Principles.+10.1145%2F168619.168635+
http://scholar.google.com/scholar?hl=en&q=Weiss%2C+Y.+and+Barrantes%2C+E.+G.+2006.+Known%2Fchosen+key+attacks+against+software+instruction+set+randomization.+In+Proceedings+of+the+22nd+Annual+Computer+Security+Applications+Conference.+10.1109%2FACSAC.2006.33+
http://scholar.google.com/scholar?hl=en&q=Wilander%2C+J.+and+Kamkar%2C+M.+2002.+A+comparison+of+publicly+available+tools+for+static+intrusion+prevention.+In+Proceedings+of+the+7th+Nordic+Workshop+on+Secure+IT+Systems.
http://scholar.google.com/scholar?hl=en&q=Wojtczuk%2C+R.+1998.+Defeating+Solar+Designer%27s+non-executable+stack+patch.+http%3A%2F%2Finsecure.org%2Fsploits%2Fnon-executable.stack.problems.html.
http://scholar.google.com/scholar?hl=en&q=Xu%2C+J.%2C+Kalbarczyk%2C+Z.%2C+and+Iyer%2C+R.+K.+2003.+Transparent+runtime+randomization+for+security.+In+Proceedings+of+the+22nd+International+Symposium+on+Reliable+Distributed+Systems.
http://scholar.google.com/scholar?hl=en&q=Xu%2C+J.%2C+Kalbarczyk%2C+Z.%2C+Patel%2C+S.%2C+and+Ravishankar%2C+K.+I.+2002.+Architecture+support+for+defending+against+buffer+overflow+attacks.+In+Proceedings+of+the+2nd+Workshop+on+Evaluating+and+Architecting+System+Dependability.
http://scholar.google.com/scholar?hl=en&q=Xu%2C+W.%2C+Bhatkar%2C+S.%2C+and+Sekar%2C+R.+2006.+Taint-enhanced+policy+enforcement%3A+A+practical+approach+to+defeat+a+wide+range+of+attacks.+In+Proceedings+of+the+15th+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Xu%2C+W.%2C+DuVarney%2C+D.+C.%2C+and+Sekar%2C+R.+2004.+An+efficient+and+backwards-compatible+transformation+to+ensure+memory+safety+of+C+programs.+In+Proceedings+of+the+12th+ACM+International+Symposium+on+Foundations+of+Software+Engineering.+10.1145%2F1029894.1029913+
http://scholar.google.com/scholar?hl=en&q=Yong%2C+S.+H.+and+Horwitz%2C+S.+2003.+Protecting+C+programs+from+attacks+via+invalid+pointer+dereferences.+In+Proceedings+of+the+9th+European+Software+Engineering+Conference.+10.1145%2F940071.940113+
http://scholar.google.com/scholar?hl=en&q=Younan%2C+Y.+2003.+An+overview+of+common+programming+security+vulnerabilities+and+possible+solutions.+M.S.+dissertation%2C+Vrije+Universiteit+Brussel.
http://scholar.google.com/scholar?hl=en&q=Younan%2C+Y.+2008.+Efficient+countermeasures+for+software+vulnerabilities+due+to+memory+management+errors.+Ph.D.+dissertation%2C+Katholieke+Universiteit+Leuven.
http://scholar.google.com/scholar?hl=en&q=Younan%2C+Y.%2C+Joosen%2C+W.%2C+and+Piessens%2C+F.+2006a.+Efficient+protection+against+heap-based+buffer+overflows+without+resorting+to+magic.+In+Proceedings+of+the+8th+International+Conference+on+Information+and+Communication+Security.+10.1007%2F11935308_27+
http://scholar.google.com/scholar?hl=en&q=Younan%2C+Y.%2C+Joosen%2C+W.%2C+and+Piessens%2C+F.+2006b.+Extended+protection+against+stack+smashing+attacks+without+performance+loss.+In+Proceedings+of+the+22nd+Annual+Computer+Security+Applications+Conference.+10.1109%2FACSAC.2006.27+
http://scholar.google.com/scholar?hl=en&q=Younan%2C+Y.%2C+Joosen%2C+W.%2C+Piessens%2C+F.%2C+and+Van+den+Eynden%2C+H.+2010a.+Improving+memory+management+security+for+C+and+C%2B%2B.+Int.+J.+Secure+Softw.+Eng.+2%2C+1.+10.4018%2Fjsse.2010040104+
http://scholar.google.com/scholar?hl=en&q=Younan%2C+Y.%2C+Philippaerts%2C+P.%2C+Cavallaro%2C+L.%2C+Sekar%2C+R.%2C+Piessens%2C+F.%2C+and+Joosen%2C+W.+2010b.+PAriCheck%3A+An+efficient+pointer+arithmetic+checker+for+C+programs.+In+Proceedings+of+the+ACM+Symposium+on+Information%2C+Computer+and+Communications+Security.+10.1145%2F1755688.1755707+
http://scholar.google.com/scholar?hl=en&q=Younan%2C+Y.%2C+Philippaerts%2C+P.%2C+Piessens%2C+F.%2C+Joosen%2C+W.%2C+Lachmund%2C+S.%2C+and+Walter%2C+T.+2009.+Filter-resistant+code+injection+on+ARM.+In+Proceedings+of+the+16th+ACM+Conference+on+Computer+and+Communications+Security.+10.1145%2F1653662.1653665+
http://scholar.google.com/scholar?hl=en&q=Zhu%2C+G.+and+Tyagi%2C+A.+2004.+Protection+against+indirect+overflow+attacks+on+pointers.+In+Proceedings+of+the+2nd+IEEE+International+Information+Assurance+Workshop.+
http://scholar.google.com/scholar?hl=en&q=Zuquete%2C+A.+2004.+Stackfences%3A+A+runtime+approach+for+detecting+stack+overflows.+In+Proceedings+of+the+1st+International+Conference+on+E-Business+and+Telecommunication+Networks.
