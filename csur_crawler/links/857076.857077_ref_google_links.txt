http://scholar.google.com/scholar?hl=en&q=Abrams%2C+P.+S.+1970.+An+APL+machine.+Ph.D.+dissertation.+Stanford+University%2C+Stanford%2C+CA.+Also%2C+Stanford+Linear+Accelerator+Center+%28SLAC%29+Rep.+114.+
http://scholar.google.com/scholar?hl=en&q=Adl-Tabatabai%2C+A.-R.%2C+Cierniak%2C+M.%2C+Lueh%2C+G.-Y.%2C+Parikh%2C+V.+M.%2C+and+Stichnoth%2C+J.+M.+1998.+Fast%2C+effective+code+generation+in+a+just-in-time+Java+compiler.+In+PLDI+%2798.+280%2D%2D290.+10.1145%2F277650.277740+
http://scholar.google.com/scholar?hl=en&q=Agesen%2C+O.+1996.+Concrete+type+inference%3A+Delivering+object-oriented+applications.+Ph.D.+dissertation.+Stanford+University%2C+Stanford%2C+CA.+Also+Tech.+Rep.+SMLI+TR-96-52%2C+Sun+Microsystems%2C+Santa+Clara%2C+CA+%28Jan.+1996%29.+
http://scholar.google.com/scholar?hl=en&q=Agesen%2C+O.+1997.+Design+and+implementation+of+Pep%2C+a+Java+just-in-time+translator.+Theor.+Prac.+Obj.+Syst.+3%2C+2%2C+127%2D%2D155.+10.1002%2F%28SICI%291096-9942%281997%293%3A2%253C127%3A%3AAID-TAPO4%253E3.0.CO%3B2-S+
http://scholar.google.com/scholar?hl=en&q=Agesen%2C+O.+and+H%C3%B6lzle%2C+U.+1995.+Type+feedback+vs.+concrete+type+inference%3A+A+comparison+of+optimization+techniques+for+object-oriented+languages.+In+Proceedings+of+OOPSLA+%2795.+91%2D%2D107.+10.1145%2F217838.217847+
http://scholar.google.com/scholar?hl=en&q=Altman%2C+E.%2C+Gschwind%2C+M.%2C+Sathaye%2C+S.%2C+Kosonocky%2C+S.%2C+Bright%2C+A.%2C+Fritts%2C+J.%2C+Ledak%2C+P.%2C+Appenzeller%2C+D.%2C+Agricola%2C+C.%2C+and+Filan%2C+Z.+2000a.+BOA%3A+The+architecture+of+a+binary+translation+processor.+Tech.+Rep.+RC+21665%2C+IBM+Research+Division%2C+Yorktown+Heights%2C+NY.
http://scholar.google.com/scholar?hl=en&q=Altman%2C+E.+R.%2C+Kaeli%2C+D.%2C+and+Sheffer%2C+Y.+2000b.+Welcome+to+the+opportunities+of+binary+translation.+IEEE+Comput.+33%2C+3+%28March%29%2C+40%2D%2D45.+10.1109%2F2.825694+
http://scholar.google.com/scholar?hl=en&q=Armstrong%2C+J.+1997.+The+development+of+Erlang.+In+Proceedings+of+ICFP+%2797+%281997%29.+196%2D%2D203.+10.1145%2F258948.258967+
http://scholar.google.com/scholar?hl=en&q=Auslander%2C+J.%2C+Philipose%2C+M.%2C+Chambers%2C+C.%2C+Eggers%2C+S.+J.%2C+and+Bershad%2C+B.+N.+1996.+Fast%2C+effective+dynamic+compilation.+In+Proceedings+of+PLDI+%2796.+149%2D%2D159.+10.1145%2F231379.231409+
http://scholar.google.com/scholar?hl=en&q=Azevedo%2C+A.%2C+Nicolau%2C+A.%2C+and+Hummel%2C+J.+1999.+Java+annotation-aware+just-in-time+%28AJIT%29+compilation+system.+In+Proceedings+of+JAVA+%2799.+142%2D%2D151.+10.1145%2F304065.304115+
http://scholar.google.com/scholar?hl=en&q=Bala%2C+V.%2C+Duesterwald%2C+E.%2C+and+Banerjia%2C+S.+1999.+Transparent+dynamic+optimization.+Tech.+Rep.+HPL-1999-77%2C+Hewlett-Packard%2C+Polo+Alto%2C+CA.
http://scholar.google.com/scholar?hl=en&q=Bartlett%2C+J.+1992.+Familiar+Quotations+%2816th+ed.%29.+J.+Kaplan%2C+Ed.+Little%2C+Brown+and+Company%2C+Boston%2C+MA.
http://scholar.google.com/scholar?hl=en&q=Bell%2C+J.+R.+1973.+Threaded+code.+Commun.+ACM+16%2C+6+%28June%29%2C+370%2D%2D372.+10.1145%2F362248.362270+
http://scholar.google.com/scholar?hl=en&q=Bentley%2C+J.+1988.+Little+languages.+In+More+Programming+Pearls.+Addison-Wesley%2C+Reading%2C+MA%2C+83%2D%2D100.
http://scholar.google.com/scholar?hl=en&q=Bik%2C+A.+J.+C.%2C+Girkar%2C+M.%2C+and+Haghighat%2C+M.+R.+1999.+Experiences+with+Java+JIT+optimization.+In+Innovative+Architecture+for+Future+Generation+High-Performance+Processors+and+Systems.+IEEE+Computer+Society+Press%2C+Los+Alamitos%2C+CA%2C+87%2D%2D94.
http://scholar.google.com/scholar?hl=en&q=Brown%2C+P.+J.+1976.+Throw-away+compiling.+Softw.%2D%2D-Pract.+Exp.+6%2C+423%2D%2D434.
http://scholar.google.com/scholar?hl=en&q=Brown%2C+P.+J.+1990.+Writing+Interactive+Compilers+and+Interpreters.+Wiley%2C+New+York%2C+NY.
http://scholar.google.com/scholar?hl=en&q=Burger%2C+R.+G.+1997.+Efficient+compilation+and+profile-driven+dynamic+recompilation+in+scheme.+Ph.D.+dissertation%2C+Indiana+University%2C+Bloomington%2C+IN.+
http://scholar.google.com/scholar?hl=en&q=Burke%2C+M.+G.%2C+Choi%2C+J.-D.%2C+Fink%2C+S.%2C+Grove%2C+D.%2C+Hind%2C+M.%2C+Sarkar%2C+V.%2C+Serrano%2C+M.+J.%2C+Sreedhar%2C+V.+C.%2C+and+Srinivasan%2C+H.+1999.+The+Jalape+no+dynamic+optimizing+compiler+for+Java.+In+Proceedings+of+JAVA+%2799.+129%2D%2D141.+10.1145%2F304065.304113+
http://scholar.google.com/scholar?hl=en&q=Cardelli%2C+L.+1984.+Compiling+a+functional+language.+In+1984+Symposium+on+Lisp+and+Functional+Programming.+208%2D%2D217.+10.1145%2F800055.802037+
http://scholar.google.com/scholar?hl=en&q=Chambers%2C+C.+1992.+The+design+and+implementation+of+the+self+compiler%2C+an+optimizing+compiler+for+object-oriented+programming+languages.+Ph.D.+dissertation.+Stanford+University%2C+Stanford%2C+CA.+
http://scholar.google.com/scholar?hl=en&q=Chambers%2C+C.+and+Ungar%2C+D.+1989.+Customization%3A+optimizing+compiler+technology+for+Self%2C+a+dynamically-typed+object-oriented+programming+language.+In+Proceedings+of+PLDI+%2789.+146%2D%2D160.+10.1145%2F73141.74831+
http://scholar.google.com/scholar?hl=en&q=Chambers%2C+C.+and+Ungar%2C+D.+1990.+Iterative+type+analysis+and+extended+message+splitting%3A+Optimizing+dynamically-typed+object-oriented+programs.+In+Proceedings+of+PLDI+%2790.+150%2D%2D164.+10.1145%2F93542.93562+
http://scholar.google.com/scholar?hl=en&q=Chambers%2C+C.+and+Ungar%2C+D.+1991.+Making+pure+object-oriented+languages+practical.+In+Proceedings+of+OOPSLA+%2791.+1%2D%2D15.+10.1145%2F117954.117955+
http://scholar.google.com/scholar?hl=en&q=Chambers%2C+C.%2C+Ungar%2C+D.%2C+and+Lee%2C+E.+1989.+An+efficient+implementation+of+Self%2C+a+dynamically-typed+object-oriented+programming+language+based+on+prototypes.+In+Proceedings+of+OOPSLA+%2789.+49%2D%2D70.+10.1145%2F74877.74884+
http://scholar.google.com/scholar?hl=en&q=Chen%2C+W.-K.%2C+Lerner%2C+S.%2C+Chaiken%2C+R.%2C+and+Gillies%2C+D.+M.+2000.+Mojo%3A+a+dynamic+optimization+system.+In+Proceedings+of+the+Third+ACM+Workshop+on+Feedback-Directed+and+Dynamic+Optimization+%28FDDO-3%2C+Dec.+2000%29.
http://scholar.google.com/scholar?hl=en&q=Cierniak%2C+M.+and+Li%2C+W.+1997.+Briki%3A+an+optimizing+Java+compiler.+In+Proceedings+of+IEEE+COMPCON+%2797.+179%2D%2D184.+
http://scholar.google.com/scholar?hl=en&q=Cmelik%2C+B.+and+Keppel%2C+D.+1994.+Shade%3A+A+fast+instruction-set+simulator+for+execution+profiling.+In+Proceedings+of+the+1994+Conference+on+Measurement+and+Modeling+of+Computer+Systems.+128%2D%2D137.+10.1145%2F183018.183032+
http://scholar.google.com/scholar?hl=en&q=Consel%2C+C.%2C+Hornof%2C+L.%2C+Marlet%2C+R.%2C+Muller%2C+G.%2C+Thibault%2C+S.%2C+Volanschi%2C+E.-N.%2C+Lawall%2C+J.%2C+and+Noy%C3%A9%2C+J.+1998.+Tempo%3A+Specializing+systems+applications+and+beyond.+ACM+Comput.+Surv.+30%2C+3+%28Sept.%29%2C+5pp.+10.1145%2F289121.289140+
http://scholar.google.com/scholar?hl=en&q=Consel%2C+C.+and+No%C3%ABl%2C+F.+1996.+A+general+approach+for+run-time+specialization+and+its+application+to+C.+In+Proceedings+of+POPL+%2796.+145%2D%2D156.+10.1145%2F237721.237767+
http://scholar.google.com/scholar?hl=en&q=Cramer%2C+T.%2C+Friedman%2C+R.%2C+Miller%2C+T.%2C+Seberger%2C+D.%2C+Wilson%2C+R.%2C+and+Wolczko%2C+M.+1997.+Compiling+Java+just+in+time.+IEEE+Micro+17%2C+3+%28May%2FJune%29%2C+36%2D%2D43.+10.1109%2F40.591653+
http://scholar.google.com/scholar?hl=en&q=Dakin%2C+R.+J.+and+Poole%2C+P.+C.+1973.+A+mixed+code+approach.+The+Comput.+J.+16%2C+3%2C+219%2D%2D222.
http://scholar.google.com/scholar?hl=en&q=Dawson%2C+J.+L.+1973.+Combining+interpretive+code+with+machine+code.+The+Comput.+J.+16%2C+3%2C+216%2D%2D219.
http://scholar.google.com/scholar?hl=en&q=Deaver%2C+D.%2C+Gorton%2C+R.%2C+and+Rubin%2C+N.+1999.+Wiggins%2FRedstone%3A+An+on-line+program+specializer.+In+Proceedings+of+the+IEEE+Hot+Chips+XI+Conference+%28Aug.+1999%29.+IEEE+Computer+Society+Press%2C+Los%2C+Alamitos%2C+CA.
http://scholar.google.com/scholar?hl=en&q=Deutsch%2C+L.+P.+and+Schiffman%2C+A.+M.+1984.+Efficient+implementation+of+the+Smalltalk-80+system.+In+Proceedings+of+POPL+%2784.+297%2D%2D302.+10.1145%2F800017.800542+
http://scholar.google.com/scholar?hl=en&q=Dieckmann%2C+S.+and+H%C3%B6lzle%2C+U.+1997.+The+space+overhead+of+customization.+Tech.+Rep.+TRCS+97-21.+University+of+California%2C+Santa+Barbara%2C+Santa+Barbara%2C+CA.+
http://scholar.google.com/scholar?hl=en&q=Ebcio%C4%9Flu%2C+K.+and+Altman%2C+E.+R.+1996.+DAISY%3A+Dynamic+compilation+for+100%26percnt%3B+architectural+compatibility.+Tech.+Rep.+RC+20538.+IBM+Research+Division%2C+Yorktown+Heights%2C+NY.
http://scholar.google.com/scholar?hl=en&q=Ebcio%C4%9Flu%2C+K.+and+Altman%2C+E.+R.+1997.+Daisy%3A+Dynamic+compilation+for+100%26percnt%3B+architectural+compatibility.+In+Proceedings+of+ISCA+%2797.+26%2D%2D37.+10.1145%2F264107.264126+
http://scholar.google.com/scholar?hl=en&q=Engler%2C+D.+R.+1996.+VCODE%3A+a+retargetable%2C+extensible%2C+very+fast+dynamic+code+generation+system.+In+Proceedings+of+PLDI+%2796.+160%2D%2D170.+10.1145%2F231379.231411+
http://scholar.google.com/scholar?hl=en&q=Engler%2C+D.+R.+and+Hsieh%2C+W.+C.+2000.+DERIVE%3A+A+tool+that+automatically+reverse-engineers+instruction+encodings.+In+Proceedings+of+the+ACM+SIGPLAN+Workshop+on+Dynamic+and+Adaptive+Compilation+and+Optimization+%28Dynamo+%2700%29.+12%2D%2D22.+10.1145%2F351397.351409+
http://scholar.google.com/scholar?hl=en&q=Engler%2C+D.+R.%2C+Hsieh%2C+W.+C.%2C+and+Kaashoek%2C+M.+F.+1996.+C%3A+A+language+for+high-level%2C+efficient%2C+and+machine-independent+dynamic+code+generation.+In+Proceedings+of+POPL+%2796.+131%2D%2D144.+10.1145%2F237721.237765+
http://scholar.google.com/scholar?hl=en&q=Engler%2C+D.+R.+and+Proebsting%2C+T.+A.+1994.+DCG%3A+An+efficient%2C+retargetable+dynamic+code+generation+system.+In+Proceedings+of+ASPLOS+VI.+263%2D%2D272.+10.1145%2F195473.195567+
http://scholar.google.com/scholar?hl=en&q=Franz%2C+M.+1994.+Code-generation+on-the-fly%3A+A+key+to+portable+software.+Ph.D.+dissertation.+ETH+Zurich%2C+Zurich%2C+Switzerland.
http://scholar.google.com/scholar?hl=en&q=Franz%2C+M.+and+Kistler%2C+T.+1997.+Slim+binaries.+Commun.+ACM+40%2C+12+%28Dec.%29%2C+87%2D%2D94.+10.1145%2F265563.265576+
http://scholar.google.com/scholar?hl=en&q=Fraser%2C+C.+W.+and+Proebsting%2C+T.+A.+1999.+Finite-state+code+generation.+In+Proceedings+of+PLDI+%2799.+270%2D%2D280.+10.1145%2F301618.301680+
http://scholar.google.com/scholar?hl=en&q=Gabriel%2C+R.+P.+and+Masinter%2C+L.+M.+1985.+Performance+and+Evaluation+of+Lisp+Systems.+MIT+Press%2C+Cambridge%2C+MA.+
http://scholar.google.com/scholar?hl=en&q=Geppert%2C+L.+and+Perry%2C+T.+S.+2000.+Transmeta%27s+magic+show.+IEEE+Spectr.+37%2C+5+%28May%29%2C+26%2D%2D33.+10.1109%2F6.842131+
http://scholar.google.com/scholar?hl=en&q=Goldberg%2C+A.+and+Robson%2C+D.+1985.+Smalltalk-80%3A+The+Language+and+its+Implementation.+Addison-Wesley%2C+Reading%2C+MA.+
http://scholar.google.com/scholar?hl=en&q=Gorton%2C+R.+2001.+Private+communication.
http://scholar.google.com/scholar?hl=en&q=Gosling%2C+J.+2001.+Private+communication.
http://scholar.google.com/scholar?hl=en&q=Gschwind%2C+M.%2C+Altman%2C+E.+R.%2C+Sathaye%2C+S.%2C+Ledak%2C+P.%2C+and+Appenzeller%2C+D.+2000.+Dynamic+and+transparent+binary+translation.+IEEE+Comput.+33%2C+3%2C+54%2D%2D59.+10.1109%2F2.825696+
http://scholar.google.com/scholar?hl=en&q=Hammond%2C+J.+1977.+BASIC%2D%2D-an+evaluation+of+processing+methods+and+a+study+of+some+programs.+Softw.%2D%2D-Pract.+Exp.+7%2C+697%2D%2D711.
http://scholar.google.com/scholar?hl=en&q=Hansen%2C+G.+J.+1974.+Adaptive+systems+for+the+dynamic+run-time+optimization+of+programs.+Ph.D.+dissertation.+Carnegie-Mellon+University%2C+Pittsburgh%2C+PA.+
http://scholar.google.com/scholar?hl=en&q=Haygood%2C+R.+C.+1994.+Native+code+compilation+in+SICStus+Prolog.+In+Proceedings+of+the+Eleventh+International+Conference+on+Logic+Programming.+190%2D%2D204.+
http://scholar.google.com/scholar?hl=en&q=Hennessy%2C+J.+L.+and+Patterson%2C+D.+A.+1996.+Computer+Architecture%3A+A+Quantitative+Approach%2C+2nd+ed.+Morgan+Kaufmann%2C+San+Francisco%2C+CA.+
http://scholar.google.com/scholar?hl=en&q=H%C3%B6lzle%2C+U.+1994.+Adaptive+optimization+for+Self%3A+Reconciling+high+performance+with+exploratory+programming.+Ph.D.+dissertation.+Carnegie-Mellon+University%2C+Pittsburgh%2C+PA.
http://scholar.google.com/scholar?hl=en&q=H%C3%B6lzle%2C+U.+and+Ungar%2C+D.+1994a.+Optimizing+dynamically-dispatched+calls+with+run-time+type+feedback.+In+Proceedings+of+PLDI+%2794.+326%2D%2D336.+10.1145%2F178243.178478+
http://scholar.google.com/scholar?hl=en&q=H%C3%B6lzle%2C+U.+and+Ungar%2C+D.+1994b.+A+third-generation+Self+implementation%3A+Reconciling+responsiveness+with+performance.+In+Proceedings+of+OOPSLA+%2794.+229%2D%2D243.+10.1145%2F191080.191116+
http://scholar.google.com/scholar?hl=en&q=Ishizaki%2C+K.%2C+Kawahito%2C+M.%2C+Yasue%2C+T.%2C+Takeuchi%2C+M.%2C+Ogasawara%2C+T.%2C+Suganuma%2C+T.%2C+Onodera%2C+T.%2C+Komatsu%2C+H.%2C+and+Nakatani%2C+T.+1999.+Design%2C+implementation%2C+and+evaluation+of+optimizations+in+a+just-in-time+compiler.+In+Proceedings+of+JAVA+%2799.+119%2D%2D128.+10.1145%2F304065.304111+
http://scholar.google.com/scholar?hl=en&q=Johansson%2C+E.%2C+Pettersson%2C+M.%2C+and+Sagonas%2C+K.+2000.+A+high+performance+Erlang+system.+In+Proceedings+of+PPDP+%2700.+32%2D%2D43.+10.1145%2F351268.351273+
http://scholar.google.com/scholar?hl=en&q=Johnston%2C+R.+L.+1977.+The+dynamic+incremental+compiler+of+APL%26backslash%3B3000.+In+APL+%2779+Conference+Proceedings.+Published+in+APL+Quote+Quad+9%2C+4+%28June%29%2C+Pt.+1%2C+82%2D%2D87.+10.1145%2F800136.804442+
http://scholar.google.com/scholar?hl=en&q=Jones%2C+N.+D.%2C+Gomard%2C+C.+K.%2C+and+Sestoft%2C+P.+1993.+Partial+Evaluation+and+Automatic+Program+Generation.+Prentice+Hall%2C+Englewood+Cliffs%2C+NJ.+
http://scholar.google.com/scholar?hl=en&q=Keppel%2C+D.+1991.+A+portable+interface+for+on-the-fly+instruction+space+modification.+In+Proceedings+of+ASPLOS+IV.+86%2D%2D95.+10.1145%2F106972.106983+
http://scholar.google.com/scholar?hl=en&q=Keppel%2C+D.%2C+Eggers%2C+S.+J.%2C+and+Henry%2C+R.+R.+1991.+A+case+for+runtime+code+generation.+Tech.+Rep.+91-11-04.+Department+of+Computer+Science+and+Engineering%2C+University+of+Washington%2C+Seattle%2C+WA.
http://scholar.google.com/scholar?hl=en&q=Kistler%2C+T.+1997.+Dynamic+runtime+optimization.+In+Proceedings+of+the+Joint+Modular+Languages+Conference+%28JMLC+%2797%29.+53%2D%2D66.+
http://scholar.google.com/scholar?hl=en&q=Kistler%2C+T.+1999.+Continuous+program+optimization.+Ph.D.+dissertation.+University+of+California%2C+Irvine%2C+Irvine%2C+CA.+
http://scholar.google.com/scholar?hl=en&q=Kistler%2C+T.+2001.+Private+communication.
http://scholar.google.com/scholar?hl=en&q=Kistler%2C+T.+and+Franz%2C+M.+1999.+The+case+for+dynamic+optimization%3A+Improving+memory-hierarchy+performance+by+continuously+adapting+the+internal+storage+layout+of+heap+objects+at+run-time.+Tech.+Rep.+99-21+%28May%29.+University+of+California%2C+Irvine%2C+Irvine%2C+CA.+Revised+September%2C+1999.
http://scholar.google.com/scholar?hl=en&q=Klaiber%2C+A.+2000.+The+technology+behind+Crusoe+processors.+Tech.+Rep.+%28Jan.%29%2C+Transmeta+Corporation%2C+Santa+Clara%2C+CA.
http://scholar.google.com/scholar?hl=en&q=Knuth%2C+D.+E.+1971.+An+empirical+study+of+Fortran+programs.+Softw.%2D%2D-Pract.+Exp.+1%2C+105%2D%2D133.
http://scholar.google.com/scholar?hl=en&q=Krall%2C+A.+1998.+Efficient+JavaVM+just-in-time+compilation.+In+Proceedings+of+the+1998+International+Conference+on+Parallel+Architectures+and+Compilation+Techniques+%28PACT+%2798%29.+205%2D%2D212.+
http://scholar.google.com/scholar?hl=en&q=Krall%2C+A.+and+Grafl%2C+R.+1997.+A+Java+just-in-time+compiler+that+transcends+JavaVM%27s+32+bit+barrier.+In+Proceedings+of+PPoPP+%2797+Workshop+on+Java+for+Science+and+Engineering.
http://scholar.google.com/scholar?hl=en&q=Lee%2C+P.+and+Leone%2C+M.+1996.+Optimizing+ML+with+run-time+code+generation.+In+Proceedings+of+PLDI+%2796.+137%2D%2D148.+10.1145%2F231379.231407+
http://scholar.google.com/scholar?hl=en&q=Lee%2C+S.%2C+Yang%2C+B.-S.%2C+Kim%2C+S.%2C+Park%2C+S.%2C+Moon%2C+S.-M.%2C+Ebcio%C4%9Flu%2C+K.%2C+and+Altman%2C+E.+2000.+Efficient+Java+exception+handling+in+just-in-time+compilation.+In+Proceedings+of+Java+2000.+1%2D%2D8.+10.1145%2F337449.337453+
http://scholar.google.com/scholar?hl=en&q=Leone%2C+M.+and+Dybvig%2C+R.+K.+1997.+Dynamo%3A+A+staged+compiler+architecture+for+dynamic+program+optimization.+Tech.+Rep.+490.+Computer+Science+Department%2C+Indiana+University%2C+Bloomington%2C+IN.
http://scholar.google.com/scholar?hl=en&q=Leone%2C+M.+and+Lee%2C+P.+1994.+Lightweight+run-time+code+generation.+In+Proceedings+of+the+ACM+SIGPLAN+Workshop+on+Partial+Evaluation+and+Semantics-Based+Program+Manipulation.+97%2D%2D106.
http://scholar.google.com/scholar?hl=en&q=Marlet%2C+R.%2C+Consel%2C+C.%2C+and+Boinot%2C+P.+1999.+Efficient+incremental+run-time+specialization+for+free.+In+PLDI+%2799.+281%2D%2D292.+10.1145%2F301618.301681+
http://scholar.google.com/scholar?hl=en&q=Mauriello%2C+R.+2000.+Private+communication.
http://scholar.google.com/scholar?hl=en&q=May%2C+C.+1987.+Mimic%3A+A+fast+System%2F370+simulator.+In+Proceedings+of+the+SIGPLAN+%2787+Symposium+on+Interpreters+and+Interpretive+Techniques+%28June%29.+ACM+Press%2C+New+York%2C+NY%2C+1%2D%2D13.+10.1145%2F29650.29651+
http://scholar.google.com/scholar?hl=en&q=McCarthy%2C+J.+1960.+Recursive+functions+of+symbolic+expressions+and+their+computation+by+machine%2C+part+I.+Commun.+ACM+3%2C+4%2C+184%2D%2D195.+10.1145%2F367177.367199+
http://scholar.google.com/scholar?hl=en&q=McCarthy%2C+J.+1981.+History+of+LISP.+In+History+of+Programming+Languages%2C+R.+L.+Wexelblat%2C+Ed.+Academic+Press%2C+New+York%2C+NY%2C+173%2D%2D185.+10.1145%2F960118.808387+
http://scholar.google.com/scholar?hl=en&q=Miller%2C+T.+C.+1977.+Tentative+compilation%3A+A+design+for+an+APL+compiler.+In+APL+%2779+Conference+Proceedings.+Volume+9+Published+in+APL+Quote+Quad+9%2C+4+%28June%29%2C+Pt.+1%2C+88%2D%2D95.+10.1145%2F800136.804443+
http://scholar.google.com/scholar?hl=en&q=Mitchell%2C+J.+G.+1970.+The+design+and+construction+of+flexible+and+efficient+interactive+programming+systems.+Ph.D.+dissertation.+Carnegie-Mellon+University%2C+Pittsburgh%2C+PA.+
http://scholar.google.com/scholar?hl=en&q=Mitchell%2C+J.+G.+2000.+Private+communication.
http://scholar.google.com/scholar?hl=en&q=Mitchell%2C+J.+G.%2C+Perlis%2C+A.+J.%2C+and+van+Zoeren%2C+H.+R.+1968.+LC2%3A+A+language+for+conversational+computing.+In+Interactive+Systems+for+Experimental+Applied+Mathematics%2C+M.+Klerer+and+J.+Reinfelds%2C+Eds.+Academic+Press%2C+New+York%2C+NY.+%28Proceedings+of+1967+ACM+Symposium.%29
http://scholar.google.com/scholar?hl=en&q=Mock%2C+M.%2C+Berryman%2C+M.%2C+Chambers%2C+C.%2C+and+Eggers%2C+S.+J.+1999.+Calpa%3A+A+tool+for+automating+dynamic+compilation.+In+Proceedings+of+the+Second+ACM+Workshop+on+Feedback-Directed+and+Dynamic+Optimization.+100%2D%2D109.
http://scholar.google.com/scholar?hl=en&q=Ng%2C+T.+S.+and+Cantoni%2C+A.+1976.+Run+time+interaction+with+FORTRAN+using+mixed+code.+The+Comput.+J.+19%2C+1%2C+91%2D%2D92.
http://scholar.google.com/scholar?hl=en&q=Pittman%2C+T.+1987.+Two-level+hybrid+interpreter%2Fnative+code+execution+for+combined+space-time+program+efficiency.+In+Proceedings+of+the+SIGPLAN+Symposium+on+Interpreters+and+Interpretive+Techniques.+ACM+Press%2C+New+York%2C+NY%2C+150%2D%2D152.+10.1145%2F29650.29666+
http://scholar.google.com/scholar?hl=en&q=Piumarta%2C+I.+and+Riccardi%2C+F.+1998.+Optimizing+direct+threaded+code+by+selective+inlining.+In+Proceedings+of+PLDI+%2798.+291%2D%2D300.+10.1145%2F277650.277743+
http://scholar.google.com/scholar?hl=en&q=Plezbert%2C+M.+P.+and+Cytron%2C+R.+K.+1997.+Does+%22just+in+time%22+%3D+%22better+late+then+never%22%3F+In+Proceedings+of+POPL+%2797.+120%2D%2D131.+10.1145%2F263699.263713+
http://scholar.google.com/scholar?hl=en&q=Poletto%2C+M.%2C+Engler%2C+D.+R.%2C+and+Kaashoek%2C+M.+F.+1997.+tcc%3A+A+system+for+fast%2C+flexible%2C+and+high-level+dynamic+code+generation.+In+Proceedings+of+PLDI+%2797.+109%2D%2D121.+10.1145%2F258915.258926+
http://scholar.google.com/scholar?hl=en&q=Ramsey%2C+N.+and+Fern%C3%A1ndez%2C+M.+1995.+The+New+Jersey+machine-code+toolkit.+In+Proceedings+of+the+1995+USENIX+Technical+Conference.+289%2D%2D302.+
http://scholar.google.com/scholar?hl=en&q=Rau%2C+B.+R.+1978.+Levels+of+representation+of+programs+and+the+architecture+of+universal+host+machines.+In+Proceedings+of+the+11th+Annual+Microprogramming+Workshop+%28MICRO-11%29.+67%2D%2D79.+
http://scholar.google.com/scholar?hl=en&q=R%C3%A9my%2C+D.%2C+Leroy%2C+X.%2C+and+Weis%2C+P.+1999.+Objective+Caml%2D%2D-a+general+purpose+high-level+programming+language.+ERCIM+News+36%2C+29%2D%2D30.
http://scholar.google.com/scholar?hl=en&q=Rosenblum%2C+M.%2C+Herrod%2C+S.+A.%2C+Witchel%2C+E.%2C+and+Gupta%2C+A.+1995.+Complete+computer+system+simulation%3A+The+SimOS+approach.+IEEE+Parall.+Distrib.+Tech.+3%2C+4+%28Winter%29%2C+34%2D%2D43.+10.1109%2F88.473612+
http://scholar.google.com/scholar?hl=en&q=Schroeder%2C+S.+C.+and+Vaughn%2C+L.+E.+1973.+A+high+order+language+optimal+execution+processor%3A+Fast+Intent+Recognition+System+%28FIRST%29.+In+Proceedings+of+a+Symposium+on+High-Level-Language+Computer+Architecture.+Published+in+SIGPLAN+8%2C+11+%28Nov.%29%2C+109%2D%2D116.+10.1145%2F800121.803937+
http://scholar.google.com/scholar?hl=en&q=Sebesta%2C+R.+W.+1999.+Concepts+of+Programming+Languages+%284th+ed.%29.+Addison-Wesley%2C+Reading%2C+MA.+
http://scholar.google.com/scholar?hl=en&q=Smith%2C+R.+B.+and+Ungar%2C+D.+1995.+Programming+as+an+experience%3A+The+inspiration+for+Self.+In+Proceedings+of+ECOOP+%2795.+
http://scholar.google.com/scholar?hl=en&q=Sun+Microsystems.+2001.+The+Java+HotSpot+virtual+machine.+White+paper.+Sun+Microsystems%2C+Santa+Clara%2C+CA.
http://scholar.google.com/scholar?hl=en&q=Thibault%2C+S.%2C+Consel%2C+C.%2C+Lawall%2C+J.+L.%2C+Marlet%2C+R.%2C+and+Muller%2C+G.+2000.+Static+and+dynamic+program+compilation+by+interpreter+specialization.+Higher-Order+Symbol.+Computat.+13%2C+161%2D%2D178.+10.1023%2FA%3A1010078412711+
http://scholar.google.com/scholar?hl=en&q=Thompson%2C+K.+1968.+Regular+expression+search+algorithm.+Commun.+ACM+11%2C+6+%28June%29%2C+419%2D%2D422.+10.1145%2F363347.363387+
http://scholar.google.com/scholar?hl=en&q=Transmeta+Corporation.+2001.+Code+morphing+software.+Available+online+at+http%3A%2F%2Fwww.+transmeta.com%2Fechnology%2Farchitecture%2Fcode_morphing.html.+Transmeta+Corporation%2C+Santa+Clara%2C+CA.
http://scholar.google.com/scholar?hl=en&q=Tyma%2C+P.+1998.+Why+are+we+using+Java+again%3F+Commun.+ACM+41%2C+6%2C+38%2D%2D42.+10.1145%2F276609.276617+
http://scholar.google.com/scholar?hl=en&q=Ung%2C+D.+and+Cifuentes%2C+C.+2000.+Machine-adaptable+dynamic+binary+translation.+In+Proceedings+of+Dynamo+%2700.+41%2D%2D51.+10.1145%2F351397.351414+
http://scholar.google.com/scholar?hl=en&q=Ungar%2C+D.+and+Smith%2C+R.+B.+1987.+Self%3A+The+power+of+simplicity.+In+Proceedings+of+OOPSLA+%2787.+227%2D%2D242.+10.1145%2F38765.38828+
http://scholar.google.com/scholar?hl=en&q=Ungar%2C+D.%2C+Smith%2C+R.+B.%2C+Chambers%2C+C.%2C+and+H%C3%B6lzle%2C+U.+1992.+Object%2C+message%2C+and+performance%3A+How+they+coexist+in+Self.+IEEE+Comput.+25%2C+10+%28Oct.%29%2C+53%2D%2D64.+10.1109%2F2.161280+
http://scholar.google.com/scholar?hl=en&q=University+of+Michigan.+1966a.+The+System+Loader.+In+University+of+Michigan+Executive+System+for+the+IBM+7090+Computer%2C+Vol.+1.+University+of+Michigan%2C+Ann+Arbor%2C+MI.
http://scholar.google.com/scholar?hl=en&q=University+of+Michigan.+1966b.+The+%22University+of+Michigan+Assembly+Program%22+%28%22UMAP%22%29.+In+University+of+Michigan+Executive+System+for+the+IBM+7090+Computer%2C+Vol.+2.+University+of+Michigan%2C+Ann+Arbor%2C+MI.
http://scholar.google.com/scholar?hl=en&q=van+Dyke%2C+E.+J.+1977.+A+dynamic+incremental+compiler+for+an+interpretive+language.+Hewlett-Packard+J.+28%2C+11+%28July%29%2C+17%2D%2D24.
http://scholar.google.com/scholar?hl=en&q=van+Roy%2C+P.+1994.+The+wonder+years+of+sequential+Prolog+implementation.+J.+Logic+Program.+19%2D%2D20%2C+385%2D%2D441.
http://scholar.google.com/scholar?hl=en&q=Wickline%2C+P.%2C+Lee%2C+P.%2C+and+Pfenning%2C+F.+1998.+Run-time+code+generation+and+Modal-ML.+In+Proceedings+of+PLDI+%2798.+224%2D%2D235.+10.1145%2F277650.277727+
http://scholar.google.com/scholar?hl=en&q=Wirth%2C+N.+and+Gutknecht%2C+J.+1989.+The+Oberon+system.+Softw.%2D%2D-Pract.+Exp.+19%2C+9+%28Sep.%29%2C+857%2D%2D893.+10.1002%2Fspe.4380190905+
http://scholar.google.com/scholar?hl=en&q=Yang%2C+B.-S.%2C+Moon%2C+S.-M.%2C+Park%2C+S.%2C+Lee%2C+J.%2C+Lee%2C+S.%2C+Park%2C+J.%2C+Chung%2C+Y.+C.%2C+Kim%2C+S.%2C+Ebcio%C4%9Flu%2C+K.%2C+and+Altman%2C+E.+1999.+LaTTe%3A+A+Java+VM+just-in-time+compiler+with+fast+and+efficient+register+allocation.+In+Proceedings+of+the+International+Conference+on+Parallel+Architectures+and+Compilation+Techniques.+128%2D%2D138.+IEEE+Computer+Society+Press%2C+Los+Alamitos%2C+CA.+
http://scholar.google.com/scholar?hl=en&q=Zheng%2C+C.+and+Thompson%2C+C.+2000.+PA-RISC+to+IA-64%3A+Transparent+execution%2C+no+recompilation.+IEEE+Comput.+33%2C+3+%28March%29%2C+47%2D%2D52.+10.1109%2F2.825695+
