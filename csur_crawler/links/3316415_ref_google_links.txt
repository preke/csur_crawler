http://scholar.google.com/scholar?hl=en&q=Mart%C3%ADn+Abadi%2C+Mihai+Budiu%2C+%C3%9Alfar+Erlingsson%2C+and+Jay+Ligatti.+2005.+Control-flow+Integrity.+In+Proceedings+of+the+12th+ACM+Conference+on+Computer+and+Communications+Security+%28CCS%E2%80%9905%29.+ACM%2C+New+York%2C+NY%2C+340%2D%2D353.
http://scholar.google.com/scholar?hl=en&q=Hiralal+Agrawal.+1994.+On+slicing+programs+with+jump+statements.+In+Proceedings+of+the+ACM+SIGPLAN+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9994%29.+ACM%2C+New+York%2C+NY%2C+302%2D%2D312.
http://scholar.google.com/scholar?hl=en&q=Alfred+V.+Aho%2C+Ravi+Sethi%2C+and+Jeffrey+D.+Ullman.+1986.+Compilers%3A+Principles%2C+Techniques%2C+and+Tools%2C+vol.+7.+Addison+Wesley.+
http://scholar.google.com/scholar?hl=en&q=Frances+E.+Allen.+1970.+Control+flow+analysis.+SIGPLAN+Not.+5%2C+7+%28July+1970%29%2C+1%2D%2D19.+10.1145%2F390013.808479+
http://scholar.google.com/scholar?hl=en&q=David+W.+Wall+and+Amitabh+Srivastava.+1992.+A+Practical+System+for+Intermodule+Code+Optimization+at+Link-Time.+Technical+report.+Hewlett-Packard.
http://scholar.google.com/scholar?hl=en&q=Kapil+Anand%2C+Matthew+Smithson%2C+Khaled+Elwazeer%2C+Aparna+Kotha%2C+Jim+Gruen%2C+Nathan+Giles%2C+and+Rajeev+Barua.+2013.+A+compiler-level+intermediate+representation-based+binary+analysis+and+rewriting+system.+In+Proceedings+of+the+8th+ACM+European+Conference+on+Computer+Systems+%28EuroSys%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+295%2D%2D308.
http://scholar.google.com/scholar?hl=en&q=Kristy+Andrews+and+Duane+Sand.+1992.+Migrating+a+CISC+computer+family+onto+RISC+via+object+code+translation.+In+ACM+Sigplan+Notices%2C+Vol.+27.+ACM%2C+213%2D%2D222.+10.1145%2F143371.143520+
http://scholar.google.com/scholar?hl=en&q=Dennis+Andriesse%2C+Xi+Chen%2C+Victor+van+der+Veen%2C+Asia+Slowinska%2C+and+Herbert+Bos.+2016.+An+in-depth+analysis+of+disassembly+on+full-scale+x86%2Fx64+binaries.+In+Proceedings+of+the+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Dennis+Andriesse%2C+Asia+Slowinska%2C+and+Herbert+Bos.+2017.+Compiler-agnostic+function+detection+in+binaries.+In+Proceedings+of+the+IEEE+European+Symposium+on+Security+and+Privacy.
http://scholar.google.com/scholar?hl=en&q=P.+Arafa%2C+G.+M.+Tchamgoue%2C+H.+Kashif%2C+and+S.+Fischmeister.+2017.+QDIME%3A+QoS-aware+dynamic+binary+instrumentation.+In+Proceedings+of+the+IEEE+25th+International+Symposium+on+Modeling%2C+Analysis%2C+and+Simulation+of+Computer+and+Telecommunication+Systems+%28MASCOTS%E2%80%9917%29.+132%2D%2D142.
http://scholar.google.com/scholar?hl=en&q=Vasanth+Bala%2C+Evelyn+Duesterwald%2C+and+Sanjeev+Banerjia.+1999.+Transparent+Dynamic+Optimization%3A+The+Design+and+Implementation+of+Dynamo.+Technical+report.+Digital+Western+Research+Laboratory.
http://scholar.google.com/scholar?hl=en&q=Vasanth+Bala%2C+Evelyn+Duesterwald%2C+and+Sanjeev+Banerjia.+2011.+Dynamo%3A+A+transparent+dynamic+optimization+system.+ACM+SIGPLAN+Not.+46%2C+4+%282011%29%2C+41%2D%2D52.+10.1145%2F1988042.1988044+
http://scholar.google.com/scholar?hl=en&q=Gogul+Balakrishnan+and+Thomas+Reps.+2004.+Analyzing+memory+accesses+in+x86+executables.+In+Compiler+Construction.+Springer%2C+2732%2D%2D2733.
http://scholar.google.com/scholar?hl=en&q=Gogul+Balakrishnan+and+Thomas+Reps.+2010.+WYSINWYX%3A+What+you+see+is+not+what+you+eXecute.+ACM+Trans.+Program.+Lang.+Syst.+32%2C+6%2C+Article+23+%28Aug.+2010%29%2C+84+pages.+10.1145%2F1749608.1749612+
http://scholar.google.com/scholar?hl=en&q=Roberto+Baldoni%2C+Emilio+Coppa%2C+Daniele+Cono+D%E2%80%99elia%2C+Camil+Demetrescu%2C+and+Irene+Finocchi.+2018.+A+survey+of+symbolic+execution+techniques.+ACM+Comput.+Surv.+51%2C+3%2C+Article+50+%28May+2018%29%2C+39+pages.+10.1145%2F3182657+
http://scholar.google.com/scholar?hl=en&q=Tiffany+Bao%2C+Johnathon+Burket%2C+Maverick+Woo%2C+Rafael+Turner%2C+and+David+Brumley.+2014.+Byteweight%3A+Learning+to+recognize+functions+in+binary+code.+In+Proceedings+of+the+23rd+USENIX+Security+Symposium.+
http://scholar.google.com/scholar?hl=en&q=Erick+Bauman%2C+Zhiqiang+Lin%2C+and+Kevin+Hamlen.+2018.+Superset+disassembly%3A+Statically+rewriting+x86+binaries+without+heuristics.+In+Proceedings+of+the+25th+Annual+Network+and+Distributed+System+Security+Symposium+%28NDSS%E2%80%9918%29.
http://scholar.google.com/scholar?hl=en&q=Robert+Bedichek.+1990.+Some+efficient+architecture+simulation+techniques.+In+Proceedings+of+the+Winter+1990+USENIX+Conference.+53%2D%2D64.
http://scholar.google.com/scholar?hl=en&q=Fabrice+Bellard.+2005.+QEMU%2C+a+fast+and+portable+dynamic+translator.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference%2C+FREENIX+Track.+41%2D%2D46.+Retrieved+from+https%3A%2F%2Fwww.usenix.org%2Flegacy%2Fevent%2Fusenix05%2Ftech%2Ffreenix%2Ffull_papers%2Fbellard%2Fbellard_html%2F.+
http://scholar.google.com/scholar?hl=en&q=Arndt+B.+Bergh%2C+Keith+Keilman%2C+Daniel+J.+Magenheimer%2C+and+James+A.+Miller.+1987.+Hp-3000+emulation+on+HP+precision+architecture+computers.+Hewlett-Packard+J.+38%2C+11+%281987%29%2C+87%2D%2D89.
http://scholar.google.com/scholar?hl=en&q=Andrew+R.+Bernat+and+Barton+P.+Miller.+2011.+Anywhere%2C+any-time+binary+instrumentation.+In+Proceedings+of+the+10th+ACM+SIGPLAN-SIGSOFT+Workshop+on+Program+Analysis+for+Software+Tools+%28PASTE%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+9%2D%2D16.
http://scholar.google.com/scholar?hl=en&q=David+W.+Binkley+and+Keith+Brian+Gallagher.+1996.+Program+slicing.+Adv.+Comput.+43+%281996%29%2C+1%2D%2D50.
http://scholar.google.com/scholar?hl=en&q=Derek+Bruening%2C+Timothy+Garnett%2C+and+Saman+Amarasinghe.+2003.+An+infrastructure+for+adaptive+dynamic+optimization.+In+Proceedings+of+the+International+Symposium+on+Code+Generation+and+Optimization+%28CGO%E2%80%9903%29.+IEEE%2C+265%2D%2D275.
http://scholar.google.com/scholar?hl=en&q=David+Brumley%2C+Ivan+Jager%2C+Thanassis+Avgerinos%2C+and+Edward+J.+Schwartz.+2011.+BAP%3A+A+Binary+Analysis+Platform.+Springer%2C+Berlin%2C+463%2D%2D469.+
http://scholar.google.com/scholar?hl=en&q=Bryan+Buck+and+Jeffrey+K.+Hollingsworth.+2000.+An+API+for+runtime+code+patching.+Int.+J.+High+Perform.+Comput.+Appl.+14%2C+4+%282000%29%2C+317%2D%2D329.+10.1177%2F109434200001400404+
http://scholar.google.com/scholar?hl=en&q=Juan+Caballero+and+Zhiqiang+Lin.+2016.+Type+inference+on+executables.+ACM+Comput.+Surv.+48%2C+4%2C+Article+65+%28May+2016%29%2C+35+pages.+10.1145%2F2896499+
http://scholar.google.com/scholar?hl=en&q=Nicholas+Carlini%2C+Antonio+Barresi%2C+Mathias+Payer%2C+David+Wagner%2C+and+Thomas+R.+Gross.+2015.+Control-flow+bending%3A+On+the+effectiveness+of+control-flow+integrity.+In+Proceedings+of+the+USENIX+Security+Symposium.+161%2D%2D176.
http://scholar.google.com/scholar?hl=en&q=S.+K.+Cha%2C+T.+Avgerinos%2C+A.+Rebert%2C+and+D.+Brumley.+2012.+Unleashing+mayhem+on+binary+code.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+380%2D%2D394.+10.1109%2FSP.2012.31+
http://scholar.google.com/scholar?hl=en&q=D.+Chanet%2C+B.+De+Bus%2C+B.+De+Sutter%2C+L.+Van+Put%2C+and+K.+De+Bosschere.+2005.+DIABLO%3A+A+reliable%2C+retargetable+and+extensible+link-time+rewriting+framework.+In+Proceedings+of+the+IEEE+International+Symposium+on+Signal+Processing+and+Information+Technology+%28ISSPIT%E2%80%9905%29%2C+Vol.+00.+7%2D%2D12.
http://scholar.google.com/scholar?hl=en&q=Wen-Ke+Chen%2C+Sorin+Lerner%2C+Ronnie+Chaiken%2C+and+David+M.+Gillies.+2000.+Mojo%3A+A+dynamic+optimization+system.+In+Proceedings+of+the+3rd+ACM+Workshop+on+Feedback-Directed+and+Dynamic+Optimization+%28FDDO%E2%80%9900%29.+81%2D%2D90.
http://scholar.google.com/scholar?hl=en&q=David+Chisnall.+2013.+The+challenge+of+cross-language+interoperability.+Commun.+ACM+56%2C+12+%282013%29%2C+50%2D%2D56.
http://scholar.google.com/scholar?hl=en&q=C.+Cifuentes+and+V.+Malhotra.+1996.+Binary+translation%3A+Static%2C+dynamic%2C+retargetable%3F+In+Proceedings+of+the+International+Conference+on+Software+Maintenance.+340%2D%2D349.+
http://scholar.google.com/scholar?hl=en&q=C.+Cifuentes+and+M.+Van+Emmerik.+2000.+UQBT%3A+Adaptable+binary+translation+at+low+cost.+Computer+33%2C+3+%28Mar.+2000%29%2C+60%2D%2D66.+10.1109%2F2.825697+
http://scholar.google.com/scholar?hl=en&q=C.+Cifuentes+and+A.+Fraboulet.+1997.+Intraprocedural+static+slicing+of+binary+executables.+In+Proceedings+of+the+International+Conference+on+Software+Maintenance.+188%2D%2D195.+
http://scholar.google.com/scholar?hl=en&q=Cristina+Cifuentes%2C+Brian+Lewis%2C+and+David+Ung.+2002.+Walkabout%3A+A+retargetable+dynamic+binary+translation+framework.+Sun+Microsystems%2C+Inc.
http://scholar.google.com/scholar?hl=en&q=Bob+Cmelik+and+David+Keppel.+1995.+Shade%3A+A+fast+instruction-set+simulator+for+execution+profiling.+In+Fast+Simulation+of+Computer+Architectures.+Springer%2C+5%2D%2D46.
http://scholar.google.com/scholar?hl=en&q=Bryce+H.+Cogswell+and+Z.+Segall.+1995.+Timing+insensitive+binary-to-binary+migration+across+multiprocessor+architectures.+In+Proceedings+of+the+International+Workshop+on+Parallel+and+Distributed+Real-Time+Systems+%28WPDRTS%E2%80%9995%29.+IEEE%2C+193.
http://scholar.google.com/scholar?hl=en&q=Lucian+Cojocar%2C+Taddeus+Kroes%2C+and+Herbert+Bos.+2017.+JTR%3A+A+Binary+Solution+for+Switch-Case+Recovery.+Springer+International+Publishing%2C+Cham%2C+177%2D%2D195.
http://scholar.google.com/scholar?hl=en&q=Datapro+Research+Corporation.+1974.+Honeywell+Series+200+and+2000.+Retrieved+from+www.bitsavers.org%2Fpdf%2Fhoneywell%2Fdatapro%2F70C-480-01_7404_Honeywell_200_2000.pdf.
http://scholar.google.com/scholar?hl=en&q=Patrick+Cousot+and+Radhia+Cousot.+1992.+Abstract+interpretation+frameworks.+J.+Logic+Comput.+2%2C+4+%281992%29%2C+511%2D%2D547.
http://scholar.google.com/scholar?hl=en&q=Crispan+Cowan%2C+Calton+Pu%2C+Dave+Maier%2C+Jonathan+Walpole%2C+Peat+Bakke%2C+Steve+Beattie%2C+Aaron+Grier%2C+Perry+Wagle%2C+Qian+Zhang%2C+and+Heather+Hinton.+1998.+Stackguard%3A+Automatic+adaptive+detection+and+prevention+of+buffer-overflow+attacks.+In+Proceedings+of+the+USENIX+Security+Symposium%2C+vol.+98.+63%2D%2D78.+
http://scholar.google.com/scholar?hl=en&q=Lucas+Davi%2C+Ahmad-Reza+Sadeghi%2C+and+Marcel+Winandy.+2011.+ROPdefender%3A+A+detection+tool+to+defend+against+return-oriented+programming+attacks.+In+Proceedings+of+the+6th+ACM+Symposium+on+Information%2C+Computer%2C+and+Communications+Security.+ACM%2C+40%2D%2D51.+10.1145%2F1966913.1966920+
http://scholar.google.com/scholar?hl=en&q=J.+W.+Davidson%2C+J.+Hiser%2C+A.+Nguyen-Tuong%2C+M.+Co%2C+B.+D.+Rodes%2C+and+J.+C.+Knight.+2015.+Security+protection+of+binary+programs.+In+Proceedings+of+the+10th+IET+System+Safety+and+Cyber-Security+Conference+2015.+1%2D%2D6.
http://scholar.google.com/scholar?hl=en&q=J.+W.+Davidson%2C+J.+D.+Hiser%2C+A.+Nguyen-Tuong%2C+C.+L.+Coleman%2C+W.+H.+Hawkins%2C+J.+C.+Knight%2C+B.+D.+Rodes%2C+and+A.+B.+Hocking.+2016.+A+system+for+the+security+protection+of+embedded+binary+programs.+In+Proceedings+of+the+46th+Annual+IEEE%2FIFIP+International+Conference+on+Dependable+Systems+and+Networks+Workshop+%28DSNW%E2%80%9916%29.+234%2D%2D237.
http://scholar.google.com/scholar?hl=en&q=Bruno+De+Bus%2C+Bjorn+De+Sutter%2C+Ludo+Van+Put%2C+Dominique+Chanet%2C+and+Koen+De+Bosschere.+2004.+Link-time+optimization+of+ARM+binaries.+SIGPLAN+Not.+39%2C+7+%28June+2004%29%2C+211%2D%2D220.+10.1145%2F998300.997194+
http://scholar.google.com/scholar?hl=en&q=Alessandro+Di+Federico%2C+Mathias+Payer%2C+and+Giovanni+Agosta.+2017.+rev.ng%3A+A+unified+binary+analysis+framework+to+recover+CFGs+and+function+boundaries.+In+Proceedings+of+the+26th+International+Conference+on+Compiler+Construction.+ACM%2C+131%2D%2D141.+10.1145%2F3033019.3033028+
http://scholar.google.com/scholar?hl=en&q=Thomas+Dullien+and+Sebastian+Porst.2009.+REIL%3A+A+platform-independent+intermediate+representation+of+disassembled+code+for+static+code+analysis.+Retrieved+from+http%3A%2F%2Fwww.zynamics.com%2Fdownloads%2Fcsw09.pdf.
http://scholar.google.com/scholar?hl=en&q=Dyninst+Developers.+2016.+DynInst%E2%80%94Dynamic+Instrumentation+Framework.+Retrieved+from+http%3A%2F%2Fwww.dyninst.org%2Fparse.
http://scholar.google.com/scholar?hl=en&q=Andrew+Edwards%2C+Hoi+Vo%2C+Amitabh+Srivastava%2C+and+Amitabh+Srivastava.+2001.+Vulcan+Binary+Transformation+in+a+Distributed+Environment.+Technical+Report.
http://scholar.google.com/scholar?hl=en&q=Manuel+Egele%2C+Maverick+Woo%2C+Peter+Chapman%2C+and+David+Brumley.+2014.+Blanket+execution%3A+Dynamic+similarity+testing+for+program+binaries+and+components.+In+Proceedings+of+the+23rd+USENIX+Security+Symposium.
http://scholar.google.com/scholar?hl=en&q=Isaac+Evans%2C+Fan+Long%2C+Ulziibayar+Otgonbaatar%2C+Howard+Shrobe%2C+Martin+Rinard%2C+Hamed+Okhravi%2C+and+Stelios+Sidiroglou-Douskos.+2015.+Control+jujutsu%3A+On+the+weaknesses+of+fine-grained+control+flow+integrity.+In+Proceedings+of+the+22nd+ACM+SIGSAC+Conference+on+Computer+and+Communications+Security.+ACM%2C+901%2D%2D913.+10.1145%2F2810103.2813646+
http://scholar.google.com/scholar?hl=en&q=A.+Di+Federico+and+G.+Agosta.+2016.+A+jump-target+identification+method+for+multi-architecture+static+binary+translation.+In+Proceedings+of+the+International+Conference+on+Compliers%2C+Architectures%2C+and+Sythesis+of+Embedded+Systems+%28CASES%E2%80%9916%29.+1%2D%2D10.
http://scholar.google.com/scholar?hl=en&q=Jack+W.+Davidson+John+C.+Knight+Michele+Co+Jason+D.+Hiser+Anh+Gguyen-Tuong.+2016.+Kevlar%3A+Transitioning+helix+from+research+to+practice.+Technical+Report.
http://scholar.google.com/scholar?hl=en&q=Susan+L.+Graham%2C+Steven+Lucco%2C+and+Robert+Wahbe.+1995.+Adaptable+binary+programs.+In+Proceedings+of+the+USENIX+Security+Symposium.+315%2D%2D325.
http://scholar.google.com/scholar?hl=en&q=Niranjan+Hasabnis+and+R.+Sekar.+2015.+Automatic+generation+of+assembly+to+IR+translators+using+compilers.+Workshop+on+Architectural+and+Microarchitectural+Support+for+Binary+Translation.
http://scholar.google.com/scholar?hl=en&q=Niranjan+Hasabnis+and+R.+Sekar.+2016.+Lifting+assembly+to+intermediate+representation%3A+A+novel+approach+leveraging+compilers.+SIGOPS+Oper.+Syst.+Rev.+50%2C+2+%28Mar.+2016%29%2C+311%2D%2D324.+10.1145%2F2872362.2872380+
http://scholar.google.com/scholar?hl=en&q=W.+H.+Hawkins%2C+J.+D.+Hiser%2C+M.+Co%2C+A.+Nguyen-Tuong%2C+and+J.+W.+Davidson.+2017.+Zipr%3A+Efficient+static+binary+rewriting+for+security.+In+Proceedings+of+the+47th+Annual+IEEE%2FIFIP+International+Conference+on+Dependable+Systems+and+Networks+%28DSN%E2%80%9917%29.+559%2D%2D566.
http://scholar.google.com/scholar?hl=en&q=William+H.+Hawkins%2C+Jason+D.+Hiser%2C+and+Jack+W.+Davidson.+2016.+Dynamic+canary+randomization+for+improved+software+security.+In+Proceedings+of+the+11th+Annual+Cyber+and+Information+Security+Research+Conference+%28CISRC%E2%80%9916%29.+ACM%2C+New+York%2C+NY.
http://scholar.google.com/scholar?hl=en&q=Kim+Hazelwood.+2011.+Dynamic+binary+modification%3A+Tools%2C+techniques%2C+and+applications.+Synth.+Lect.+Comput.+Architect.+6%2C+2+%282011%29%2C+1%2D%2D81.+
http://scholar.google.com/scholar?hl=en&q=Kim+Hazelwood+and+Artur+Klauser.+2006.+A+dynamic+binary+instrumentation+engine+for+the+ARM+architecture.+In+Proceedings+of+the+International+Conference+on+Compilers%2C+Architecture%2C+and+Synthesis+for+Embedded+Systems.+ACM%2C+261%2D%2D270.+10.1145%2F1176760.1176793+
http://scholar.google.com/scholar?hl=en&q=Jason+Hiser%2C+Anh+Nguyen-Tuong%2C+William+Hawkins%2C+Matthew+McGill%2C+Michele+Co%2C+and+Jack+Davidson.+2017.+Zipr%2B%2B%3A+Exceptional+binary+rewriting.+In+Proceedings+of+the+Workshop+on+Forming+an+Ecosystem+Around+Software+Transformation+%28FEAST%E2%80%9917%29.+ACM%2C+New+York%2C+NY%2C+9%2D%2D15.
http://scholar.google.com/scholar?hl=en&q=J.+K.+Hollingsworth%2C+B.+P.+Miller%2C+and+J.+Cargille.+1994.+Dynamic+program+instrumentation+for+scalable+performance+tools.+In+Proceedings+of+the+IEEE+Scalable+High+Performance+Computing+Conference.+841%2D%2D850.
http://scholar.google.com/scholar?hl=en&q=Honeywell+Inc.+1966.+Honeywell+Series+200+Operating+Systems.+Retrieved+from+http%3A%2F%2Fs3data.computerhistory.org%2Fbrochures%2Fhoneywell.osorientationmgmt.1966.102646090.pdf.
http://scholar.google.com/scholar?hl=en&q=R.+Nigel+Horspool+and+Nenad+Marovac.+1980.+An+approach+to+the+problem+of+detranslation+of+computer+programs.+Comput.+J.+23%2C+3+%281980%29%2C+223%2D%2D229.
http://scholar.google.com/scholar?hl=en&q=Wei+Hu%2C+Jason+Hiser%2C+Dan+Williams%2C+Adrian+Filipi%2C+Jack+W.+Davidson%2C+David+Evans%2C+John+C.+Knight%2C+Anh+Nguyen-Tuong%2C+and+Jonathan+Rowanhill.+2006.+Secure+and+practical+defense+against+code-injection+attacks+using+software+dynamic+translation.+In+Proceedings+of+the+2nd+International+Conference+on+Virtual+Execution+Environments.+ACM%2C+2%2D%2D12.+10.1145%2F1134760.1134764+
http://scholar.google.com/scholar?hl=en&q=Intel+Inc.+2016.+Intel+XED.+Retrieved+from+https%3A%2F%2Fintelxed.github.io%2F.
http://scholar.google.com/scholar?hl=en&q=Josh+Poimboeuf+Seth+Jennings.+2014.+Kpatch.+Retrieved+from+http%3A%2F%2Frhelblog.redhat.com%2F2014%2F02%2F26%2Fkpatch%2F.
http://scholar.google.com/scholar?hl=en&q=Stephen+C.+Johnson.+1990.+Postloading+for+fun+and+profit.+In+Proceedings+of+the+Winter%E2%80%9990+USENIX+Conference.+325%2D%2D330.
http://scholar.google.com/scholar?hl=en&q=Randy+Kath.+1992.+The+Debugging+Application+Programming+Interface.+Retrieved+from+https%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2Fms809754.aspx.
http://scholar.google.com/scholar?hl=en&q=Gary+A.+Kildall.+1973.+A+unified+approach+to+global+program+optimization.+In+Proceedings+of+the+1st+Annual+ACM+SIGACT-SIGPLAN+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9973%29.+ACM%2C+New+York%2C+NY%2C+194%2D%2D206.
http://scholar.google.com/scholar?hl=en&q=Taegyu+Kim%2C+Chung+Hwan+Kim%2C+Hongjun+Choi%2C+Yonghwi+Kwon%2C+Brendan+Saltaformaggio%2C+Xiangyu+Zhang%2C+and+Dongyan+Xu.+2017.+RevARM%3A+A+platform-agnostic+ARM+binary+rewriter+for+security+applications.+In+Proceedings+of+the+33rd+Annual+Computer+Security+Applications+Conference+%28ACSAC%E2%80%9917%29.+ACM%2C+412%2D%2D424.
http://scholar.google.com/scholar?hl=en&q=Johannes+Kinder+and+Helmut+Veith.+2008.+Jakstab%3A+A+static+analysis+platform+for+binaries.+In+Proceedings+of+the+International+Conference+on+Computer+Aided+Verification.+Springer%2C+423%2D%2D427.+10.1007%2F978-3-540-70545-1_40+
http://scholar.google.com/scholar?hl=en&q=Johannes+Kinder+and+Helmut+Veith.+2010.+Precise+static+analysis+of+untrusted+driver+binaries.+In+Proceedings+of+the+IEEE+Conference+on+Formal+Methods+in+Computer-Aided+Design+%28FMCAD%E2%80%9910%29.+IEEE%2C+43%2D%2D50.
http://scholar.google.com/scholar?hl=en&q=Johannes+Kinder%2C+Florian+Zuleger%2C+and+Helmut+Veith.+2009.+An+abstract+interpretation-based+framework+for+control+flow+reconstruction+from+binaries.+In+Proceedings+of+the+International+Workshop+on+Verification%2C+Model+Checking%2C+and+Abstract+Interpretation.+Springer%2C+214%2D%2D228.+10.1007%2F978-3-540-93900-9_19+
http://scholar.google.com/scholar?hl=en&q=Vladimir+Kiriansky%2C+Derek+Bruening%2C+and+Saman+P.+Amarasinghe.+2002.+Secure+execution+via+program+shepherding.+In+Proceedings+of+the+11th+USENIX+Security+Symposium.+USENIX+Association%2C+Berkeley%2C+CA%2C+191%2D%2D206.+
http://scholar.google.com/scholar?hl=en&q=A.+Kiss%2C+J.+Jasz%2C+G.+Lehotai%2C+and+T.+Gyimothy.+2003.+Interprocedural+static+slicing+of+binary+executables.+In+Proceedings+3rd+IEEE+International+Workshop+on+Source+Code+Analysis+and+Manipulation.+118%2D%2D127.
http://scholar.google.com/scholar?hl=en&q=B.+Korel+and+J.+Laski.+1988.+Dynamic+program+slicing.+Info.+Process.+Lett.+29%2C+3+%28Oct.+1988%29%2C+155%2D%2D163.+10.1016%2F0020-0190%2888%2990054-3+
http://scholar.google.com/scholar?hl=en&q=Christopher+Kruegel%2C+William+Robertson%2C+Fredrik+Valeur%2C+and+Giovanni+Vigna.+2004.+Static+disassembly+of+obfuscated+binaries.+In+Proceedings+of+the+USENIX+Security+Symposium%2C+Vol.+13.+18%2D%2D18.+
http://scholar.google.com/scholar?hl=en&q=P.+Larsen%2C+A.+Homescu%2C+S.+Brunthaler%2C+and+M.+Franz.+2014.+SoK%3A+Automated+software+diversity.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+276%2D%2D291.
http://scholar.google.com/scholar?hl=en&q=James+R.+Larus+and+Thomas+Ball.+1994.+Rewriting+executable+files+to+measure+program+behavior.+Softw.%3A+Pract.+Exper.+24%2C+2+%281994%29%2C+197%2D%2D218.+10.1002%2Fspe.4380240204+
http://scholar.google.com/scholar?hl=en&q=James+R.+Larus+and+Eric+Schnarr.+1995.+EEL%3A+Machine-independent+executable+editing.+SIGPLAN+Not.+30%2C+6+%28June+1995%29%2C+291%2D%2D300.
http://scholar.google.com/scholar?hl=en&q=Michael+A.+Laurenzano%2C+Mustafa+M.+Tikir%2C+Laura+Carrington%2C+and+Allan+Snavely.+2010.+Pebil%3A+Efficient+static+binary+instrumentation+for+linux.+In+Proceedings+of+the+IEEE+International+Symposium+on+Performance+Analysis+of+Systems+and+Software+%28ISPASS%E2%80%9910%29.+IEEE%2C+175%2D%2D183.
http://scholar.google.com/scholar?hl=en&q=LLVM+Compiler+Infrastructure.+%7Bn.d.%7D.+LLVM+Language+Reference+Manual.+Retrieved+from+http%3A%2F%2Fllvm.org%2Fdocs%2FLangRef.html.
http://scholar.google.com/scholar?hl=en&q=Chi-Keung+Luk%2C+Robert+Cohn%2C+Robert+Muth%2C+Harish+Patil%2C+Artur+Klauser%2C+Geoff+Lowney%2C+Steven+Wallace%2C+Vijay+Janapa+Reddi%2C+and+Kim+Hazelwood.+2005.+Pin%3A+Building+customized+program+analysis+tools+with+dynamic+instrumentation.+In+Proceedings+of+the+ACM+SIGPLAN+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9905%29.+ACM%2C+New+York%2C+NY%2C+190%2D%2D200.
http://scholar.google.com/scholar?hl=en&q=Chi-Keung+Luk%2C+Robert+Muth%2C+Harish+Patil%2C+Robert+Cohn%2C+and+Geoff+Lowney.+2004.+Ispike%3A+A+post-link+optimizer+for+the+Intel+Itanium+architecture.+In+Proceedings+of+the+International+Symposium+on+Code+Generation+and+Optimization%3A+Feedback-directed+and+Runtime+Optimization+%28CGO%E2%80%9904%29.+IEEE+Computer+Society%2C+Washington%2C+DC%2C+15%2D%2D.
http://scholar.google.com/scholar?hl=en&q=T.+Lundqvist+and+P.+Stenstrom.+1999.+Timing+anomalies+in+dynamically+scheduled+microprocessors.+In+Proceedings+of+the+20th+IEEE+Real-Time+Systems+Symposium.+12%2D%2D21.+
http://scholar.google.com/scholar?hl=en&q=Jonas+Maebe%2C+Michiel+Ronsse%2C+and+Koen+De+Bosschere.+2002.+DIOTA%3A+Dynamic+instrumentation%2C+optimization+and+transformation+of+applications.+In+Proceedings+of+the+Compendium+of+Workshops+and+Tutorials+Held+in+Conjunction+with+the+International+Conference+on+Parallel+Architectures+and+Compilation+Techniques+%28PACT%E2%80%9902%29.
http://scholar.google.com/scholar?hl=en&q=Amir+Majlesi-Kupaei%2C+Danny+Kim%2C+Kapil+Anand%2C+Khaled+ElWazeer%2C+and+Rajeev+Barua.+2017.+RL-bin%2C+robust+low-overhead+binary+rewriter.+In+Proceedings+of+the+Workshop+on+Forming+an+Ecosystem+Around+Software+Transformation+%28FEAST%E2%80%9917%29.+ACM%2C+New+York%2C+NY%2C+17%2D%2D22.
http://scholar.google.com/scholar?hl=en&q=Cathy+May.+1987.+Mimic%3A+A+Fast+System%2F370+Simulator%2C+vol.+22.+ACM.+10.1145%2F960114.29651+
http://scholar.google.com/scholar?hl=en&q=Stephen+McCamant+and+Greg+Morrisett.+2006.+Evaluating+SFI+for+a+CISC+architecture.+In+Proceedings+of+the+USENIX+Security+Symposium.+Retrieved+from+https%3A%2F%2Fwww.usenix.org%2Flegacy%2Fevent%2Fsec06%2Ftech%2Fmccamant%2Fmccamant_html%2F.+
http://scholar.google.com/scholar?hl=en&q=Xiaozhu+Meng+and+Barton+P.+Miller.+2016.+Binary+code+is+not+easy.+In+Proceedings+of+the+25th+International+Symposium+on+Software+Testing+and+Analysis+%28ISSTA%E2%80%9916%29.+ACM%2C+New+York%2C+NY%2C+24%2D%2D35.
http://scholar.google.com/scholar?hl=en&q=Barton+P.+Miller.+2006.+Binary+Code+Patching%3A+An+Ancient+Art+Refined+for+the+21st+Century.+NC+State+University+Computer+Science+Department+Seminars+2006%2D%2D2007.+Retrieved+from+http%3A%2F%2Fmoss.csc.ncsu.edu%2Fmueller%2Fseminar%2Ffall06%2Fmiller.html.
http://scholar.google.com/scholar?hl=en&q=Robert+Muth%2C+Saumya+K.+Debray%2C+Scott+Watterson%2C+and+Koen+De+Bosschere.+2001.+alto%3A+A+link-time+optimizer+for+the+Compaq+Alpha.+Softw.%3A+Pract.+Exper.+31%2C+1+%282001%29%2C+67%2D%2D101.+10.1002%2F1097-024X%28200101%2931%3A1%253C67%3A%3AAID-SPE357%253E3.0.CO%3B2-A+
http://scholar.google.com/scholar?hl=en&q=Glenford+J.+Myers%2C+Corey+Sandler%2C+and+Tom+Badgett.+2011.+The+Art+of+Software+Testing.+John+Wiley+8+Sons.+
http://scholar.google.com/scholar?hl=en&q=Susanta+Nanda+and+Tzi-cker+Chiueh.+2005.+A+survey+on+virtualization+technologies.+RPE+Rep.+142+%282005%29.
http://scholar.google.com/scholar?hl=en&q=S.+Nanda%2C+Wei+Li%2C+Lap-Chung+Lam%2C+and+Tzi+cker+Chiueh.+2006.+BIRD%3A+Binary+interpretation+using+runtime+disassembly.+In+Proceedings+of+the+International+Symposium+on+Code+Generation+and+Optimization+%28CGO%E2%80%9906%29.+12+pp.%2D%2D.
http://scholar.google.com/scholar?hl=en&q=Nicholas+Nethercote.+2004.+Dynamic+Binary+Analysis+and+Instrumentation.+Technical+Report+UCAM-CL-TR-606.+Retrieevd+from+http%3A%2F%2Fwww.cl.cam.ac.uk%2Ftechreports%2FUCAM-CL-TR-606.pdf.
http://scholar.google.com/scholar?hl=en&q=Nicholas+Nethercote+and+Julian+Seward.+2007.+Valgrind%3A+A+framework+for+heavyweight+dynamic+binary+instrumentation.+In+ACM+Sigplan+Notices%2C+Vol.+42.+ACM%2C+89%2D%2D100.
http://scholar.google.com/scholar?hl=en&q=Thomas+Nyman%2C+Jan-Erik+Ekberg%2C+Lucas+Davi%2C+and+N.+Asokan.+2017.+CFI+CaRE%3A+Hardware-supported+call+and+return+enforcement+for+commercial+microcontrollers.+In+Proceedings+of+the+International+Symposium+on+Research+in+Attacks%2C+Intrusions%2C+and+Defenses.+Springer%2C+259%2D%2D284.
http://scholar.google.com/scholar?hl=en&q=Trail+of+Bits.+2017.+MCSema.+Retrieevd+from+https%3A%2F%2Fgithub.com%2Ftrailofbits%2Fmcsema.
http://scholar.google.com/scholar?hl=en&q=Dmytro+Oleksiuk.+2014.+OpenREIL.+Retrieevd+from+https%3A%2F%2Fgithub.com%2FCr4sh%2Fopenreil
http://scholar.google.com/scholar?hl=en&q=P%C3%A1draig+O%E2%80%99Sullivan%2C+Kapil+Anand%2C+Aparna+Kotha%2C+Matthew+Smithson%2C+Rajeev+Barua%2C+and+Angelos+Keromytis.+2011.+Retrofitting+security+in+cots+software+with+binary+rewriting.+In+Proceedings+of+the+IFIP+International+Information+Security+Conference.+Springer%2C+154%2D%2D172.
http://scholar.google.com/scholar?hl=en&q=Pradeep+Padala.+2002.+Playing+with+ptrace%2C+Part+I.+Linux+J.+%282002%29.+Retrieved+from+http%3A%2F%2Fwww.linuxjournal.com%2Farticle%2F6100.+
http://scholar.google.com/scholar?hl=en&q=Mathias+Payer%2C+Antonio+Barresi%2C+and+Thomas+R.+Gross.+2015.+Fine-Grained+Control-flow+Integrity+through+Binary+Hardening.+Springer+International+Publishing%2C+Cham%2C+144%2D%2D164.+10.1007%2F978-3-319-20550-2_8+
http://scholar.google.com/scholar?hl=en&q=Matt+Pietrek.+1994.+Peering+Inside+the+PE%3A+A+Tour+of+the+Win32+Portable+Executable+File+Format.+Retrieved+from+https%3A%2F%2Fmsdn.microsoft.com%2Fen-us%2Flibrary%2Fms809762.aspx.
http://scholar.google.com/scholar?hl=en&q=Manish+Prasad+and+Tzi-cker+Chiueh.+2003.+A+binary+rewriting+defense+against+stack-based+buffer+overflow+attacks.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference.
http://scholar.google.com/scholar?hl=en&q=Qemu+TCG+Developers.+2006.+Tiny+Code+Generator+%28TCG%29+Documentation.+Retrieved+from+http%3A%2F%2Fwiki.qemu.org%2FDocumentation%2FTCG.
http://scholar.google.com/scholar?hl=en&q=R.+Qiao+and+R.+Sekar.+2017.+Function+interface+analysis%3A+A+principled+approach+for+function+recognition+in+COTS+binaries.+In+Proceedings+of+the+47th+Annual+IEEE%2FIFIP+International+Conference+on+Dependable+Systems+and+Networks+%28DSN%E2%80%9917%29.+201%2D%2D212.
http://scholar.google.com/scholar?hl=en&q=Giridhar+Ravipati%2C+Andrew+R.+Bernat%2C+Nate+Rosenblum%2C+Barton+P.+Miller%2C+and+Jeffrey+K.+Hollingsworth.+2007.+Toward+the+deconstruction+of+dyninst.+University+of+Wisconsin%2C+Technical+Report+%282007%29.
http://scholar.google.com/scholar?hl=en&q=Thomas+Reps+and+Gogul+Balakrishnan.+2008.+Improved+memory-access+analysis+for+x86+executables.+In+Compiler+Construction.+Springer%2C+16%2D%2D35.+
http://scholar.google.com/scholar?hl=en&q=Benjamin+D.+Rodes%2C+Anh+Nguyen-Tuong%2C+Jason+D.+Hiser%2C+John+C.+Knight%2C+Michele+Co%2C+and+Jack+W.+Davidson.+2013.+Defense+Against+Stack-based+Attacks+Using+Speculative+Stack+Layout+Transformation.+Springer%2C+Berlin%2C+308%2D%2D313.
http://scholar.google.com/scholar?hl=en&q=Ted+Romer%2C+Geoff+Voelker%2C+Dennis+Lee%2C+Alec+Wolman%2C+Wayne+Wong%2C+Hank+Levy%2C+Brian+Bershad%2C+and+Brad+Chen.+1997.+Instrumentation+and+optimization+of+Win32%2FIntel+executables+using+Etch.+In+Proceedings+of+the+USENIX+Windows+NT+Workshop.+1%2D%2D8.+
http://scholar.google.com/scholar?hl=en&q=Nathan+E.+Rosenblum%2C+Xiaojin+Zhu%2C+Barton+P.+Miller%2C+and+Karen+Hunt.+2008.+Learning+to+analyze+binary+computer+code.+In+Proceedings+of+the+Association+for+the+Advancement+of+Artificial+Intelligence+%28AAAI%E2%80%9908%29.+798%2D%2D804.
http://scholar.google.com/scholar?hl=en&q=Hex-Rays+SA.+2017.+IDA-Pro.+Retrieved+from+https%3A%2F%2Fwww.hex-rays.com%2Fproducts%2Fida%2F.
http://scholar.google.com/scholar?hl=en&q=B.+Schwarz%2C+S.+Debray%2C+and+G.+Andrews.+2002.+Disassembly+of+executable+code+revisited.+In+Proceedings+of+the+9th+Working+Conference+on+Reverse+Engineering.+45%2D%2D54.+
http://scholar.google.com/scholar?hl=en&q=Benjamin+Schwarz%2C+Saumya+Debray%2C+Gregory+Andrews%2C+and+Matthew+Legendre.+2001.+Plto%3A+A+link-time+optimizer+for+the+Intel+IA-32+architecture.+In+Proceedings+of+the+Workshop+on+Binary+Translation+%28WBT%E2%80%9901%29.+Citeseer.
http://scholar.google.com/scholar?hl=en&q=Kevin+Scott+and+Jack+Davidson.+2001.+Strata%3A+A+software+dynamic+translation+infrastructure.+In+Proceedings+of+the+IEEE+Workshop+on+Binary+Translation.
http://scholar.google.com/scholar?hl=en&q=Kevin+Scott%2C+Jack+Davidson%2C+and+Kevin+Skadron.+2001.+Low-overhead+Software+Dynamic+Translation.+Technical+Report.+
http://scholar.google.com/scholar?hl=en&q=Kevin+Scott%2C+Naveen+Kumar%2C+Siva+Velusamy%2C+Bruce+Childers%2C+Jack+W.+Davidson%2C+and+Mary+Lou+Soffa.+2003.+Retargetable+and+reconfigurable+software+dynamic+translation.+In+Proceedings+of+the+International+Symposium+on+Code+Generation+and+Optimization%3A+Feedback-directed+and+Runtime+Optimization.+IEEE+Computer+Society%2C+36%2D%2D47.+
http://scholar.google.com/scholar?hl=en&q=Eui+Chul+Richard+Shin%2C+Dawn+Song%2C+and+Reza+Moazzezi.+2015.+Recognizing+functions+in+binaries+with+neural+networks.+In+Proceedings+of+the+USENIX+Security+Symposium.+611%2D%2D626.+
http://scholar.google.com/scholar?hl=en&q=Y.+Shoshitaishvili%2C+R.+Wang%2C+C.+Salls%2C+N.+Stephens%2C+M.+Polino%2C+A.+Dutcher%2C+J.+Grosen%2C+S.+Feng%2C+C.+Hauser%2C+C.+Kruegel%2C+and+G.+Vigna.+2016.+SOK%3A+%28State+of%29+The+art+of+war%3A+Offensive+techniques+in+binary+analysis.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy+%28SP%E2%80%9916%29.+138%2D%2D157.
http://scholar.google.com/scholar?hl=en&q=Richard+L.+Sites%2C+Anton+Chernoff%2C+Matthew+B.+Kirk%2C+Maurice+P.+Marks%2C+and+Scott+G.+Robinson.+1993.+Binary+translation.+Commun.+ACM+36%2C+2+%28Feb.+1993%29%2C+69%2D%2D81.
http://scholar.google.com/scholar?hl=en&q=Asia+Slowinska%2C+Traian+Stancescu%2C+and+Herbert+Bos.+2011.+Howard%3A+A+dynamic+excavator+for+reverse+engineering+data+structures.+In+Proceedings+of+the+Network+and+Distributed+System+Security+Symposium+%28NDSS%E2%80%9911%29.
http://scholar.google.com/scholar?hl=en&q=Asia+Slowinska%2C+Traian+Stancescu%2C+and+Herbert+Bos.+2012.+Body+armor+for+binaries%3A+Preventing+buffer+overflows+without+recompilation.+In+Proceedings+of+the+USENIX+Annual+Technical+Conference.+125%2D%2D137.+
http://scholar.google.com/scholar?hl=en&q=M.+Smithson%2C+K.+ElWazeer%2C+K.+Anand%2C+A.+Kotha%2C+and+R.+Barua.+2013.+Static+binary+rewriting+without+supplemental+information%3A+Overcoming+the+tradeoff+between+coverage+and+correctness.+In+Proceedings+of+the+20th+Working+Conference+on+Reverse+Engineering+%28WCRE%E2%80%9913%29.+52%2D%2D61.
http://scholar.google.com/scholar?hl=en&q=Dawn+Song%2C+David+Brumley%2C+Heng+Yin%2C+Juan+Caballero%2C+Ivan+Jager%2C+Min+Gyung+Kang%2C+Zhenkai+Liang%2C+James+Newsome%2C+Pongsin+Poosankam%2C+and+Prateek+Saxena.+2008.+BitBlaze%3A+A+New+Approach+to+Computer+Security+via+Binary+Analysis.+Springer+Berlin%2C+1%2D%2D25.+10.1007%2F978-3-540-89862-7_1+
http://scholar.google.com/scholar?hl=en&q=Swaroop+Sridhar%2C+Jonathan+S.+Shapiro%2C+Eric+Northup%2C+and+Prashanth+P.+Bungale.+2006.+HDTrans%3A+An+open+source%2C+low-level+dynamic+instrumentation+system.+In+Proceedings+of+the+2nd+International+Conference+on+Virtual+Execution+Environments.+ACM%2C+175%2D%2D185.+10.1145%2F1134760.1220166+
http://scholar.google.com/scholar?hl=en&q=Amitabh+Srivastava+and+Alan+Eustace.+1994.+ATOM%3A+A+System+for+Building+Customized+Program+Analysis+Tools%2C+vol.+29.+ACM.+10.1145%2F773473.178260+
http://scholar.google.com/scholar?hl=en&q=K.+Richard+Pixley+Steve+Chamberlain%2C+John+Gilmore+and+David+Henkel-Wallace.+1992.+Binary+File+Descripor+Library+2.29.+Binutils+package.+Retrieved+from+https%3A%2F%2Fsourceware.org%2Fbinutils%2Fdocs%2Fbfd%2F.
http://scholar.google.com/scholar?hl=en&q=MIPS+Computer+Systems.+1986.+RISCompiler+and+C+Programmer%E2%80%99s+Guide.+MIPS+Computer+Systems%2C+930+Arques+Avenue%2C+Sunnyvale%2C+CA.
http://scholar.google.com/scholar?hl=en&q=Ariel+Tamches+and+Barton+P.+Miller.+1999.+Fine-grained+dynamic+instrumentation+of+commodity+operating+system+kernels.+In+Proceedings+of+the+3rd+Symposium+on+Operating+Systems+Design+and+Implementation.+
http://scholar.google.com/scholar?hl=en&q=Elfutils+Developer+Team.+2017.+Retrieved+from+https%3A%2F%2Fsourceware.org%2Felfutils%2F.
http://scholar.google.com/scholar?hl=en&q=PaX+Team.+2003.+PaX+address+space+layout+randomization+%28ASLR%29.+https%3A%2F%2Fpax.grsecurity.net%2Fdocs%2Faslr.txt.
http://scholar.google.com/scholar?hl=en&q=Edward+Terry.+2012.+Using+Liberator.+Retrieved+from+http%3A%2F%2Fibm-1401.info%2F1401-Competition.html%23UsingLib.
http://scholar.google.com/scholar?hl=en&q=TI.+2009.+Common+Oject+File+Format.+Application+Report.
http://scholar.google.com/scholar?hl=en&q=David+Ung+and+Cristina+Cifuentes.+2001.+Optimising+hot+paths+in+a+dynamic+binary+translator.+ACM+SIGARCH+Comput.+Architect.+News+29%2C+1+%282001%29%2C+55%2D%2D65.+10.1145%2F373574.373590+
http://scholar.google.com/scholar?hl=en&q=Cedric+Valensi.+2013.+MADRAS%3A+Multi-Architecture+BInary+Rewriting+Tool.+Technical+Report.
http://scholar.google.com/scholar?hl=en&q=Valgrind+Development+Team.+2000.+Valgrind.+Retrieved+from+http%3A%2F%2Fvalgrind.org%2F.
http://scholar.google.com/scholar?hl=en&q=Ludo+Van+Put%2C+Bjorn+De+Sutter%2C+Matias+Madou%2C+Bruno+De+Bus%2C+Dominique+Chanet%2C+Kristof+Smits%2C+and+Koen+De+Bosschere.+2005.+LANCET%3A+A+nifty+code+editing+tool.+SIGSOFT+Softw.+Eng.+Notes+31%2C+1+%28Sept.+2005%29%2C+75%2D%2D81.+10.1145%2F1108768.1108812+
http://scholar.google.com/scholar?hl=en&q=David+W.+Wall.+1992.+Systems+for+late+code+modification.+In+Code+Generation%E2%80%94Concepts%2C+Tools%2C+Techniques.+Springer%2C+275%2D%2D293.
http://scholar.google.com/scholar?hl=en&q=Ruoyu+Wang%2C+Yan+Shoshitaishvili%2C+Antonio+Bianchi%2C+Aravind+Machiry%2C+John+Grosen%2C+Paul+Grosen%2C+Christopher+Kruegel%2C+and+Giovanni+Vigna.+2017.+Ramblr%3A+Making+reassembly+great+again.+In+Proceedings+of+the+24th+Annual+Symposium+on+Network+and+Distributed+System+Security+%28NDSS%E2%80%9917%29.
http://scholar.google.com/scholar?hl=en&q=Shuai+Wang%2C+Pei+Wang%2C+and+Dinghao+Wu.+2015.+Reassembleable+disassembling.+In+Proceedings+of+the+USENIX+Conference+on+Security.+627%2D%2D642.+
http://scholar.google.com/scholar?hl=en&q=Wenwen+Wang%2C+Pen-Chung+Yew%2C+Antonia+Zhai%2C+Stephen+McCamant%2C+Youfeng+Wu%2C+and+Jayaram+Bobba.+2017.+Enabling+cross-ISA+offloading+for+COTS+binaries.+In+Proceedings+of+the+15th+Annual+International+Conference+on+Mobile+Systems%2C+Applications%2C+and+Services+%28MobiSys%E2%80%9917%29.+ACM%2C+New+York%2C+NY%2C+319%2D%2D331.
http://scholar.google.com/scholar?hl=en&q=Richard+Wartell%2C+Vishwath+Mohan%2C+Kevin+W.+Hamlen%2C+and+Zhiqiang+Lin.+2012.+Binary+stirring%3A+Self-randomizing+instruction+addresses+of+legacy+x86+binary+code.+In+Proceedings+of+the+ACM+Conference+on+Computer+and+Communications+Security+%28CCS%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+157%2D%2D168.
http://scholar.google.com/scholar?hl=en&q=Richard+Wartell%2C+Vishwath+Mohan%2C+Kevin+W.+Hamlen%2C+and+Zhiqiang+Lin.+2012.+Securing+untrusted+code+via+compiler-agnostic+binary+rewriting.+In+Proceedings+of+the+28th+Annual+Computer+Security+Applications+Conference+%28ACSAC%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+299%2D%2D308.
http://scholar.google.com/scholar?hl=en&q=Richard+Wartell%2C+Yan+Zhou%2C+Kevin+Hamlen%2C+Murat+Kantarcioglu%2C+and+Bhavani+Thuraisingham.+2011.+Differentiating+code+from+data+in+x86+binaries.+In+Machine+Learning+and+Knowledge+Discovery+in+Databases.+Lecture+Notes+in+Computer+Science%2C+Vol.+6913.+Springer%2C+522%2D%2D536.+
http://scholar.google.com/scholar?hl=en&q=Mark+N.+Wegman+and+F.+Kenneth+Zadeck.+1991.+Constant+propagation+with+conditional+branches.+ACM+Trans.+Program.+Lang.+Syst.+13%2C+2+%281991%29%2C+181%2D%2D210.+10.1145%2F103135.103136+
http://scholar.google.com/scholar?hl=en&q=Mark+Weiser.+1981.+Program+slicing.+In+Proceedings+of+the+5th+International+Conference+on+Software+Engineering+%28ICSE%E2%80%9981%29.+IEEE+Press%2C+Piscataway%2C+NJ%2C+439%2D%2D449.
http://scholar.google.com/scholar?hl=en&q=Mark+Weiser.+1982.+Programmers+use+slices+when+debugging.+Commun.+ACM+25%2C+7+%28July+1982%29%2C+446%2D%2D452.+10.1145%2F358557.358577+
http://scholar.google.com/scholar?hl=en&q=David+Williams-King%2C+Graham+Gobieski%2C+Kent+Williams-King%2C+James+P.+Blake%2C+Xinhao+Yuan%2C+Patrick+Colp%2C+Michelle+Zheng%2C+Vasileios+P.+Kemerlis%2C+Junfeng+Yang%2C+and+William+Aiello.+2016.+Shuffler%3A+Fast+and+deployable+continuous+code+re-randomization.+In+Proceedings+of+the+USENIX+Symposium+on+Operating+Systems+Design+and+Implementation+%28OSDI%E2%80%9916%29.+367%2D%2D382.
http://scholar.google.com/scholar?hl=en&q=Liang+Xu%2C+Fangqi+Sun%2C+and+Zhendong+Su.+2009.+Constructing+precise+control+flow+graphs+from+binaries.+University+of+California%2C+Davis%2C+Tech.+Rep+%282009%29.
http://scholar.google.com/scholar?hl=en&q=Eric+Youngdale.+1995.+The+ELF+Object+File+Format%3A+Introduction.+Retrieved+from+http%3A%2F%2Fwww.linuxjournal.com%2Farticle%2F1059.+
http://scholar.google.com/scholar?hl=en&q=Jonas+Zaddach.+2014.+Libqemu+GIT+repository.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fzaddach%2Flibqemu.
http://scholar.google.com/scholar?hl=en&q=Chao+Zhang%2C+Chengyu+Song%2C+Kevin+Zhijie+Chen%2C+Zhaofeng+Chen%2C+and+Dawn+Song.+2015.+VTint%3A+Protecting+virtual+function+tables%E2%80%99+integrity.+In+Proceedings+of+the+Network+and+Distributed+System+Security+Symposium+%28NDSS%E2%80%9915%29.
http://scholar.google.com/scholar?hl=en&q=Chao+Zhang%2C+Tao+Wei%2C+Zhaofeng+Chen%2C+Lei+Duan%2C+Stephen+McCamant%2C+and+Laszlo+Szekeres.+2013.+Protecting+function+pointers+in+binary.+In+Proceedings+of+the+8th+ACM+SIGSAC+Symposium+on+Information%2C+Computer+and+Communications+Security+%28ASIA+CCS%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+487%2D%2D492.
http://scholar.google.com/scholar?hl=en&q=C.+Zhang%2C+T.+Wei%2C+Z.+Chen%2C+L.+Duan%2C+L.+Szekeres%2C+S.+McCamant%2C+D.+Song%2C+and+W.+Zou.+2013.+Practical+control+flow+integrity+and+randomization+for+binary+executables.+In+Proceedings+of+the+IEEE+Symposium+on+Security+and+Privacy.+559%2D%2D573.+10.1109%2FSP.2013.44+
http://scholar.google.com/scholar?hl=en&q=Mingwei+Zhang%2C+Rui+Qiao%2C+Niranjan+Hasabnis%2C+and+R.+Sekar.+2014.+A+platform+for+secure+static+binary+instrumentation.+In+Proceedings+of+the+10th+ACM+SIGPLAN%2FSIGOPS+International+Conference+on+Virtual+Execution+Environments+%28VEE%E2%80%9914%29.+ACM%2C+New+York%2C+NY%2C+129%2D%2D140.
http://scholar.google.com/scholar?hl=en&q=Mingwei+Zhang+and+R.+Sekar.+2013.+Control+flow+integrity+for+COTS+binaries.+In+Proceedings+of+the+22nd+USENIX+Conference+on+Security%2C+vol.+13.+
