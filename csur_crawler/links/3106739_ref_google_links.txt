http://scholar.google.com/scholar?hl=en&q=2016.+TypeScript+Language+Specification%2C+Version+1.8.+%28January+2016.
http://scholar.google.com/scholar?hl=en&q=Hiralal+Agrawal+and+Joseph+Robert+Horgan.+1990.+Dynamic+program+slicing.+In+PLDI.+246%2D%2D256.+10.1145%2F93542.93576+
http://scholar.google.com/scholar?hl=en&q=Saba+Alimadadi%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2015.+Hybrid+DOM-sensitive+change+impact+analysis+for+javascript.+In+ECOOP%2C+Vol.+37.+321%2D%2D345.
http://scholar.google.com/scholar?hl=en&q=Saba+Alimadadi%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2016.+Understanding+asynchronous+interactions+in+full-stack+JavaScript.+In+ICSE.+1169%2D%2D1180.+10.1145%2F2884781.2884864+
http://scholar.google.com/scholar?hl=en&q=Saba+Alimadadi%2C+Sheldon+Sequeira%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2014.+Understanding+JavaScript+event-based+interactions.+In+ICSE.+367%2D%2D377.+10.1145%2F2568225.2568268+
http://scholar.google.com/scholar?hl=en&q=Bowen+Alpern%2C+Steve+Augart%2C+Stephen+M.+Blackburn%2C+Maria+A.+Butrico%2C+Anthony+Cocchi%2C+Perry+Cheng%2C+Julian+Dolby%2C+Stephen+J.+Fink%2C+David+Grove%2C+Michael+Hind%2C+Kathryn+S.+McKinley%2C+Mark+F.+Mergen%2C+J.+Eliot+B.+Moss%2C+Ton+Anh+Ngo%2C+Vivek+Sarkar%2C+and+Martin+Trapp.+2005.+The+Jikes+research+virtual+machine+project%3A+Building+an+open-source+research+community.+IBM+Syst.+J.+44%2C+2+%282005%29%2C+399%2D%2D418.+10.1147%2Fsj.442.0399+
http://scholar.google.com/scholar?hl=en&q=Esben+Andreasen+and+Anders+M%C3%B8ller.+2014.+Determinacy+in+static+analysis+for+jQuery.+In+OOPSLA.+17%2D%2D31.
http://scholar.google.com/scholar?hl=en&q=Silviu+Andrica+and+George+Candea.+2011.+WaRR%3A+A+tool+for+high-fidelity+web+application+record+and+replay.+In+DSN.+403%2D%2D410.+10.1109%2FDSN.2011.5958253+
http://scholar.google.com/scholar?hl=en&q=Shay+Artzi%2C+Julian+Dolby%2C+Simon+Holm+Jensen%2C+Anders+M%C3%B8ller%2C+and+Frank+Tip.+2011.+A+framework+for+automated+testing+of+JavaScript+web+applications.+In+ICSE.+571%2D%2D580.
http://scholar.google.com/scholar?hl=en&q=Thomas+H.+Austin+and+Cormac+Flanagan.+2010.+Permissive+dynamic+information+flow+analysis.+In+PLAS.+3.+10.1145%2F1814217.1814220+
http://scholar.google.com/scholar?hl=en&q=Thomas+H.+Austin+and+Cormac+Flanagan.+2012.+Multiple+facets+for+dynamic+information+flow.+In+POPL.+165%2D%2D178.+10.1145%2F2103656.2103677+
http://scholar.google.com/scholar?hl=en&q=John+Aycock.+2003.+A+brief+history+of+just-in-time.+ACM+Comput.+Surv.+35%2C+2+%282003%29%2C+97%2D%2D113.+10.1145%2F857076.857077+
http://scholar.google.com/scholar?hl=en&q=Nathaniel+Ayewah+and+William+Pugh.+2010.+The+Google+findbugs+fixit.+In+ISSTA.+241%2D%2D252.+10.1145%2F1831708.1831738+
http://scholar.google.com/scholar?hl=en&q=Kartik+Bajaj%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2014.+Dompletion%3A+DOM-aware+JavaScript+code+completion.+In+ASE.+43%2D%2D54.
http://scholar.google.com/scholar?hl=en&q=Zahra+Behfarshad+and+Ali+Mesbah.+2013.+Hidden-web+induced+by+client-side+scripting%3A+An+empirical+study.+In+ICWE%2C+Vol.+7977.+52%2D%2D67.
http://scholar.google.com/scholar?hl=en&q=Al+Bessey%2C+Ken+Block%2C+Benjamin+Chelf%2C+Andy+Chou%2C+Bryan+Fulton%2C+Seth+Hallem%2C+Charles-Henri+Gros%2C+Asya+Kamsky%2C+Scott+McPeak%2C+and+Dawson+R.+Engler.+2010.+A+few+billion+lines+of+code+later%3A+Using+static+analysis+to+find+bugs+in+the+real+world.+Commun.+ACM+53%2C+2+%282010%29%2C+66%2D%2D75.+10.1145%2F1646353.1646374+
http://scholar.google.com/scholar?hl=en&q=Abhishek+Bichhawat%2C+Vineet+Rajani%2C+Deepak+Garg%2C+and+Christian+Hammer.+2014.+Information+flow+control+in+webkit%E2%80%99s+JavaScript+Bytecode.+In+POST%2C+Vol.+8414.+159%2D%2D178.
http://scholar.google.com/scholar?hl=en&q=Arnar+Birgisson%2C+Daniel+Hedin%2C+and+Andrei+Sabelfeld.+2012.+Boosting+the+permissiveness+of+dynamic+information-flow+tracking+by+testing.+In+ESORICS%2C+Vol.+7459.+55%2D%2D72.+10.1007%2F978-3-642-33167-1_4
http://scholar.google.com/scholar?hl=en&q=Brian+Burg%2C+Richard+Bailey%2C+Andrew+J.+Ko%2C+and+Michael+D.+Ernst.+2013.+Interactive+record%2Freplay+for+web+application+debugging.+In+UIST.+473%2D%2D484.
http://scholar.google.com/scholar?hl=en&q=Brian+Burg%2C+Andrew+J.+Ko%2C+and+Michael+D.+Ernst.+2015.+Explaining+visual+changes+in+web+interfaces.+In+UIST.+259%2D%2D268.+10.1145%2F2807442.2807473+
http://scholar.google.com/scholar?hl=en&q=Shauvik+Roy+Choudhary.+2014.+Cross-platform+testing+and+maintenance+of+web+and+mobile+applications.+In+ICSE.+642%2D%2D645.+10.1145%2F2591062.2591097+
http://scholar.google.com/scholar?hl=en&q=Shauvik+Roy+Choudhary%2C+Mukul+R.+Prasad%2C+and+Alessandro+Orso.+2012.+CrossCheck%3A+Combining+crawling+and+differencing+to+better+detect+cross-browser+incompatibilities+in+web+applications.+In+ICST.+171%2D%2D180.
http://scholar.google.com/scholar?hl=en&q=Shauvik+Roy+Choudhary%2C+Mukul+R.+Prasad%2C+and+Alessandro+Orso.+2013.+X-PERT%3A+Accurate+identification+of+cross-browser+issues+in+web+applications.+In+ICSE.+702%2D%2D711.
http://scholar.google.com/scholar?hl=en&q=Shauvik+Roy+Choudhary%2C+Mukul+R.+Prasad%2C+and+Alessandro+Orso.+2014a.+Cross-platform+feature+matching+for+web+applications.+In+ISSTA.+82%2D%2D92.+10.1145%2F2610384.2610409+
http://scholar.google.com/scholar?hl=en&q=Shauvik+Roy+Choudhary%2C+Mukul+R.+Prasad%2C+and+Alessandro+Orso.+2014b.+X-PERT%3A+A+web+application+testing+tool+for+cross-browser+inconsistency+detection.+In+ISSTA.+417%2D%2D420.+10.1145%2F2610384.2628057+
http://scholar.google.com/scholar?hl=en&q=Shauvik+Roy+Choudhary%2C+Husayn+Versee%2C+and+Alessandro+Orso.+2010a.+A+cross-browser+web+application+testing+tool.+In+ICSM.+1%2D%2D6.+10.1109%2FICSM.2010.5609728+
http://scholar.google.com/scholar?hl=en&q=Shauvik+Roy+Choudhary%2C+Husayn+Versee%2C+and+Alessandro+Orso.+2010b.+WEBDIFF%3A+Automated+identification+of+cross-browser+issues+in+web+applications.+In+ICSM.+1%2D%2D10.
http://scholar.google.com/scholar?hl=en&q=Laurent+Christophe%2C+Elisa+Gonzalez+Boix%2C+Wolfgang+De+Meuter%2C+and+Coen+De+Roover.+2016.+Linvail%3A+A+general-purpose+platform+for+shadow+execution+of+JavaScript.+In+SANER.+260%2D%2D270.+10.1109%2FSANER.2016.91
http://scholar.google.com/scholar?hl=en&q=Andrey+Chudnov+and+David+A.+Naumann.+2015.+Inlined+information+flow+monitoring+for+JavaScript.+In+CCS.+629%2D%2D643.+10.1145%2F2810103.2813684+
http://scholar.google.com/scholar?hl=en&q=Ravi+Chugh%2C+Jeffrey+A.+Meister%2C+Ranjit+Jhala%2C+and+Sorin+Lerner.+2009.+Staged+information+flow+for+JavaScript.+In+PLDI.+50%2D%2D62.+10.1145%2F1542476.1542483+
http://scholar.google.com/scholar?hl=en&q=Christoph+Csallner+and+Yannis+Smaragdakis.+2004.+JCrasher%3A+An+automatic+robustness+tester+for+Java.+Softw.%2C+Pract.+Exp.+34%2C+11+%282004%29%2C+1025%2D%2D1050.+10.1002%2Fspe.602+
http://scholar.google.com/scholar?hl=en&q=Igor+Rafael+de+Assis+Costa%2C+P%C3%A9ricles+Rafael+Oliveira+Alves%2C+Henrique+Nazar%C3%A9+Santos%2C+and+Fernando+Magno+Quint%C3%A3o+Pereira.+2013.+Just-in-time+value+specialization.+In+CGO.+29%3A1%2D%2D29%3A11.
http://scholar.google.com/scholar?hl=en&q=Dominique+Devriese+and+Frank+Piessens.+2010.+Noninterference+through+secure+multi-execution.+In+S8P.+109%2D%2D124.+10.1109%2FSP.2010.15+
http://scholar.google.com/scholar?hl=en&q=Mohan+Dhawan+and+Vinod+Ganapathy.+2009.+Analyzing+information+flow+in+JavaScript-based+browser+extensions.+In+ACSAC.+382%2D%2D391.+10.1109%2FACSAC.2009.43+
http://scholar.google.com/scholar?hl=en&q=Monika+Dhok%2C+Murali+Krishna+Ramanathan%2C+and+Nishant+Sinha.+2016.+Type-aware+concolic+testing+of+JavaScript+programs.+In+ICSE.+168%2D%2D179.+10.1145%2F2884781.2884859+
http://scholar.google.com/scholar?hl=en&q=Serdar+Dogan%2C+Aysu+Betin-Can%2C+and+Vahid+Garousi.+2014.+Web+application+testing%3A+A+systematic+literature+review.+J.+Syst.+Softw.+91+%282014%29%2C+174%2D%2D201.+10.1016%2Fj.jss.2014.01.010+
http://scholar.google.com/scholar?hl=en&q=ECMA+International.+2016.+Standard+ECMA-262%2C+ECMAScript+Language+Specification+%287th+ed.%2FJune+2016%29.
http://scholar.google.com/scholar?hl=en&q=Michael+D.+Ernst%2C+Jeff+H.+Perkins%2C+Philip+J.+Guo%2C+Stephen+McCamant%2C+Carlos+Pacheco%2C+Matthew+S.+Tschantz%2C+and+Chen+Xiao.+2007.+The+Daikon+system+for+dynamic+detection+of+likely+invariants.+SCP+69%2C+1-3+%282007%29%2C+35%2D%2D45.
http://scholar.google.com/scholar?hl=en&q=Amin+Milani+Fard+and+Ali+Mesbah.+2013.+JSNOSE%3A+Detecting+JavaScript+code+smells.+In+SCAM.+116%2D%2D125.
http://scholar.google.com/scholar?hl=en&q=Amin+Milani+Fard%2C+Ali+Mesbah%2C+and+Eric+Wohlstadter.+2015.+Generating+fixtures+for+JavaScript+unit+testing.+In+ASE.+190%2D%2D200.
http://scholar.google.com/scholar?hl=en&q=Amin+Milani+Fard%2C+Mehdi+MirzaAghaei%2C+and+Ali+Mesbah.+2014.+Leveraging+existing+tests+in+automated+test+generation+for+web+applications.+In+ASE.+67%2D%2D78.
http://scholar.google.com/scholar?hl=en&q=Andreas+Gal%2C+Brendan+Eich%2C+Mike+Shaver%2C+David+Anderson%2C+David+Mandelin%2C+Mohammad+R.+Haghighat%2C+Blake+Kaplan%2C+Graydon+Hoare%2C+Boris+Zbarsky%2C+Jason+Orendorff%2C+Jesse+Ruderman%2C+Edwin+W.+Smith%2C+Rick+Reitmaier%2C+Michael+Bebenita%2C+Mason+Chang%2C+and+Michael+Franz.+2009.+Trace-based+just-in-time+type+specialization+for+dynamic+languages.+In+PLDI.+465%2D%2D478.+10.1145%2F1542476.1542528+
http://scholar.google.com/scholar?hl=en&q=Keheliya+Gallaba%2C+Ali+Mesbah%2C+and+Ivan+Beschastnikh.+2015.+Don%E2%80%99t+call+us%2C+we%E2%80%99ll+call+you%3A+Characterizing+callbacks+in+JavaScript.+In+ESEM.+247%2D%2D256.
http://scholar.google.com/scholar?hl=en&q=Vahid+Garousi%2C+Ali+Mesbah%2C+Aysu+Betin-Can%2C+and+Shabnam+Mirshokraie.+2013.+A+systematic+mapping+study+of+web+application+testing.+Inf.+Softw.+Technol.+55%2C+8+%282013%29%2C+1374%2D%2D1396.+10.1016%2Fj.infsof.2013.02.006+
http://scholar.google.com/scholar?hl=en&q=Patrice+Godefroid%2C+Nils+Klarlund%2C+and+Koushik+Sen.+2005.+DART%3A+Directed+automated+random+testing.+In+PLDI.+213%2D%2D223.
http://scholar.google.com/scholar?hl=en&q=Liang+Gong%2C+Michael+Pradel%2C+and+Koushik+Sen.+2015a.+JITProf%3A+Pinpointing+JIT-unfriendly+JavaScript+code.+In+ESEC%2FFSE.+357%2D%2D368.+10.1145%2F2786805.2786831+
http://scholar.google.com/scholar?hl=en&q=Liang+Gong%2C+Michael+Pradel%2C+Manu+Sridharan%2C+and+Koushik+Sen.+2015b.+DLint%3A+Dynamically+checking+bad+coding+practices+in+JavaScript.+In+ISSTA.+94%2D%2D105.
http://scholar.google.com/scholar?hl=en&q=Mark+Grechanik%2C+Qing+Xie%2C+and+Chen+Fu.+2009.+Maintaining+and+evolving+GUI-directed+test+scripts.+In+ICSE.+408%2D%2D418.
http://scholar.google.com/scholar?hl=en&q=Salvatore+Guarnieri+and+V.+Benjamin+Livshits.+2009.+GATEKEEPER%3A+Mostly+static+enforcement+of+security+and+reliability+policies+for+JavaScript+code.+In+USENIX+Security+Symposium.+151%2D%2D168.
http://scholar.google.com/scholar?hl=en&q=Arjun+Guha%2C+Claudiu+Saftoiu%2C+and+Shriram+Krishnamurthi.+2011.+Typing+local+control+and+state+using+flow+analysis.+In+ESOP%2C+Vol.+6602.+256%2D%2D275.+10.1007%2F978-3-642-19718-5_14
http://scholar.google.com/scholar?hl=en&q=Brian+Hackett+and+Shu-yu+Guo.+2012.+Fast+and+precise+hybrid+type+inference+for+JavaScript.+In+PLDI.+239%2D%2D250.+10.1145%2F2254064.2254094+
http://scholar.google.com/scholar?hl=en&q=Daniel+Hedin%2C+Arnar+Birgisson%2C+Luciano+Bello%2C+and+Andrei+Sabelfeld.+2014.+JSFlow%3A+Tracking+information+flow+in+JavaScript+and+its+APIs.+In+SAC.+1663%2D%2D1671.
http://scholar.google.com/scholar?hl=en&q=Daniel+Hedin+and+Andrei+Sabelfeld.+2012.+Information-flow+security+for+a+core+of+JavaScript.+In+CSF.+3%2D%2D18.+10.1109%2FCSF.2012.19+
http://scholar.google.com/scholar?hl=en&q=Phillip+Heidegger+and+Peter+Thiemann.+2012.+JSConTest%3A+Contract-driven+testing+and+path+effect+inference+for+JavaScript.+J.+Obj.+Technol.+11%2C+1+%282012%29%2C+1%2D%2D29.+10.5381%2Fjot.2012.11.1.a6
http://scholar.google.com/scholar?hl=en&q=Joshua+Hibschman+and+Haoqi+Zhang.+2015.+Unravel%3A+Rapid+web+application+reverse+engineering+via+interaction+recording%2C+source+tracing%2C+and+library+detection.+In+UIST.+270%2D%2D279.
http://scholar.google.com/scholar?hl=en&q=Shin+Hong%2C+Yongbae+Park%2C+and+Moonzoo+Kim.+2014.+Detecting+concurrency+errors+in+client-side+java+script+web+applications.+In+ICST.+61%2D%2D70.+10.1109%2FICST.2014.17+
http://scholar.google.com/scholar?hl=en&q=James+Ide%2C+Rastislav+Bodik%2C+and+Doug+Kimelman.+2009.+Concurrency+concerns+in+rich+Internet+applications.+In+ECEC.
http://scholar.google.com/scholar?hl=en&q=Dongseok+Jang%2C+Ranjit+Jhala%2C+Sorin+Lerner%2C+and+Hovav+Shacham.+2010.+An+empirical+study+of+privacy-violating+information+flows+in+JavaScript+web+applications.+In+CCS.+270%2D%2D283.+10.1145%2F1866307.1866339+
http://scholar.google.com/scholar?hl=en&q=Casper+Svenning+Jensen%2C+Anders+M%C3%B8ller%2C+Veselin+Raychev%2C+Dimitar+Dimitrov%2C+and+Martin+T.+Vechev.+2015a.+Stateless+model+checking+of+event-driven+applications.+In+OOPSLA.+57%2D%2D73.
http://scholar.google.com/scholar?hl=en&q=Simon+Holm+Jensen%2C+Anders+M%C3%B8ller%2C+and+Peter+Thiemann.+2009.+Type+analysis+for+JavaScript.+In+SAS%2C+Vol.+5673.+238%2D%2D255.
http://scholar.google.com/scholar?hl=en&q=Simon+Holm+Jensen%2C+Manu+Sridharan%2C+Koushik+Sen%2C+and+Satish+Chandra.+2015b.+MemInsight%3A+Platform-independent+memory+debugging+for+JavaScript.+In+ESEC%2FFSE.+345%2D%2D356.
http://scholar.google.com/scholar?hl=en&q=Xing+Jin%2C+Xuchao+Hu%2C+Kailiang+Ying%2C+Wenliang+Du%2C+Heng+Yin%2C+and+Gautam+Nagesh+Peri.+2014.+Code+injection+attacks+on+HTML5-based+mobile+apps%3A+Characterization%2C+detection+and+mitigation.+In+CCS.+66%2D%2D77.
http://scholar.google.com/scholar?hl=en&q=Ren%C3%A9+Just%2C+Darioush+Jalali%2C+and+Michael+D.+Ernst.+2014.+Defects4J%3A+A+database+of+existing+faults+to+enable+controlled+testing+studies+for+Java+programs.+In+ISSTA.+437%2D%2D440.
http://scholar.google.com/scholar?hl=en&q=Rezwana+Karim%2C+Mohan+Dhawan%2C+Vinod+Ganapathy%2C+and+Chung-chieh+Shan.+2012.+An+analysis+of+the+mozilla+jetpack+extension+framework.+In+ECOOP%2C+Vol.+7313.+333%2D%2D355.+10.1007%2F978-3-642-31057-7_16+
http://scholar.google.com/scholar?hl=en&q=Madhukar+N.+Kedlaya%2C+Behnam+Robatmili%2C+and+Ben+Hardekopf.+2015.+Server-side+type+profiling+for+optimizing+client-side+JavaScript+engines.+In+DLS.+140%2D%2D153.
http://scholar.google.com/scholar?hl=en&q=Haruka+Kikuchi%2C+Dachuan+Yu%2C+Ajay+Chander%2C+Hiroshi+Inamura%2C+and+Igor+Serikov.+2008.+JavaScript+instrumentation+in+practice.+In+APLAS.+326%2D%2D341.+10.1007%2F978-3-540-89330-1_23+
http://scholar.google.com/scholar?hl=en&q=Erick+Lavoie%2C+Bruno+Dufour%2C+and+Marc+Feeley.+2014.+Portable+and+efficient+run-time+monitoring+of+JavaScript+applications+using+virtual+machine+layering.+In+ECOOP%2C+Vol.+8586.+541%2D%2D566.+10.1007%2F978-3-662-44202-9_22+
http://scholar.google.com/scholar?hl=en&q=Sungho+Lee%2C+Julian+Dolby%2C+and+Sukyoung+Ryu.+2016.+HybriDroid%3A+Static+analysis+framework+for+Android+hybrid+applications.+In+ASE.+250%2D%2D261.
http://scholar.google.com/scholar?hl=en&q=Sebastian+Lekies%2C+Ben+Stock%2C+and+Martin+Johns.+2013.+25+million+flows+later%3A+Large-scale+detection+of+DOM-based+XSS.+In+CCS.+1193%2D%2D1204.
http://scholar.google.com/scholar?hl=en&q=Maurizio+Leotta%2C+Andrea+Stocco%2C+Filippo+Ricca%2C+and+Paolo+Tonella.+2014.+Reducing+web+test+cases+aging+by+means+of+robust+XPath+locators.+In+ISSRE.+449%2D%2D454.+10.1109%2FISSREW.2014.17+
http://scholar.google.com/scholar?hl=en&q=Guodong+Li%2C+Esben+Andreasen%2C+and+Indradeep+Ghosh.+2014a.+SymJS%3A+Automatic+symbolic+testing+of+JavaScript+web+applications.+In+FSE.+449%2D%2D459.
http://scholar.google.com/scholar?hl=en&q=Yuan-Fang+Li%2C+Paramjit+K.+Das%2C+and+David+L.+Dowe.+2014b.+Two+decades+of+Web+application+testing+-+A+survey+of+recent+advances.+Inf.+Syst.+43+%282014%29%2C+20%2D%2D54.+10.1016%2Fj.is.2014.02.001+
http://scholar.google.com/scholar?hl=en&q=Magnus+Madsen%2C+Frank+Tip%2C+Esben+Andreasen%2C+Koushik+Sen%2C+and+Anders+M%C3%B8ller.+2016.+Feedback-directed+instrumentation+for+deployed+JavaScript+applications.+In+ICSE.+899%2D%2D910.
http://scholar.google.com/scholar?hl=en&q=Josip+Maras%2C+Jan+Carlson%2C+and+Ivica+Crnkovic.+2011.+Client-side+web+application+slicing.+In+ASE.+504%2D%2D507.+10.1109%2FASE.2011.6100110+
http://scholar.google.com/scholar?hl=en&q=Josip+Maras%2C+Jan+Carlson%2C+and+Ivica+Crnkovic.+2012.+Extracting+client-side+web+application+code.+In+WWW.+819%2D%2D828.
http://scholar.google.com/scholar?hl=en&q=Nick+Matthijssen%2C+Andy+Zaidman%2C+Margaret-Anne+D.+Storey%2C+R.+Ian+Bull%2C+and+Arie+van+Deursen.+2010.+Connecting+traces%3A+Understanding+client-server+interactions+in+ajax+applications.+In+ICPC.+216%2D%2D225.
http://scholar.google.com/scholar?hl=en&q=Fadi+Meawad%2C+Gregor+Richards%2C+Flor%C3%A9al+Morandat%2C+and+Jan+Vitek.+2012.+Eval+begone%26excl%3B%3A+Semi-automated+removal+of+eval+from+JavaScript+programs.+In+OOPSLA.+607%2D%2D620.
http://scholar.google.com/scholar?hl=en&q=Ali+Mesbah.+2015.+Advances+in+testing+JavaScript-based+web+applications.+Adv.+Comput.+97+%282015%29%2C+201%2D%2D235.+10.1016%2Fbs.adcom.2014.12.003
http://scholar.google.com/scholar?hl=en&q=Ali+Mesbah+and+Mukul+R.+Prasad.+2011.+Automated+cross-browser+compatibility+testing.+In+ICSE.+561%2D%2D570.+10.1145%2F1985793.1985870+
http://scholar.google.com/scholar?hl=en&q=Ali+Mesbah%2C+Arie+van+Deursen%2C+and+Stefan+Lenselink.+2012.+Crawling+ajax-based+web+applications+through+dynamic+analysis+of+user+interface+state+changes.+Trans.+Web+6%2C+1+%282012%29%2C+3.
http://scholar.google.com/scholar?hl=en&q=James+W.+Mickens%2C+Jeremy+Elson%2C+and+Jon+Howell.+2010.+Mugshot%3A+Deterministic+capture+and+replay+for+JavaScript+applications.+In+NSDI.+159%2D%2D174.
http://scholar.google.com/scholar?hl=en&q=Edward+Miller+and+William+E.+Howden.+1981.+Software+Testing+8+Validation+Techniques.+IEEE+Computer+Society+Press.
http://scholar.google.com/scholar?hl=en&q=Shabnam+Mirshokraie+and+Ali+Mesbah.+2012.+JSART%3A+JavaScript+assertion-based+regression+testing.+In+ICWE%2C+Vol.+7387.+238%2D%2D252.
http://scholar.google.com/scholar?hl=en&q=Shabnam+Mirshokraie%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2013.+PYTHIA%3A+Generating+test+cases+with+oracles+for+JavaScript+applications.+In+ASE.+610%2D%2D615.
http://scholar.google.com/scholar?hl=en&q=Shabnam+Mirshokraie%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2015.+JSEFT%3A+Automated+JavaScript+unit+test+generation.+In+ICST.+1%2D%2D10.
http://scholar.google.com/scholar?hl=en&q=Erdal+Mutlu%2C+Serdar+Tasiran%2C+and+Benjamin+Livshits.+2015.+Detecting+JavaScript+races+that+matter.+In+ESEC%2FFSE.+381%2D%2D392.+10.1145%2F2786805.2786820+
http://scholar.google.com/scholar?hl=en&q=Alex+Nederlof%2C+Ali+Mesbah%2C+and+Arie+van+Deursen.+2014.+Software+engineering+for+the+web%3A+The+state+of+the+practice.+In+ICSE.+4%2D%2D13.
http://scholar.google.com/scholar?hl=en&q=Nick+Nikiforakis%2C+Luca+Invernizzi%2C+Alexandros+Kapravelos%2C+Steven+Van+Acker%2C+Wouter+Joosen%2C+Christopher+Kruegel%2C+Frank+Piessens%2C+and+Giovanni+Vigna.+2012.+You+are+what+you+include%3A+Large-scale+evaluation+of+remote+JavaScript+inclusions.+In+CCS.+736%2D%2D747.
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza+Jr.%2C+Kartik+Bajaj%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2013.+An+empirical+study+of+client-side+JavaScript+bugs.+In+ESEM.+55%2D%2D64.+10.1109%2FESEM.2013.18
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza+Jr.%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2012.+AutoFLox%3A+An+automatic+fault+localizer+for+client-side+JavaScript.+In+ICST.+31%2D%2D40.
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza+Jr.%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2014.+Vejovis%3A+Suggesting+fixes+for+JavaScript+faults.+In+ICSE.+837%2D%2D847.
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza+Jr.%2C+Karthik+Pattabiraman%2C+and+Benjamin+G.+Zorn.+2011.+JavaScript+errors+in+the+wild%3A+An+empirical+study.+In+ISSRE.+100%2D%2D109.
http://scholar.google.com/scholar?hl=en&q=Stephen+Oney+and+Brad+A.+Myers.+2009.+FireCrystal%3A+Understanding+interactive+behaviors+in+dynamic+web+pages.+In+VL%2FHCC.+105%2D%2D108.
http://scholar.google.com/scholar?hl=en&q=Carlos+Pacheco%2C+Shuvendu+K.+Lahiri%2C+Michael+D.+Ernst%2C+and+Thomas+Ball.+2007.+Feedback-directed+random+test+generation.+In+ICSE.+75%2D%2D84.+10.1109%2FICSE.2007.37+
http://scholar.google.com/scholar?hl=en&q=Harish+Patil%2C+Cristiano+Pereira%2C+Mack+Stallcup%2C+Gregory+Lueck%2C+and+James+Cownie.+2010.+PinPlay%3A+A+framework+for+deterministic+replay+and+reproducible+analysis+of+parallel+programs.+In+CGO.+2%2D%2D11.+10.1145%2F1772954.1772958+
http://scholar.google.com/scholar?hl=en&q=Boris+Petrov%2C+Martin+T.+Vechev%2C+Manu+Sridharan%2C+and+Julian+Dolby.+2012.+Race+detection+for+web+applications.+In+PLDI.+251%2D%2D262.+10.1145%2F2254064.2254095+
http://scholar.google.com/scholar?hl=en&q=Michael+Pradel%2C+Parker+Schuh%2C+George+C.+Necula%2C+and+Koushik+Sen.+2014.+EventBreak%3A+Analyzing+the+responsiveness+of+user+interfaces+through+performance-guided+test+generation.+In+OOPSLA.+33%2D%2D47.
http://scholar.google.com/scholar?hl=en&q=Michael+Pradel%2C+Parker+Schuh%2C+and+Koushik+Sen.+2015.+TypeDevil%3A+Dynamic+type+inconsistency+analysis+for+JavaScript.+In+ICSE.+314%2D%2D324.
http://scholar.google.com/scholar?hl=en&q=Michael+Pradel+and+Koushik+Sen.+2015.+The+good%2C+the+bad%2C+and+the+ugly%3A+An+empirical+study+of+implicit+type+conversions+in+JavaScript.+In+ECOOP%2C+Vol.+37.+519%2D%2D541.
http://scholar.google.com/scholar?hl=en&q=Paruj+Ratanaworabhan%2C+Benjamin+Livshits%2C+and+Benjamin+G.+Zorn.+2010.+JSMeter%3A+Comparing+the+behavior+of+JavaScript+benchmarks+with+real+web+applications.+In+WebApps.
http://scholar.google.com/scholar?hl=en&q=Veselin+Raychev%2C+Martin+T.+Vechev%2C+and+Manu+Sridharan.+2013.+Effective+race+detection+for+event-driven+programs.+In+OOPSLA.+151%2D%2D166.+10.1145%2F2509136.2509538+
http://scholar.google.com/scholar?hl=en&q=Gregor+Richards%2C+Andreas+Gal%2C+Brendan+Eich%2C+and+Jan+Vitek.+2011a.+Automated+construction+of+JavaScript+benchmarks.+In+OOPSLA.+677%2D%2D694.+10.1145%2F2048066.2048119+
http://scholar.google.com/scholar?hl=en&q=Gregor+Richards%2C+Christian+Hammer%2C+Brian+Burg%2C+and+Jan+Vitek.+2011b.+The+eval+that+men+do+-+A+large-scale+study+of+the+use+of+eval+in+JavaScript+applications.+In+ECOOP%2C+Vol.+6813.+52%2D%2D78.
http://scholar.google.com/scholar?hl=en&q=Gregor+Richards%2C+Sylvain+Lebresne%2C+Brian+Burg%2C+and+Jan+Vitek.+2010.+An+analysis+of+the+dynamic+behavior+of+JavaScript+programs.+In+PLDI.+1%2D%2D12.+10.1145%2F1806596.1806598+
http://scholar.google.com/scholar?hl=en&q=Philippe+De+Ryck%2C+Maarten+Decat%2C+Lieven+Desmet%2C+Frank+Piessens%2C+and+Wouter+Joosen.+2010.+Security+of+web+mashups%3A+A+survey.+In+NordSec.+223%2D%2D238.
http://scholar.google.com/scholar?hl=en&q=Andrei+Sabelfeld+and+Andrew+C.+Myers.+2003.+Language-based+information-flow+security.+IEEE+J.+Select.Areas+Commun.+21%2C+1+%282003%29%2C+5%2D%2D19.+10.1109%2FJSAC.2002.806121+
http://scholar.google.com/scholar?hl=en&q=Caitlin+Sadowski%2C+Jeffrey+van+Gogh%2C+Ciera+Jaspan%2C+Emma+S%C3%B6derberg%2C+and+Collin+Winter.+2015.+Tricorder%3A+Building+a+program+analysis+ecosystem.+In+ICSE.+598%2D%2D608.
http://scholar.google.com/scholar?hl=en&q=Prateek+Saxena%2C+Devdatta+Akhawe%2C+Steve+Hanna%2C+Feng+Mao%2C+Stephen+McCamant%2C+and+Dawn+Song.+2010a.+A+symbolic+execution+framework+for+JavaScript.+In+S%26P.+513%2D%2D528.+10.1109%2FSP.2010.38+
http://scholar.google.com/scholar?hl=en&q=Prateek+Saxena%2C+Steve+Hanna%2C+Pongsin+Poosankam%2C+and+Dawn+Song.+2010b.+FLAX%3A+Systematic+discovery+of+client-side+validation+vulnerabilities+in+rich+web+applications.+In+NDSS.
http://scholar.google.com/scholar?hl=en&q=Marija+Selakovic+and+Michael+Pradel.+2016.+Performance+issues+and+optimizations+in+JavaScript%3A+An+empirical+study.+In+ICSE.+61%2D%2D72.
http://scholar.google.com/scholar?hl=en&q=Koushik+Sen%2C+Swaroop+Kalasapur%2C+Tasneem+G.+Brutch%2C+and+Simon+Gibbs.+2013.+Jalangi%3A+A+selective+record-replay+and+dynamic+analysis+framework+for+JavaScript.+In+ESEC%2FFSE.+488%2D%2D498.+10.1145%2F2491411.2491447+
http://scholar.google.com/scholar?hl=en&q=Koushik+Sen%2C+George+C.+Necula%2C+Liang+Gong%2C+and+Wontae+Choi.+2015.+MultiSE%3A+Multi-path+symbolic+execution+using+value+summaries.+In+FSE.+842%2D%2D853.
http://scholar.google.com/scholar?hl=en&q=Charles+R.+Severance.+2012.+JavaScript%3A+Designing+a+language+in+10+days.+IEEE+Comput.+45%2C+2+%282012%29%2C+7%2D%2D8.+10.1109%2FMC.2012.57+
http://scholar.google.com/scholar?hl=en&q=Sooel+Son+and+Vitaly+Shmatikov.+2013.+The+postman+always+rings+twice%3A+Attacking+and+defending+postmessage+in+HTML5+websites.+In+NDSS.
http://scholar.google.com/scholar?hl=en&q=Manu+Sridharan%2C+Julian+Dolby%2C+Satish+Chandra%2C+Max+Sch%C3%A4fer%2C+and+Frank+Tip.+2012.+Correlation+tracking+for+points-to+analysis+of+JavaScript.+In+ECOOP%2C+Vol.+7313.+435%2D%2D458.
http://scholar.google.com/scholar?hl=en&q=Vincent+St-Amour+and+Shu-yu+Guo.+2015.+Optimization+coaching+for+JavaScript+%28Artifact%29.+DARTS+1%2C+1+%282015%29%2C+05%3A1%2D%2D05%3A2.
http://scholar.google.com/scholar?hl=en&q=Hallvord+Reiar+Michaelsen+Steen.+2009.+Websites+playing+timing+roulette.+Retrieved+from+https%3A%2F%2Fhallvors.wordpress.com%2F2009%2F03%2F07%2Fwebsites-pl+aying-timing-roulette%2F.
http://scholar.google.com/scholar?hl=en&q=Ben+Stock%2C+Sebastian+Lekies%2C+Tobias+Mueller%2C+Patrick+Spiegel%2C+and+Martin+Johns.+2014.+Precise+client-side+protection+against+DOM-based+cross-site+scripting.+In+USENIX+Security+Symposium.+655%2D%2D670.
http://scholar.google.com/scholar?hl=en&q=Hideo+Tanida%2C+Tadahiro+Uehara%2C+Guodong+Li%2C+and+Indradeep+Ghosh.+2015.+Automated+unit+testing+of+JavaScript+code+through+symbolic+executor+SymJS.+International+Journal+on+Advances+in+Software+8%2C+1+%282015%29%2C+146%2D%2D155.
http://scholar.google.com/scholar?hl=en&q=Peter+Thiemann.+2005.+Towards+a+type+system+for+analyzing+JavaScript+programs.+In+ESOP%2C+Vol.+3444.+408%2D%2D422.+10.1007%2F978-3-540-31987-0_28+
http://scholar.google.com/scholar?hl=en&q=Omer+Tripp%2C+Pietro+Ferrara%2C+and+Marco+Pistoia.+2014.+Hybrid+security+analysis+of+web+JavaScript+code+via+dynamic+partial+evaluation.+In+ISSTA.+49%2D%2D59.+10.1145%2F2610384.2610385+
http://scholar.google.com/scholar?hl=en&q=Shiyi+Wei+and+Barbara+G.+Ryder.+2013.+Practical+blended+taint+analysis+for+JavaScript.+In+ISSTA.+336%2D%2D346.+10.1145%2F2483760.2483788+
http://scholar.google.com/scholar?hl=en&q=Shiyi+Wei%2C+Franceska+Xhakaj%2C+and+Barbara+G.+Ryder.+2016.+Empirical+study+of+the+dynamic+behavior+of+JavaScript+objects.+Softw.+Pract.+Exper.+46%2C+7+%282016%29%2C+867%2D%2D889.+10.1002%2Fspe.2334+
http://scholar.google.com/scholar?hl=en&q=Xiao+Xiao%2C+Shi+Han%2C+Charles+Zhang%2C+and+Dongmei+Zhang.+2015.+Uncovering+JavaScript+performance+code+smells+relevant+to+type+mutations.+In+APLAS%2C+Vol.+9458.+335%2D%2D355.+10.1007%2F978-3-319-26529-2_18
http://scholar.google.com/scholar?hl=en&q=Dachuan+Yu%2C+Ajay+Chander%2C+Nayeem+Islam%2C+and+Igor+Serikov.+2007.+JavaScript+instrumentation+for+browser+security.+In+POPL.+237%2D%2D249.+10.1145%2F1190216.1190252+
http://scholar.google.com/scholar?hl=en&q=Chuan+Yue+and+Haining+Wang.+2009.+Characterizing+insecure+JavaScript+practices+on+the+web.+In+WWW.+961%2D%2D970.
http://scholar.google.com/scholar?hl=en&q=Sai+Zhang%2C+Hao+L%C3%BC%2C+and+Michael+D.+Ernst.+2013.+Automatically+repairing+broken+workflows+for+evolving+GUI+applications.+In+ISSTA.+45%2D%2D55.
http://scholar.google.com/scholar?hl=en&q=Yunhui+Zheng%2C+Tao+Bao%2C+and+Xiangyu+Zhang.+2011.+Statically+locating+web+application+bugs+caused+by+asynchronous+calls.+In+WWW.+805%2D%2D814.
