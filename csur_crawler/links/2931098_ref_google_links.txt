http://scholar.google.com/scholar?hl=en&q=Alexander+Aiken.+1999.+Introduction+to+set+constraint-based+program+analysis.+Sci.+Comput.+Program.+35%2C+2%2D%2D3+%28Nov.+1999%29%2C+79%2D%2D111.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1016%2FS0167-6423%2899%2900007-6+10.1016%2FS0167-6423%2899%2900007-6+
http://scholar.google.com/scholar?hl=en&q=L.+O.+Andersen.+1994.+Program+Analysis+and+Specialization+for+the+C+Programming+Language.+Ph.D.+Dissertation.+DIKU%2C+University+of+Copenhagen.
http://scholar.google.com/scholar?hl=en&q=Gilad+Arnold%2C+Roman+Manevich%2C+Mooly+Sagiv%2C+and+Ran+Shaham.+2006.+Combining+shape+analyses+by+intersecting+abstractions.+In+Proceedings+of+the+7th+International+Conference+on+Verification%2C+Model+Checking%2C+and+Abstract+Interpretation+%28VMCAI%E2%80%9906%29.+Springer-Verlag%2C+Berlin%2C+33%2D%2D48.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F11609773_3+10.1007%2F11609773_3+
http://scholar.google.com/scholar?hl=en&q=Rahul+Asati%2C+Amitabha+Sanyal%2C+Amey+Karkare%2C+and+Alan+Mycroft.+2014.+Liveness-based+garbage+collection.+In+Proceedings+of+the+23rd+International+Conference+on+Compiler+Construction+%28CC%E2%80%9914%29.+Springer-Verlag%2C+Berlin%2C+85%2D%2D106.
http://scholar.google.com/scholar?hl=en&q=Uwe+A%C3%9Fmann+and+Markus+Weinhardt.+1993.+Interprocedural+heap+analysis+for+parallelizing+imperative+programs.+In+Proceedings+of+Programming+Models+for+Massively+Parallel+Computers.+IEEE+Computer+Society%2C+Washington%2C+DC%2C+74%2D%2D82.
http://scholar.google.com/scholar?hl=en&q=Gogul+Balakrishnan+and+Thomas+Reps.+2006.+Recency-abstraction+for+heap-allocated+storage.+In+Proceedings+of+the+13th+International+Conference+on+Static+Analysis+%28SAS%E2%80%9906%29.+Springer-Verlag%2C+Berlin%2C+221%2D%2D239.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F11823230_15+10.1007%2F11823230_15+
http://scholar.google.com/scholar?hl=en&q=Barnali+Basak%2C+Sandeep+Dasgupta%2C+and+Amey+Karkare.+2011.+Heap+dependence+analysis+for+sequential+programs.+In+Applications%2C+Tools+and+Techniques+on+the+Road+to+Exascale+Computing%2C+Proceedings+of+the+Conference+ParCo+2011%2C+31+August+-+3+September+2011%2C+Ghent%2C+Belgium.+IOS+Press%2C+Ghent%2C+Belgium%2C+99%2D%2D106.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.3233%2F978-1-61499-041-3-99
http://scholar.google.com/scholar?hl=en&q=Marc+Berndl%2C+Ondrej+Lhot%C3%A1k%2C+Feng+Qian%2C+Laurie+Hendren%2C+and+Navindra+Umanee.+2003.+Points-to+analysis+using+BDDs.+In+Proceedings+of+the+ACM+SIGPLAN+2003+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9903%29.+ACM%2C+New+York%2C+NY%2C+103%2D%2D114.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F781131.781144+10.1145%2F781131.781144+
http://scholar.google.com/scholar?hl=en&q=Sam+Blackshear%2C+Bor-Yuh+Evan+Chang%2C+and+Manu+Sridharan.+2013.+Thresher%3A+Precise+refutations+for+heap+reachability.+In+Proceedings+of+the+34th+ACM+SIGPLAN+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+275%2D%2D286.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2491956.2462186+10.1145%2F2491956.2462186+
http://scholar.google.com/scholar?hl=en&q=Sam+Blackshear%2C+Bor-Yuh+Evan+Chang%2C+and+Manu+Sridharan.+2015.+Selective+control-flow+abstraction+via+jumping.+In+Proceedings+of+the+2015+ACM+SIGPLAN+International+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications+%28OOPSLA+2015%29.+ACM%2C+New+York%2C+NY%2C+163%2D%2D182.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2814270.2814293+10.1145%2F2814270.2814293+
http://scholar.google.com/scholar?hl=en&q=Ahmed+Bouajjani%2C+Marius+Bozga%2C+Peter+Habermehl%2C+Radu+Iosif%2C+Pierre+Moro%2C+and+Tom%C3%A1%C5%A1+Vojnar.+2006.+Programs+with+lists+are+counter+automata.+In+Proceedings+of+the+18th+International+Conference+on+Computer+Aided+Verification+%28CAV%E2%80%9906%29.+Springer-Verlag%2C+Berlin%2C+517%2D%2D531.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F11817963_47+10.1007%2F11817963_47+
http://scholar.google.com/scholar?hl=en&q=Marius+Bozga%2C+Radu+Iosif%2C+and+Yassine+Lakhnech.+2004.+Static+Analysis%3A+11th+International+Symposium%2C+SAS+2004%2C+Verona%2C+Italy%2C+August+26-28%2C+2004.+Proceedings.+Springer%2C+Berlin%2C+344%2D%2D360.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F978-3-540-27864-1_25
http://scholar.google.com/scholar?hl=en&q=Marius+Bozga%2C+Radu+Iosif%2C+and+Yassine+Laknech.+2003.+Storeless+semantics+and+alias+logic.+SIGPLAN+Not.+38%2C+10+%28June+2003%29%2C+55%2D%2D65.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F966049.777395+10.1145%2F966049.777395+
http://scholar.google.com/scholar?hl=en&q=Cristiano+Calcagno%2C+Dino+Distefano%2C+Peter+W.+O%E2%80%99Hearn%2C+and+Hongseok+Yang.+2011.+Compositional+shape+analysis+by+means+of+bi-abduction.+J.+ACM+58%2C+6%2C+Article+26+%28Dec.+2011%29%2C+66+pages.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2049697.2049700+10.1145%2F2049697.2049700+
http://scholar.google.com/scholar?hl=en&q=R.+Castillo%2C+A.+Tineo%2C+F.+Corbera%2C+A.+Navarro%2C+R.+Asenjo%2C+and+E.+L.+Zapata.+2006.+Towards+a+versatile+pointer+analysis+framework.+In+Proceedings+of+the+12th+International+Conference+on+Parallel+Processing+%28Euro-Par%E2%80%9906%29.+Springer-Verlag%2C+Berlin%2C+323%2D%2D333.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F11823285_33+10.1007%2F11823285_33+
http://scholar.google.com/scholar?hl=en&q=Venkatesan+T.+Chakaravarthy.+2003.+New+results+on+the+computability+and+complexity+of+points%2D%2Dto+analysis.+In+Proceedings+of+the+30th+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9903%29.+ACM%2C+New+York%2C+NY%2C+115%2D%2D125.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F604131.604142+10.1145%2F604131.604142+
http://scholar.google.com/scholar?hl=en&q=Supratik+Chakraborty.+2012.+Reasoning+about+heap+manipulating+programs+using+automata+techniques.+In+Modern+Applications+of+Automata+Theory%2C+Deepak+D%E2%80%99Souza+and+Priti+Shankar+%28Eds.%29.+IISc-World+Scientific+Review+Volume%2C+India%2C+193%2D%2D228.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1142%2F9789814271059_0007
http://scholar.google.com/scholar?hl=en&q=David+R.+Chase%2C+Mark+Wegman%2C+and+F.+Kenneth+Zadeck.+1990.+Analysis+of+pointers+and+structures.+In+Proceedings+of+the+ACM+SIGPLAN+1990+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9990%29.+ACM%2C+New+York%2C+NY%2C+296%2D%2D310.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F93542.93585+10.1145%2F93542.93585+
http://scholar.google.com/scholar?hl=en&q=Stephen+Chong+and+Radu+Rugina.+2003.+Static+Analysis%3A+10th+International+Symposium%2C+SAS+2003+San+Diego%2C+CA%2C+USA%2C+June+11%2D%2D13%2C+2003+Proceedings.+Springer+Berlin+Heidelberg%2C+Berlin%2C+Heidelberg%2C+Chapter+Static+Analysis+of+Accessed+Regions+in+Recursive+Data+Structures%2C+463%2D%2D482.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F3-540-44898-5_26+
http://scholar.google.com/scholar?hl=en&q=Arnab+De+and+Deepak+D%E2%80%99Souza.+2012.+Scalable+flow-sensitive+pointer+analysis+for+java+with+strong+updates.+In+Proceedings+of+the+26th+European+Conference+on+Object-Oriented+Programming+%28ECOOP%E2%80%9912%29.+Springer-Verlag%2C+Berlin%2C+665%2D%2D687.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F978-3-642-31057-7_29+10.1007%2F978-3-642-31057-7_29+
http://scholar.google.com/scholar?hl=en&q=Alain+Deutsch.+1994.+Interprocedural+may-alias+analysis+for+pointers%3A+Beyond+k-limiting.+In+Proceedings+of+the+ACM+SIGPLAN+1994+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9994%29.+ACM%2C+New+York%2C+NY%2C+USA%2C+230%2D%2D241.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F178243.178263+10.1145%2F178243.178263+
http://scholar.google.com/scholar?hl=en&q=Dino+Distefano%2C+Peter+W.+O%E2%80%99Hearn%2C+and+Hongseok+Yang.+2006.+A+local+shape+analysis+based+on+separation+logic.+In+Proceedings+of+the+12th+International+Conference+on+Tools+and+Algorithms+for+the+Construction+and+Analysis+of+Systems+%28TACAS%E2%80%9906%29.+Springer-Verlag%2C+Berlin%2C+287%2D%2D302.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F11691372_19+10.1007%2F11691372_19+
http://scholar.google.com/scholar?hl=en&q=Amer+Diwan%2C+J.+Eliot%2C+B.+Moss%2C+and+Kathryn+S.+McKinley.+1996.+Simple+and+effective+analysis+of+statically-typed+object-oriented+programs.+In+Proceedings+of+the+11th+ACM+SIGPLAN+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications+%28OOPSLA%E2%80%9996%29.+ACM%2C+New+York%2C+NY%2C+292%2D%2D305.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F236337.236367+10.1145%2F236337.236367+
http://scholar.google.com/scholar?hl=en&q=Nurit+Dor%2C+Michael+Rodeh%2C+and+Mooly+Sagiv.+1998.+Detecting+memory+errors+via+static+pointer+analysis+%28preliminary+experience%29.+In+Proceedings+of+the+1998+ACM+Sigplan-Sigsoft+Workshop+on+Program+Analysis+for+Software+Tools+and+Engineering+%28PASTE%E2%80%9998%29.+ACM%2C+New+York%2C+NY%2C+27%2D%2D34.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F277631.277637+10.1145%2F277631.277637+
http://scholar.google.com/scholar?hl=en&q=Stephen+J.+Fink%2C+Kathleen+Knobe%2C+and+Vivek+Sarkar.+2000.+Unified+analysis+of+array+and+object+references+in+strongly+typed+languages.+In+Proceedings+of+the+7th+International+Symposium+on+Static+Analysis+%28SAS%E2%80%9900%29.+Springer-Verlag%2C+London%2C+155%2D%2D174.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B647169.718147+
http://scholar.google.com/scholar?hl=en&q=Manuel+Geffken%2C+Hannes+Saffrich%2C+and+Peter+Thiemann.+2014.+Precise+interprocedural+side-effect+analysis.+In+Theoretical+Aspects+of+Computing+-+ICTAC+2014-11th+International+Colloquium%2C+Bucharest%2C+Romania%2C+September+17-19%2C+2014.+Proceedings.+Springer+International+Publishing%2C+Cham%2C+188%2D%2D205.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F978-3-319-10882-7_12
http://scholar.google.com/scholar?hl=en&q=Pritam+M.+Gharat+and+Uday+P.+Khedker.+2016.+Flow+and+context+sensitive+points-to+analysis+using+higher+order+reachability.+CoRR+abs%2F1603.09597%2C+Article+1603.09597+%282016%29%2C+43+pages.+http%3A%2F%2Farxiv.org%2Fabs%2F1603.09597
http://scholar.google.com/scholar?hl=en&q=Rakesh+Ghiya.+1998.+Putting+Pointer+Analysis+to+Work.+Ph.D.+Dissertation.+McGill+University%2C+Montreal.+
http://scholar.google.com/scholar?hl=en&q=Rakesh+Ghiya+and+Laurie+J.+Hendren.+1996.+Is+it+a+tree%2C+a+DAG%2C+or+a+cyclic+graph%3F+A+shape+analysis+for+heap-directed+pointers+in+C.+In+Proceedings+of+the+23rd+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9996%29.+ACM%2C+New+York%2C+NY%2C+1%2D%2D15.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F237721.237724+10.1145%2F237721.237724+
http://scholar.google.com/scholar?hl=en&q=Rakesh+Ghiya+and+Laurie+J.+Hendren.+1998.+Putting+pointer+analysis+to+work.+In+Proceedings+of+the+25th+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9998%29.+ACM%2C+New+York%2C+NY%2C+121%2D%2D133.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F268946.268957+10.1145%2F268946.268957+
http://scholar.google.com/scholar?hl=en&q=Alexey+Gotsman%2C+Josh+Berdine%2C+and+Byron+Cook.+2006.+Interprocedural+shape+analysis+with+separated+heap+abstractions.+In+Proceedings+of+the+13th+International+Conference+on+Static+Analysis+%28SAS%E2%80%9906%29.+Springer-Verlag%2C+Berlin%2C+240%2D%2D260.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F11823230_16+10.1007%2F11823230_16+
http://scholar.google.com/scholar?hl=en&q=Samuel+Z.+Guyer+and+Calvin+Lin.+2003.+Client-driven+pointer+analysis.+In+Proceedings+of+the+10th+International+Conference+on+Static+Analysis+%28SAS%E2%80%9903%29.+Springer-Verlag%2C+Berlin%2C+214%2D%2D236.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B1760267.1760284+
http://scholar.google.com/scholar?hl=en&q=Ben+Hardekopf+and+Calvin+Lin.+2009.+Semi-sparse+flow-sensitive+pointer+analysis.+In+Proceedings+of+the+36th+Annual+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9909%29.+ACM%2C+New+York%2C+NY%2C+226%2D%2D238.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1480881.1480911+10.1145%2F1480881.1480911+
http://scholar.google.com/scholar?hl=en&q=Ben+Hardekopf+and+Calvin+Lin.+2011.+Flow-sensitive+pointer+analysis+for+millions+of+lines+of+code.+In+Proceedings+of+the+9th+Annual+IEEE%2FACM+International+Symposium+on+Code+Generation+and+Optimization+%28CGO%E2%80%9911%29.+IEEE+Computer+Society%2C+Washington%2C+DC%2C+289%2D%2D298.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B2190025.2190075+
http://scholar.google.com/scholar?hl=en&q=L.+Hendren%2C+C.+Donawa%2C+M.+Emami%2C+G.+Gao%2C+Justiani%2C+and+B.+Sridharan.+1993.+Designing+the+McCAT+compiler+based+on+a+family+of+structured+intermediate+representations.+In+Proceedings+of+the+5th+International+Workshop+on+Languages+and+Compilers+for+Parallel+Computing%2C+Utpal+Banerjee%2C+David+Gelernter%2C+Alex+Nicolau%2C+and+David+Padua+%28Eds.%29.+Lecture+Notes+in+Computer+Science%2C+Vol.+757.+Springer%2C+Berlin%2C+406%2D%2D420.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F3-540-57502-2_61+
http://scholar.google.com/scholar?hl=en&q=Laurie+J.+Hendren.+1990.+Parallelizing+Programs+with+Recursive+Data+Structures.+Ph.D.+Dissertation.+Cornell+University.+
http://scholar.google.com/scholar?hl=en&q=Laurie+J.+Hendren+and+Alexandru+Nicolau.+1989.+Intererence+analysis+tools+for+parallelizing+programs+with+recursive+data+structures.+In+Proceedings+of+the+3rd+International+Conference+on+Supercomputing+%28ICS%E2%80%9989%29.+ACM%2C+Heraklion%2C+Crete%2C+205%2D%2D214.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F318789.318812+10.1145%2F318789.318812+
http://scholar.google.com/scholar?hl=en&q=L.+J.+Hendren+and+A.+Nicolau.+1990.+Parallelizing+programs+with+recursive+data+structures.+IEEE+Trans.+Parallel+Distrib.+Syst.+1%2C+1+%28Jan.+1990%29%2C+35%2D%2D47.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1109%2F71.80123+10.1109%2F71.80123+
http://scholar.google.com/scholar?hl=en&q=Michael+Hind.+2001.+Pointer+analysis%3A+Haven%E2%80%99t+we+solved+this+problem+yet%3F+In+Proceedings+of+the+2001+ACM+SIGPLAN-SIGSOFT+Workshop+on+Program+Analysis+for+Software+Tools+and+Engineering+%28PASTE%E2%80%9901%29.+ACM%2C+New+York%2C+NY%2C+54%2D%2D61.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F379605.379665+10.1145%2F379605.379665+
http://scholar.google.com/scholar?hl=en&q=Michael+Hind%2C+Michael+Burke%2C+Paul+Carini%2C+and+Jong-Deok+Choi.+1999.+Interprocedural+pointer+alias+analysis.+ACM+Trans.+Program.+Lang.+Syst.+21%2C+4+%28July+1999%29%2C+848%2D%2D894.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F325478.325519+10.1145%2F325478.325519+
http://scholar.google.com/scholar?hl=en&q=Michael+Hind+and+Anthony+Pioli.+2000.+Which+pointer+analysis+should+I+use%3F+SIGSOFT+Softw.+Eng.+Notes+25%2C+5+%28Aug.+2000%29%2C+113%2D%2D123.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F347636.348916+10.1145%2F347636.348916+
http://scholar.google.com/scholar?hl=en&q=Martin+Hirzel%2C+Amer+Diwan%2C+and+Johannes+Henkel.+2002.+On+the+usefulness+of+type+and+liveness+accuracy+for+garbage+collection+and+leak+detection.+ACM+Trans.+Program.+Lang.+Syst.+24%2C+6+%28Nov.+2002%29%2C+593%2D%2D624.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F586088.586089+10.1145%2F586088.586089+
http://scholar.google.com/scholar?hl=en&q=C.+A.+R.+Hoare.+1969.+An+axiomatic+basis+for+computer+programming.+Commun.+ACM+12%2C+10+%28Oct.+1969%29%2C+576%2D%2D580.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F363235.363259+10.1145%2F363235.363259+
http://scholar.google.com/scholar?hl=en&q=Susan+Horwitz.+1997.+Precise+flow-insensitive+may-alias+analysis+is+NP-hard.+ACM+Trans.+Program.+Lang.+Syst.+19%2C+1+%28Jan.+1997%29%2C+1%2D%2D6.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F239912.239913+10.1145%2F239912.239913+
http://scholar.google.com/scholar?hl=en&q=David+Hovemeyer%2C+Jaime+Spacco%2C+and+William+Pugh.+2005.+Evaluating+and+tuning+a+static+analysis+to+find+null+pointer+bugs.+In+Proceedings+of+the+6th+ACM+SIGPLAN-SIGSOFT+Workshop+on+Program+Analysis+for+Software+Tools+and+Engineering+%28PASTE%E2%80%9905%29.+ACM%2C+New+York%2C+NY%2C+13%2D%2D19.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1108792.1108798+10.1145%2F1108792.1108798+
http://scholar.google.com/scholar?hl=en&q=Katsuro+Inoue%2C+Hiroyuki+Seki%2C+and+Hikaru+Yagi.+1988.+Analysis+of+functional+programs+to+detect+run-time+garbage+cells.+ACM+Trans.+Program.+Lang.+Syst.+10%2C+4+%28Oct.+1988%29%2C+555%2D%2D578.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F48022.48025+10.1145%2F48022.48025+
http://scholar.google.com/scholar?hl=en&q=Jakob+L.+Jensen%2C+Michael+E.+J%C3%B8rgensen%2C+Michael+I.+Schwartzbach%2C+and+Nils+Klarlund.+1997.+Automatic+verification+of+pointer+programs+using+monadic+second-order+logic.+In+Proceedings+of+the+ACM+SIGPLAN+1997+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9997%29.+ACM%2C+New+York%2C+NY%2C+226%2D%2D234.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F258915.258936+10.1145%2F258915.258936+
http://scholar.google.com/scholar?hl=en&q=Shubhangi+Khare%2C+Sandeep+Saraswat%2C+and+Shrawan+Kumar.+2011.+Static+program+analysis+of+large+embedded+code+base%3A+An+experience.+In+Proceedings+of+the+4th+India+Software+Engineering+Conference+%28ISEC%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+99%2D%2D102.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1953355.1953368+10.1145%2F1953355.1953368+
http://scholar.google.com/scholar?hl=en&q=Uday+P.+Khedker.+2013.+The+approximations+vs.+abstractions+dilemma+in+pointer+analysis.+In+Pointer+Analysis+%28Dagstuhl+Reports%29%2C+Ond%C5%99ej+Lhot%C3%A1k%2C+Yannis+Smaragdakis%2C+and+Manu+Sridharan+%28Eds.%29%2C+Vol.+3.+Schloss+Dagstuhl+%2D%2D+Leibniz-Zentrum+f%C3%BCr+Informatik%2C+Dagstuhl+Publishing%2C+Germany%2C+91%2D%2D113.+Issue+4.
http://scholar.google.com/scholar?hl=en&q=Uday+P.+Khedker%2C+Alan+Mycroft%2C+and+Prashant+Singh+Rawat.+2012.+Liveness-based+pointer+analysis.+In+Proceedings+of+the+19th+International+Conference+on+Static+Analysis+%28SAS%E2%80%9912%29.+Springer-Verlag%2C+Deauville%2C+265%2D%2D282.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F978-3-642-33125-1_19+10.1007%2F978-3-642-33125-1_19+
http://scholar.google.com/scholar?hl=en&q=Uday+P.+Khedker%2C+Amitabha+Sanyal%2C+and+Amey+Karkare.+2007.+Heap+reference+analysis+using+access+graphs.+ACM+Trans.+Program.+Lang.+Syst.+30%2C+1%2C+Article+1+%28Nov.+2007%29%2C+41+pages.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1290520.1290521+10.1145%2F1290520.1290521+
http://scholar.google.com/scholar?hl=en&q=Nils+Klarlund+and+Michael+I.+Schwartzbach.+1993.+Graph+types.+In+Proceedings+of+the+20th+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9993%29.+ACM%2C+New+York%2C+NY%2C+196%2D%2D205.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F158511.158628+10.1145%2F158511.158628+
http://scholar.google.com/scholar?hl=en&q=Raghavan+Komondoor.+2013.+Precise+slicing+in+imperative+programs+via+term-rewriting+and+abstract+interpretation.+In+SAS.+Springer+Berlin+Heidelberg%2C+Seattle%2C+WA%2C+259%2D%2D282.
http://scholar.google.com/scholar?hl=en&q=Thomas+Kotzmann+and+Hanspeter+M%C3%B6ssenb%C3%B6ck.+2005.+Escape+analysis+in+the+context+of+dynamic+compilation+and+deoptimization.+In+Proceedings+of+the+1st+ACM%2FUSENIX+International+Conference+on+Virtual+Execution+Environments+%28VEE%E2%80%9905%29.+ACM%2C+New+York%2C+NY%2C+111%2D%2D120.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1064979.1064996+10.1145%2F1064979.1064996+
http://scholar.google.com/scholar?hl=en&q=Prasanna+Kumar%2C+Amitabha+Sanyal%2C+and+Amey+Karkare.+2016.+Liveness-based+garbage+collection+for+lazy+languages.+In+Proceedings+of+the+2016+International+Symposium+on+Memory+Management+%28ISMM%E2%80%9916%29.+ACM%2C+New+York%2C+NY.+10.1145%2F2926697.2926698+
http://scholar.google.com/scholar?hl=en&q=Viktor+Kuncak%2C+Patrick+Lam%2C+Karen+Zee%2C+and+Martin+C.+Rinard.+2006.+Modular+pluggable+analyses+for+data+structure+consistency.+IEEE+Trans.+Softw.+Eng.+32%2C+12+%28Dec.+2006%29%2C+988%2D%2D1005.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1109%2FTSE.2006.125+10.1109%2FTSE.2006.125+
http://scholar.google.com/scholar?hl=en&q=Patrick+Lam%2C+Viktor+Kuncak%2C+and+Martin+Rinard.+2005a.+Generalized+typestate+checking+for+data+structure+consistency.+In+Proceedings+of+the+6th+International+Conference+on+Verification%2C+Model+Checking%2C+and+Abstract+Interpretation+%28VMCAI%E2%80%9905%29.+Springer-Verlag%2C+Berlin%2C+430%2D%2D447.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F978-3-540-30579-8_28+10.1007%2F978-3-540-30579-8_28+
http://scholar.google.com/scholar?hl=en&q=Patrick+Lam%2C+Viktor+Kuncak%2C+and+Martin+Rinard.+2005b.+Hob%3A+A+tool+for+verifying+data+structure+consistency.+In+Proceedings+of+the+14th+International+Conference+on+Compiler+Construction+%28CC%E2%80%9905%29.+Springer-Verlag%2C+Berlin%2C+237%2D%2D241.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2F978-3-540-31985-6_16+10.1007%2F978-3-540-31985-6_16+
http://scholar.google.com/scholar?hl=en&q=William+Landi+and+Barbara+G.+Ryder.+1992.+A+safe+approximate+algorithm+for+interprocedural+aliasing.+In+Proceedings+of+the+ACM+SIGPLAN+1992+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9992%29.+ACM%2C+New+York%2C+NY%2C+235%2D%2D248.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F143095.143137+10.1145%2F143095.143137+
http://scholar.google.com/scholar?hl=en&q=J.+R.+Larus+and+P.+N.+Hilfinger.+1988.+Detecting+conflicts+between+structure+accesses.+In+Proceedings+of+the+ACM+SIGPLAN+1988+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9988%29.+ACM%2C+New+York%2C+NY%2C+24%2D%2D31.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F53990.53993+10.1145%2F53990.53993+
http://scholar.google.com/scholar?hl=en&q=Chris+Lattner+and+Vikram+Adve.+2003.+Data+Structure+Analysis%3A+A+Fast+and+Scalable+Context-Sensitive+Heap+Analysis.+Technical+Report.+University+of+Illinois+at+Urbana+Champaign.
http://scholar.google.com/scholar?hl=en&q=Chris+Lattner%2C+Andrew+Lenharth%2C+and+Vikram+Adve.+2007.+Making+context-sensitive+points-to+analysis+with+heap+cloning+practical+for+the+real+world.+In+Proceedings+of+the+2007+ACM+SIGPLAN+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9907%29.+ACM%2C+New+York%2C+NY%2C+278%2D%2D289.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1250734.1250766+10.1145%2F1250734.1250766+
http://scholar.google.com/scholar?hl=en&q=Tal+Lev-Ami%2C+Thomas+Reps%2C+Mooly+Sagiv%2C+and+Reinhard+Wilhelm.+2000.+Putting+static+analysis+to+work+for+verification%3A+A+case+study.+In+Proceedings+of+the+2000+ACM+SIGSOFT+International+Symposium+on+Software+Testing+and+Analysis+%28ISSTA%E2%80%9900%29.+ACM%2C+New+York%2C+NY%2C+26%2D%2D38.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F347324.348031+10.1145%2F347324.348031+
http://scholar.google.com/scholar?hl=en&q=Ond%C5%99ej+Lhot%C3%A1k+and+Kwok-Chiang+Andrew+Chung.+2011.+Points-to+analysis+with+efficient+strong+updates.+In+Proceedings+of+the+38th+Annual+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+3%2D%2D16.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1926385.1926389+10.1145%2F1926385.1926389+
http://scholar.google.com/scholar?hl=en&q=Ond%C5%99ej+Lhotak%2C+Yannis+Smaragdakis%2C+and+Manu+Sridharan.+2013.+Pointer+analysis+%28Dagstuhl+seminar+13162%29.+Dagstuhl+Rep.+3%2C+4+%282013%29%2C+91%2D%2D113.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.4230%2FDagRep.3.4.91
http://scholar.google.com/scholar?hl=en&q=Percy+Liang+and+Mayur+Naik.+2011.+Scaling+abstraction+refinement+via+pruning.+In+Proceedings+of+the+32nd+ACM+SIGPLAN+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+590%2D%2D601.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1993498.1993567+10.1145%2F1993498.1993567+
http://scholar.google.com/scholar?hl=en&q=Benjamin+Livshits%2C+Manu+Sridharan%2C+Yannis+Smaragdakis%2C+Ond%C5%99ej+Lhot%C3%A1k%2C+J.+Nelson+Amaral%2C+Bor-Yuh+Evan+Chang%2C+Samuel+Z.+Guyer%2C+Uday+P.+Khedker%2C+Anders+M%C3%B8ller%2C+and+Dimitrios+Vardoulakis.+2015.+In+defense+of+soundiness%3A+A+manifesto.+Commun.+ACM+58%2C+2+%28Jan.+2015%29%2C+44%2D%2D46.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2644805+10.1145%2F2644805+
http://scholar.google.com/scholar?hl=en&q=Ravichandhran+Madhavan+and+Raghavan+Komondoor.+2011.+Null+dereference+verification+via+over-approximated+weakest+pre-conditions+analysis.+In+Proceedings+of+the+2011+ACM+International+Conference+on+Object+Oriented+Programming+Systems+Languages+and+Applications+%28OOPSLA%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+1033%2D%2D1052.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2048066.2048144+10.1145%2F2048066.2048144+
http://scholar.google.com/scholar?hl=en&q=Ravichandhran+Madhavan%2C+Ganesan+Ramalingam%2C+and+Kapil+Vaswani.+2011.+Purity+analysis%3A+An+abstract+interpretation+formulation.+In+Proceedings+of+the+18th+International+Conference+on+Static+Analysis+%28SAS%E2%80%9911%29.+Springer-Verlag%2C+Berlin%2C+7%2D%2D24.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B2041552.2041558+
http://scholar.google.com/scholar?hl=en&q=Mark+Marron%2C+Cesar+Sanchez%2C+Zhendong+Su%2C+and+Manuel+Fahndrich.+2013.+Abstracting+runtime+heaps+for+program+understanding.+IEEE+Trans.+Softw.+Eng.+39%2C+6+%28June+2013%29%2C+774%2D%2D786.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1109%2FTSE.+2012.69+10.1109%2FTSE.2012.69+
http://scholar.google.com/scholar?hl=en&q=Ivan+Matosevic+and+Tarek+S.+Abdelrahman.+2012.+Efficient+bottom-up+heap+analysis+for+symbolic+path-based+data+access+summaries.+In+Proceedings+of+the+Tenth+International+Symposium+on+Code+Generation+and+Optimization+%28CGO%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+252%2D%2D263.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2259016.2259049+10.1145%2F2259016.2259049+
http://scholar.google.com/scholar?hl=en&q=Ana+Milanova%2C+Atanas+Rountev%2C+and+Barbara+G.+Ryder.+2002.+Parameterized+object+sensitivity+for+points-to+and+side-effect+analyses+for+java.+SIGSOFT+Softw.+Eng.+Notes+27%2C+4+%28July+2002%29%2C+1%2D%2D11.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F566171.566174+10.1145%2F566171.566174+
http://scholar.google.com/scholar?hl=en&q=Anders+M%C3%B8ller.+2014.+MONA+project+home+page.+%282014%29.+www.brics.dk%2Fmona.
http://scholar.google.com/scholar?hl=en&q=Anders+M%C3%B8ller+and+Michael+I.+Schwartzbach.+2001.+The+pointer+assertion+logic+engine.+In+Proceedings+of+the+ACM+SIGPLAN+2001+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9901%29.+ACM%2C+New+York%2C+NY%2C+221%2D%2D231.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F378795.378851+10.1145%2F378795.378851+
http://scholar.google.com/scholar?hl=en&q=Rupesh+Nasre.+2012.+Scaling+Context-Sensitive+Points-to+Analysis.+Ph.D.+Dissertation.+Indian+Institute+of+Science%2C+Bangalore.
http://scholar.google.com/scholar?hl=en&q=Flemming+Nielson%2C+Hanne+R.+Nielson%2C+and+Chris+Hankin.+1999.+Principles+of+Program+Analysis.+Springer-Verlag%2C+New+York.+
http://scholar.google.com/scholar?hl=en&q=Erik+M.+Nystrom%2C+Hong-Seok+Kim%2C+and+Wen-mei+W.+Hwu.+2004.+Importance+of+heap+specialization+in+pointer+analysis.+In+Proceedings+of+the+5th+ACM+SIGPLAN-SIGSOFT+Workshop+on+Program+Analysis+for+Software+Tools+and+Engineering+%28PASTE%E2%80%9904%29.+ACM%2C+New+York%2C+NY%2C+43%2D%2D48.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F996821.996836+10.1145%2F996821.996836+
http://scholar.google.com/scholar?hl=en&q=Rohan+Padhye+and+Uday+P.+Khedker.+2013.+Interprocedural+data+flow+analysis+in+soot+using+value+contexts.+In+Proceedings+of+the+2nd+ACM+SIGPLAN+International+Workshop+on+State+Of+the+Art+in+Java+Program+Analysis+%28SOAP%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+31%2D%2D36.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2487568.2487569+10.1145%2F2487568.2487569+
http://scholar.google.com/scholar?hl=en&q=Lawrence+C.+Paulson.+1994.+Isabelle+-+A+Generic+Theorem+Prover+%28with+a+contribution+by+T.+Nipkow%29.+Lecture+Notes+in+Computer+Science%2C+Vol.+828.+Springer%2C+Berlin.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1007%2FBFb0030541
http://scholar.google.com/scholar?hl=en&q=David+J.+Pearce%2C+Paul+H.+J.+Kelly%2C+and+Chris+Hankin.+2007.+Efficient+field-sensitive+pointer+analysis+of+C.+ACM+Trans.+Program.+Lang.+Syst.+30%2C+1%2C+Article+4+%28Nov.+2007%29%2C+42+pages.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1290520.1290524+10.1145%2F1290520.1290524+
http://scholar.google.com/scholar?hl=en&q=G.+Ramalingam.+1994.+The+undecidability+of+aliasing.+ACM+Trans.+Program.+Lang.+Syst.+16%2C+5+%28Sept.+1994%29%2C+1467%2D%2D1471.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F186025.186041+10.1145%2F186025.186041+
http://scholar.google.com/scholar?hl=en&q=Thomas+Reps.+1997.+Program+analysis+via+graph+reachability.+In+Proceedings+of+the+1997+International+Symposium+on+Logic+Programming+%28ILPS%E2%80%9997%29.+MIT+Press%2C+Cambridge%2C+MA%2C+5%2D%2D19.+http%3A%2F%2Fdl.acm.org%2Fcitation.+cfm%3Fid%26equals%3B271338.271343+
http://scholar.google.com/scholar?hl=en&q=John+C.+Reynolds.+2002.+Separation+logic%3A+A+logic+for+shared+mutable+data+structures.+In+Proceedings+of+the+17th+Annual+IEEE+Symposium+on+Logic+in+Computer+Science+%28LICS%E2%80%9902%29.+IEEE+Computer+Society%2C+Washington%2C+DC%2C+55%2D%2D74.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B645683.664578+
http://scholar.google.com/scholar?hl=en&q=H.+G.+Rice.+1953.+Classes+of+recursively+enumerable+sets+and+their+decision+problems.+Trans.+Am.+Math.+Soc.+74%2C+2+%281953%29%2C+358%2D%2D366.+http%3A%2F%2Fwww.jstor.org%2Fstable%2F1990888
http://scholar.google.com/scholar?hl=en&q=Noam+Rinetzky.+2008.+Interprocedural+and+Modular+Local+Heap+Shape+Analysis.+Ph.D.+Dissertation.+Tel+Aviv+University.
http://scholar.google.com/scholar?hl=en&q=Noam+Rinetzky%2C+J%C3%B6rg+Bauer%2C+Thomas+Reps%2C+Mooly+Sagiv%2C+and+Reinhard+Wilhelm.+2005.+A+semantics+for+procedure+local+heaps+and+its+abstractions.+In+Proceedings+of+the+32nd+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9905%29.+ACM%2C+New+York%2C+NY%2C+296%2D%2D309.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1040305.1040330+10.1145%2F1040305.1040330+
http://scholar.google.com/scholar?hl=en&q=Atanas+Rountev%2C+Barbara+G.+Ryder%2C+and+William+Landi.+1999.+Data-flow+analysis+of+program+fragments.+In+Proceedings+of+the+7th+European+Software+Engineering+Conference+Held+Jointly+with+the+7th+ACM+SIGSOFT+International+Symposium+on+Foundations+of+Software+Engineering+%28ESEC%2FFSE-7%29.+Springer-Verlag%2C+London%2C+235%2D%2D252.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B318773.318945+
http://scholar.google.com/scholar?hl=en&q=Barbara+G.+Ryder.+2003.+Dimensions+of+precision+in+reference+analysis+of+object-oriented+programming+languages.+In+Proceedings+of+the+12th+International+Conference+on+Compiler+Construction+%28CC%E2%80%9903%29.+Springer-Verlag%2C+Berlin%2C+126%2D%2D137.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B1765931.1765945+
http://scholar.google.com/scholar?hl=en&q=Mooly+Sagiv%2C+Thomas+Reps%2C+and+Reinhard+Wilhelm.+1996.+Solving+shape-analysis+problems+in+languages+with+destructive+updating.+In+Proceedings+of+the+23rd+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9996%29.+ACM%2C+New+York%2C+NY%2C+16%2D%2D31.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F237721.237725+10.1145%2F237721.237725+
http://scholar.google.com/scholar?hl=en&q=Mooly+Sagiv%2C+Thomas+Reps%2C+and+Reinhard+Wilhelm.+1998.+Solving+shape-analysis+problems+in+languages+with+destructive+updating.+ACM+Trans.+Program.+Lang.+Syst.+20%2C+1+%28Jan.+1998%29%2C+1%2D%2D50.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F271510.271517+10.1145%2F271510.271517+
http://scholar.google.com/scholar?hl=en&q=Mooly+Sagiv%2C+Thomas+Reps%2C+and+Reinhard+Wilhelm.+1999.+Parametric+shape+analysis+via+3-valued+logic.+In+Proceedings+of+the+26th+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9999%29.+ACM%2C+New+York%2C+NY%2C+105%2D%2D118.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F292540.292552+10.1145%2F292540.292552+
http://scholar.google.com/scholar?hl=en&q=Mooly+Sagiv%2C+Thomas+Reps%2C+and+Reinhard+Wilhelm.+2007.+Shape+analysis+and+applications.+In+Compiler+Design+Handbook%3A+Optimizations+and+Machine+Code+Generation%2C+Y.+N.+Srikant+and+P.+Shankar+%28Eds.%29.+CRC+Press%2C+Inc%2C+Boca+Raton%2C+FL%2C+Chapter+12%2C+1%2D%2D44.
http://scholar.google.com/scholar?hl=en&q=Damien+Sereni.+2006.+Termination+Analysis+of+Higher-Order+Functional+Programs.+Ph.D.+Dissertation.+Oxford+University.
http://scholar.google.com/scholar?hl=en&q=Ran+Shaham%2C+Eran+Yahav%2C+Elliot+K.+Kolodner%2C+and+Mooly+Sagiv.+2003.+Establishing+local+temporal+heap+safety+properties+with+applications+to+compile-time+memory+management.+In+Proceedings+of+the+10th+International+Conference+on+Static+Analysis+%28SAS%E2%80%9903%29.+Springer-Verlag%2C+Berlin%2C+483%2D%2D503.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B1760267.1760304+
http://scholar.google.com/scholar?hl=en&q=Marc+Shapiro+II+and+Susan+Horwitz.+1997.+The+effects+of+the+precision+of+pointer+analysis.+In+Proceedings+of+the+4th+International+Symposium+on+Static+Analysis+%28SAS%E2%80%9997%29.+Springer-Verlag%2C+London%2C+16%2D%2D34.+http%3A%2F%2Fdl.acm.org%2Fcitation.cfm%3Fid%26equals%3B647166.717860+
http://scholar.google.com/scholar?hl=en&q=Elodie-Jane+Sims.+2007.+Pointer+Analysis+and+Separation+Logic.+Ph.D.+Dissertation.+Kansas+State+University.+
http://scholar.google.com/scholar?hl=en&q=Yannis+Smaragdakis+and+George+Balatsouras.+2015.+Pointer+analysis.+Found.+Trends+Program.+Lang.+2%2C+1+%28April+2015%29%2C+1%2D%2D69.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1561%2F2500000014+10.1561%2F2500000014+
http://scholar.google.com/scholar?hl=en&q=Yannis+Smaragdakis%2C+Martin+Bravenboer%2C+and+Ond%C5%99ej+Lhot%C3%A1k.+2011.+Pick+your+contexts+well%3A+Understanding+object-sensitivity.+In+Proceedings+of+the+38th+Annual+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+17%2D%2D30.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1926385.1926390+10.1145%2F1926385.1926390+
http://scholar.google.com/scholar?hl=en&q=Manu+Sridharan+and+Rastislav+Bod%C3%ADk.+2006.+Refinement-based+context-sensitive+points-to+analysis+for+java.+In+Proceedings+of+the+27th+ACM+SIGPLAN+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9906%29.+ACM%2C+New+York%2C+NY%2C+387%2D%2D400.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1133981.1134027+10.1145%2F1133981.1134027+
http://scholar.google.com/scholar?hl=en&q=Manu+Sridharan%2C+Satish+Chandra%2C+Julian+Dolby%2C+Stephen+J.+Fink%2C+and+Eran+Yahav.+2013.+Aliasing+in+object-oriented+programming.+In+Alias+Analysis+for+Object-oriented+Programs%2C+Dave+Clarke%2C+James+Noble%2C+and+Tobias+Wrigstad+%28Eds.%29.+Springer-Verlag%2C+Berlin%2C+196%2D%2D232.+http%3A%2F%2Fdl.acm.org%2Fcitation.+cfm%3Fid%26equals%3B2554511.2554523+
http://scholar.google.com/scholar?hl=en&q=Y.+N.+Srikant+and+Priti+Shankar.+2007.+The+Compiler+Design+Handbook%3A+Optimizations+and+Machine+Code+Generation%2C+Second+Edition+%282nd+ed.%29.+CRC+Press%2C+Inc.%2C+Boca+Raton%2C+FL.+
http://scholar.google.com/scholar?hl=en&q=Bjarne+Steensgaard.+1996.+Points-to+analysis+in+almost+linear+time.+In+Proceedings+of+the+23rd+ACM+SIGPLAN-SIGACT+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9996%29.+ACM%2C+New+York%2C+NY%2C+32%2D%2D41.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F237721.237727+10.1145%2F237721.237727+
http://scholar.google.com/scholar?hl=en&q=Vijay+Sundaresan%2C+Laurie+Hendren%2C+Chrislain+Razafimahefa%2C+Raja+Vall%C3%A9e-Rai%2C+Patrick+Lam%2C+Etienne+Gagnon%2C+and+Charles+Godin.+2000.+Practical+virtual+method+call+resolution+for+java.+In+Proceedings+of+the+15th+ACM+SIGPLAN+Conference+on+Object-oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications+%28OOPSLA%E2%80%9900%29.+ACM%2C+New+York%2C+NY%2C+264%2D%2D280.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F353171.353189+10.1145%2F353171.353189+
http://scholar.google.com/scholar?hl=en&q=Fr%C3%A9d%C3%A9ric+Vivien+and+Martin+Rinard.+2001.+Incrementalized+pointer+and+escape+analysis.+In+Proceedings+of+the+ACM+SIGPLAN+2001+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9901%29.+ACM%2C+New+York%2C+NY%2C+35%2D%2D46.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F378795.378804+10.1145%2F378795.378804+
http://scholar.google.com/scholar?hl=en&q=John+Whaley+and+Monica+S.+Lam.+2004.+Cloning-based+context-sensitive+pointer+alias+analysis+using+binary+decision+diagrams.+In+Proceedings+of+the+ACM+SIGPLAN+2004+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9904%29.+ACM%2C+New+York%2C+NY%2C+131%2D%2D144.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F996841.996859+10.1145%2F996841.996859+
http://scholar.google.com/scholar?hl=en&q=Reinhard+Wilhelm%2C+Shmuel+Sagiv%2C+and+Thomas+W.+Reps.+2000.+Shape+analysis.+In+Proceedings+of+the+9th+International+Conference+on+Compiler+Construction+%28CC%E2%80%9900%29.+Springer-Verlag%2C+London%2C+1%2D%2D17.+http%3A%2F%2Fdl.acm.org%2Fcitation.+cfm%3Fid%26equals%3B647476.760384+
http://scholar.google.com/scholar?hl=en&q=Yichen+Xie+and+Alex+Aiken.+2007.+Saturn%3A+A+scalable+framework+for+error+detection+using+boolean+satisfiability.+ACM+Trans.+Program.+Lang.+Syst.+29%2C+3%2C+Article+16+%28May+2007%29%2C+43+pages.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1232420.1232423+10.1145%2F1232420.1232423+
http://scholar.google.com/scholar?hl=en&q=Guoqing+Xu+and+Atanas+Rountev.+2008.+Merging+equivalent+contexts+for+scalable+heap-cloning-based+context-sensitive+points-to+analysis.+In+Proceedings+of+the+2008+International+Symposium+on+Software+Testing+and+Analysis+%28ISSTA%E2%80%9908%29.+ACM%2C+New+York%2C+NY%2C+225%2D%2D236.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F1390630.1390658+10.1145%2F1390630.1390658+
http://scholar.google.com/scholar?hl=en&q=Xin+Zhang%2C+Ravi+Mangal%2C+Mayur+Naik%2C+and+Hongseok+Yang.+2014.+Hybrid+top-down+and+bottom-up+interprocedural+analysis.+In+Proceedings+of+the+35th+ACM+SIGPLAN+Conference+on+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9914%29.+ACM%2C+New+York%2C+NY%2C+249%2D%2D258.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F2594291.2594328+10.1145%2F2594291.2594328+
http://scholar.google.com/scholar?hl=en&q=Jianwen+Zhu.+2002.+Symbolic+pointer+analysis.+In+Proceedings+of+the+2002+IEEE%2FACM+International+Conference+on+Computer-aided+Design+%28ICCAD%E2%80%9902%29.+ACM%2C+New+York%2C+NY%2C+150%2D%2D157.+DOI%3Ahttp%3A%2F%2Fdx.doi.org%2F10.1145%2F774572.774594+10.1145%2F774572.774594+
