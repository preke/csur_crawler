http://scholar.google.com/scholar?hl=en&q=S.+Adelsberger%2C+S.+Sobernig%2C+and+G.+Neumann.+2014.+Towards+assessing+the+complexity+of+object+migration+in+dynamic%2C+feature-oriented+software+product+lines.+In+Proc.+Int%E2%80%99l+Workshop+Variability+Modelling+of+Software-intensive+Systems+%28VaMoS%E2%80%9914%29.+ACM%2C+New+York%2C+NY%2C+17%3A1%2D%2D17%3A8.+10.1145%2F2556624.2556645+
http://scholar.google.com/scholar?hl=en&q=M.+Alf%C3%A9rez%2C+R.+E.+Lopez-Herrejon%2C+A.+Moreira%2C+V.+Amaral%2C+and+A.+Egyed.+2011.+Supporting+consistency+checking+between+features+and+software+product+line+use+scenarios.+In+Proc.+Int%E2%80%99l+Conf.+Software+Reuse+%28ICSR%E2%80%9911%29.+Springer%2C+Berlin%2C+20%2D%2D35.+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+D.+Batory%2C+C.+K%C3%A4stner%2C+and+G.+Saake.+2013a.+Feature-Oriented+Software+Product+Lines%3A+Concepts+and+Implementation.+Springer%2C+Berlin.+
http://scholar.google.com/scholar?hl=en&q=S.+Apel+and+D.+Hutchins.+2010.+A+calculus+for+uniform+feature+composition.+ACM+Transactions+on+Programming+Languages+and+Systems+32%2C+5%2C+19%3A1%2D%2D19%3A33.+10.1145%2F1745312.1745316+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+C.+K%C3%A4stner%2C+A.+Gr%C3%B6%C3%9Flinger%2C+and+C.+Lengauer.+2010a.+Type+safety+for+feature-oriented+product+lines.+Automated+Software+Engineering+17%2C+3%2C+251%2D%2D300.+10.1007%2Fs10515-010-0066-8+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+C.+K%C3%A4stner%2C+and+C.+Lengauer.+2008a.+Feature+featherweight+Java%3A+A+calculus+for+feature-oriented+programming+and+stepwise+refinement.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming+and+Component+Engineering+%28GPCE%E2%80%9908%29.+ACM%2C+New+York%2C+NY%2C+101%2D%2D112.+10.1145%2F1449913.1449931+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+T.+Leich%2C+and+G.+Saake.+2008b.+Aspectual+feature+modules.+IEEE+Transaction+on+Software+Engineering+34%2C+2%2C+162%2D%2D180.+10.1109%2FTSE.2007.70770+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+W.+Scholz%2C+C.+Lengauer%2C+and+C.+K%C3%A4stner.+2010b.+Detecting+dependences+and+interactions+in+feature-oriented+design.+In+Proc.+Int%E2%80%99l+Symposium+Software+Reliability+Engineering+%28ISSRE%E2%80%9910%29.+IEEE%2C+Washington%2C+DC%2C+161%2D%2D170.+10.1109%2FISSRE.2010.11+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+W.+Scholz%2C+C.+Lengauer%2C+and+C.+K%C3%A4stner.+2010c.+Language-independent+reference+checking+in+software+product+lines.+In+Proc.+Int%E2%80%99l+Workshop+Feature-Oriented+Software+Development+%28FOSD%E2%80%9910%29.+ACM%2C+New+York%2C+NY%2C+65%2D%2D71.+10.1145%2F1868688.1868698+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+H.+Speidel%2C+P.+Wendler%2C+A.+von+Rhein%2C+and+D.+Beyer.+2011.+Detection+of+feature+interactions+using+feature-aware+verification.+In+Proc.+Int%E2%80%99l+Conf.+Automated+Software+Engineering+%28ASE%E2%80%9911%29.+IEEE%2C+Washington%2C+DC%2C+372%2D%2D375.+10.1109%2FASE.2011.6100075+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+A.+von+Rhein%2C+T.+Th%C3%BCm%2C+and+C.+K%C3%A4stner.+2013b.+Feature-interaction+detection+based+on+feature-based+specifications.+Computer+Networks+57%2C+12%2C+2399%2D%2D2409.+10.1016%2Fj.comnet.2013.02.025+
http://scholar.google.com/scholar?hl=en&q=S.+Apel%2C+A.+von+Rhein%2C+P.+Wendler%2C+A.+Gr%C3%B6%C3%9Flinger%2C+and+D.+Beyer.+2013c.+Strategies+for+product-line+verification%3A+Case+studies+and+experiments.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9913%29.+IEEE%2C+Piscataway%2C+NJ%2C+482%2D%2D491.+
http://scholar.google.com/scholar?hl=en&q=P.+Asirelli%2C+M.+H.+ter+Beek%2C+A.+Fantechi%2C+and+S.+Gnesi.+2012.+A+compositional+framework+to+derive+product+line+behavioural+descriptions.+In+Proc.+Int%E2%80%99l+Symposium+Leveraging+Applications+of+Formal+Methods%2C+Verification+and+Validation+%28ISoLA%E2%80%9912%29.+Springer%2C+Berlin%2C+146%2D%2D161.+10.1007%2F978-3-642-34026-0_12+
http://scholar.google.com/scholar?hl=en&q=C.+Atkinson+and+T.+K%C3%BChne.+2003.+Model-Driven+development%3A+A+metamodeling+foundation.+IEEE+Software+20%2C+5%2C+36%2D%2D41.+10.1109%2FMS.2003.1231149+
http://scholar.google.com/scholar?hl=en&q=L.+Aversano%2C+M.+D.+Penta%2C+and+I.+D.+Baxter.+2002.+Handling+preprocessor-conditioned+declarations.+In+Proc.+Int%E2%80%99l+Workshop+Source+Code+Analysis+and+Manipulation+%28SCAM%E2%80%9902%29.+IEEE%2C+Washington%2C+DC%2C+83%2D%2D92.+
http://scholar.google.com/scholar?hl=en&q=D.+Batory.+2005.+Feature+models%2C+grammars%2C+and+propositional+formulas.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9905%29.+Springer%2C+Berlin%2C+7%2D%2D20.+10.1007%2F11554844_3+
http://scholar.google.com/scholar?hl=en&q=D.+Batory+and+E.+B%C3%B6rger.+2008.+Modularizing+theorems+for+software+product+lines%3A+The+jbook+case+study.+Journal+of+Universal+Computer+Science+14%2C+12%2C+2059%2D%2D2082.
http://scholar.google.com/scholar?hl=en&q=D.+Batory%2C+J.+N.+Sarvela%2C+and+A.+Rauschmayer.+2004.+Scaling+step-wise+refinement.+IEEE+Transactions+on+Software+Engineering+30%2C+6%2C+355%2D%2D371.+10.1109%2FTSE.2004.23+
http://scholar.google.com/scholar?hl=en&q=D.+Benavides%2C+S.+Segura%2C+and+A.+Ruiz-Cort%C3%A9s.+2010.+Automated+analysis+of+feature+models+20+years+later%3A+A+literature+review.+Information+Systems+35%2C+6%2C+615%2D%2D708.+10.1016%2Fj.is.2010.01.001+
http://scholar.google.com/scholar?hl=en&q=Y.+Bertot+and+P.+Cast%C3%A9ran.+2004.+Interactive+Theorem+Proving+and+Program+Development+-+Coq%E2%80%99Art%3A+The+Calculus+of+Inductive+Constructions.+Springer%2C+Berlin.+
http://scholar.google.com/scholar?hl=en&q=S.+Bessling+and+M.+Huhn.+2014.+Towards+formal+safety+analysis+in+feature-oriented+product+line+development.+In+Proc.+Int%E2%80%99l+Symposium+Foundations+of+Health+Information+Engineering+and+Systems+%28FHIES%E2%80%9914%29.+Springer%2C+Berlin%2C+217%2D%2D235.
http://scholar.google.com/scholar?hl=en&q=L.+Bettini%2C+F.+Damiani%2C+and+I.+Schaefer.+2013.+Compositional+type+checking+of+delta-oriented+software+product+lines.+Acta+Informatica+50%2C+2%2C+77%2D%2D122.+10.1007%2Fs00236-012-0173-z+
http://scholar.google.com/scholar?hl=en&q=L.+Bettini%2C+F.+Damiani%2C+and+I.+Schaefer.+2014.+Implementing+type-safe+software+product+lines+using+parametric+traits.+Science+of+Computer+Programming+To+appear.
http://scholar.google.com/scholar?hl=en&q=D.+Beyer%2C+T.+A.+Henzinger%2C+R.+Jhala%2C+and+R.+Majumdar.+2007.+The+software+model+checker+blast%3A+Applications+to+software+engineering.+International+Journal+of+Software+Tools+for+Technology+Transfer+9%2C+5%2C+505%2D%2D525.+10.1007%2Fs10009-007-0044-z+
http://scholar.google.com/scholar?hl=en&q=D.+Beyer+and+M.+E.+Keremoglu.+2011.+CPAchecker%3A+A+tool+for+configurable+software+verification.+In+Proc.+Int%E2%80%99l+Conf.+Computer+Aided+Verification+%28CAV%E2%80%9911%29.+Springer%2C+Berlin%2C+184%2D%2D190.+
http://scholar.google.com/scholar?hl=en&q=C.+Blundell%2C+K.+Fisler%2C+S.+Krishnamurthi%2C+and+P.+V.+Hentenryck.+2004.+Parameterized+interfaces+for+open+system+verification+of+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Automated+Software+Engineering+%28ASE%E2%80%9904%29.+IEEE%2C+Washington%2C+DC%2C+258%2D%2D267.+10.1109%2FASE.2004.53+
http://scholar.google.com/scholar?hl=en&q=E.+Bodden%2C+T.+Tol%C3%AAdo%2C+M.+Ribeiro%2C+C.+Brabrand%2C+P.+Borba%2C+and+M.+Mezini.+2013.+SPLLIFT%3A+Statically+analyzing+software+product+lines+in+minutes+instead+of+years.+In+Proc.+ACM+SIGPLAN+Conf.+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+355%2D%2D364.+10.1145%2F2491956.2491976+
http://scholar.google.com/scholar?hl=en&q=T.+F.+Bowen%2C+F.+S.+Dworack%2C+C.-H.+Chow%2C+N.+Griffeth%2C+G.+E.+Herman%2C+and+Y.-J.+Lin.+1989.+The+feature+interaction+problem+in+telecommunications+systems.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+for+Telecommunication+Switching+Systems+%28SETSS%E2%80%9989%29.+IEEE%2C+Washington%2C+DC%2C+59%2D%2D62.
http://scholar.google.com/scholar?hl=en&q=C.+Brabrand%2C+M.+Ribeiro%2C+T.+Tol%C3%AAdo%2C+J.+Winther%2C+and+P.+Borba.+2013.+Intraprocedural+dataflow+analysis+for+software+product+lines.+Transactions+on+Aspect-Oriented+Software+Development+10%2C+73%2D%2D108.+
http://scholar.google.com/scholar?hl=en&q=D.+Bruns%2C+V.+Klebanov%2C+and+I.+Schaefer.+2011.+Verification+of+software+product+lines+with+delta-oriented+slicing.+In+Proc.+Int%E2%80%99l+Conf.+Formal+Verification+of+Object-Oriented+Software+%28FoVeOOS%E2%80%9911%29.+Springer%2C+Berlin%2C+61%2D%2D75.+
http://scholar.google.com/scholar?hl=en&q=T.+Buchmann+and+F.+Schw%C3%A4gerl.+2012.+Ensuring+well-formedness+of+configured+domain+models+in+model-driven+product+lines+based+on+negative+variability.+In+Proc.+Int%E2%80%99l+Workshop+Feature-Oriented+Software+Development+%28FOSD%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+37%2D%2D44.+10.1145%2F2377816.2377822+
http://scholar.google.com/scholar?hl=en&q=M.+Calder%2C+M.+Kolberg%2C+E.+H.+Magill%2C+and+S.+Reiff-Marganiec.+2003.+Feature+interaction%3A+A+critical+review+and+considered+forecast.+Computer+Networks+41%2C+1%2C+115%2D%2D141.+10.1016%2FS1389-1286%2802%2900352-3+
http://scholar.google.com/scholar?hl=en&q=I.+D.+Carmo+Machado%2C+J.+D.+McGregor%2C+Y.+A.+C.+Cavalcanti%2C+and+E.+S.+De+Almeida.+2014.+On+strategies+for+testing+software+product+lines%3A+A+systematic+literature+review.+Journal+of+Information+and+Software+Technology+To+appear.
http://scholar.google.com/scholar?hl=en&q=S.+Chen%2C+M.+Erwig%2C+and+E.+Walkingshaw.+2014.+Extending+type+inference+to+variational+programs.+ACM+Transactions+on+Programming+Languages+and+Systems+36%2C+1%2C+1%3A1%2D%2D1%3A54.+10.1145%2F2518190+
http://scholar.google.com/scholar?hl=en&q=A.+Cimatti%2C+E.+M.+Clarke%2C+F.+Giunchiglia%2C+and+M.+Roveri.+1999.+NuSMV%3A+A+new+symbolic+model+verifier.+In+Proc.+Int%E2%80%99l+Conf.+Computer+Aided+Verification+%28CAV%E2%80%9999%29.+Springer%2C+London%2C+495%2D%2D499.+
http://scholar.google.com/scholar?hl=en&q=E.+M.+Clarke%2C+O.+Grumberg%2C+and+D.+A.+Peled.+1999.+Model+Checking.+MIT+Press%2C+Cambridge%2C+MA.+
http://scholar.google.com/scholar?hl=en&q=A.+Classen%2C+M.+Cordy%2C+P.+Heymans%2C+A.+Legay%2C+and+P.-Y.+Schobbens.+2014.+Formal+semantics%2C+modular+specification%2C+and+symbolic+verification+of+product-line+behaviour.+Science+of+Computer+Programming+80%2C+Part+B%2C+416%2D%2D439.+10.1016%2Fj.scico.2013.09.019+
http://scholar.google.com/scholar?hl=en&q=A.+Classen%2C+M.+Cordy%2C+P.-Y.+Schobbens%2C+P.+Heymans%2C+A.+Legay%2C+and+J.-F.+Raskin.+2013.+Featured+transition+systems%3A+Foundations+for+verifying+variability-intensive+systems+and+their+application+to+LTL+model+checking.+IEEE+Transactions+on+Software+Engineering+39%2C+8%2C+1069%2D%2D1089.+10.1109%2FTSE.2012.86+
http://scholar.google.com/scholar?hl=en&q=A.+Classen%2C+P.+Heymans%2C+P.-Y.+Schobbens%2C+A.+Legay%2C+and+J.-F.+Raskin.+2010.+Model+checking+lots+of+systems%3A+Efficient+verification+of+temporal+properties+in+software+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9910%29.+ACM%2C+New+York%2C+NY%2C+335%2D%2D344.+10.1145%2F1806799.1806850+
http://scholar.google.com/scholar?hl=en&q=P.+Clements+and+L.+Northrop.+2001.+Software+Product+Lines%3A+Practices+and+Patterns.+Addison-Wesley%2C+Boston%2C+MA.+
http://scholar.google.com/scholar?hl=en&q=M.+Cordy%2C+A.+Classen%2C+P.+Heymans%2C+A.+Legay%2C+and+P.-Y.+Schobbens.+2013a.+Model+checking+adaptive+software+with+featured+transition+systems.+In+Proc.+Workshop+Assurances+for+Self-Adaptive+Systems+%28ASAS%E2%80%9913%29.+Springer%2C+Berlin%2C+1%2D%2D29.
http://scholar.google.com/scholar?hl=en&q=M.+Cordy%2C+A.+Classen%2C+G.+Perrouin%2C+P.-Y.+Schobbens%2C+P.+Heymans%2C+and+A.+Legay.+2012a.+Simulation-based+abstractions+for+software+product-line+model+checking.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9912%29.+IEEE%2C+Piscataway%2C+NJ%2C+U672%2D%2D682.+
http://scholar.google.com/scholar?hl=en&q=M.+Cordy%2C+A.+Classen%2C+P.-Y.+Schobbens%2C+P.+Heymans%2C+and+A.+Legay.+2012b.+Managing+evolution+in+software+product+lines%3A+A+model-checking+perspective.+In+Proc.+Int%E2%80%99l+Workshop+Variability+Modelling+of+Software-intensive+Systems+%28VaMoS%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+183%2D%2D191.+10.1145%2F2110147.2110168+
http://scholar.google.com/scholar?hl=en&q=M.+Cordy%2C+P.-Y.+Schobbens%2C+P.+Heymans%2C+and+A.+Legay.+2012c.+Behavioural+modelling+and+verification+of+real-time+software+product+lines.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+66%2D%2D75.+10.1145%2F2362536.2362549+
http://scholar.google.com/scholar?hl=en&q=M.+Cordy%2C+P.-Y.+Schobbens%2C+P.+Heymans%2C+and+A.+Legay.+2012d.+Towards+an+incremental+automata-based+approach+for+software+product-line+model+checking.+In+Proc.+Int%E2%80%99l+Workshop+Formal+Methods+and+Analysis+in+Software+Product+Line+Engineering+%28FMSPLE%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+74%2D%2D81.+10.1145%2F2364412.2364425+
http://scholar.google.com/scholar?hl=en&q=M.+Cordy%2C+P.-Y.+Schobbens%2C+P.+Heymans%2C+and+A.+Legay.+2013b.+Beyond+boolean+product-line+model+checking%3A+Dealing+with+feature+attributes+and+multi-features.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9913%29.+IEEE%2C+Piscataway%2C+NJ%2C+472%2D%2D481.+
http://scholar.google.com/scholar?hl=en&q=P.+Cousot+and+R.+Cousot.+1977.+Abstract+interpretation%3A+A+unified+lattice+model+for+static+analysis+of+programs+by+construction+or+approximation+of+fixpoints.+In+Proc.+Symposium+Principles+of+Programming+Languages+%28POPL%E2%80%9977%29.+ACM%2C+New+York%2C+NY%2C+238%2D%2D252.+10.1145%2F512950.512973+
http://scholar.google.com/scholar?hl=en&q=K.+Czarnecki+and+U.+Eisenecker.+2000.+Generative+Programming%3A+Methods%2C+Tools%2C+and+Applications.+ACM%2FAddison-Wesley%2C+New+York%2C+NY.+
http://scholar.google.com/scholar?hl=en&q=K.+Czarnecki+and+K.+Pietroszek.+2006.+Verifying+feature-based+model+templates+against+well-formedness+OCL+constraints.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming+and+Component+Engineering+%28GPCE%E2%80%9906%29.+ACM%2C+New+York%2C+NY%2C+211%2D%2D220.+10.1145%2F1173706.1173738+
http://scholar.google.com/scholar?hl=en&q=P.+A.+Da+Mota+Silveira+Neto%2C+I.+D.+Carmo+Machado%2C+J.+D.+McGregor%2C+E.+S.+De+Almeida%2C+and+S.+R.+De+Lemos+Meira.+2011.+A+systematic+mapping+study+of+software+product+lines+testing.+Journal+of+Information+and+Software+Technology+53%2C+5%2C+407%2D%2D423.+10.1016%2Fj.infsof.2010.12.003+
http://scholar.google.com/scholar?hl=en&q=F.+Damiani%2C+O.+Owe%2C+J.+Dovland%2C+I.+Schaefer%2C+E.+B.+Johnsen%2C+and+I.+C.+Yu.+2012.+A+transformational+proof+system+for+delta-oriented+programming.+In+Proc.+Int%E2%80%99l+Workshop+Formal+Methods+and+Analysis+in+Software+Product+Line+Engineering+%28FMSPLE%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+53%2D%2D60.+10.1145%2F2364412.2364422+
http://scholar.google.com/scholar?hl=en&q=F.+Damiani+and+I.+Schaefer.+2012.+Family-based+analysis+of+type+safety+for+delta-oriented+software+product+lines.+In+Proc.+Int%E2%80%99l+Symposium+Leveraging+Applications+of+Formal+Methods%2C+Verification+and+Validation+%28ISoLA%E2%80%9912%29.+Springer%2C+Berlin%2C+193%2D%2D207.+10.1007%2F978-3-642-34026-0_15+
http://scholar.google.com/scholar?hl=en&q=I.+F.+Darwin.+1986.+Checking+C+Programs+with+Lint.+O%E2%80%99Reilly+%26+Associates%2C+Inc.%2C+Sebastopol%2C+CA.+
http://scholar.google.com/scholar?hl=en&q=B.+Delaware%2C+W.+Cook%2C+and+D.+Batory.+2009.+Fitting+the+pieces+together%3A+A+machine-checked+model+of+safe+composition.+In+Proc.+Europ.+Software+Engineering+Conf.%2FFoundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9909%29.+ACM%2C+New+York%2C+NY%2C+243%2D%2D252.+10.1145%2F1595696.1595733+
http://scholar.google.com/scholar?hl=en&q=B.+Delaware%2C+W.+Cook%2C+and+D.+Batory.+2011.+Product+lines+of+theorems.+In+Proc.+Conf.+Object-Oriented+Programming%2C+Systems%2C+Languages+and+Applications+%28OOPSLA%E2%80%991%29.+ACM%2C+New+York%2C+NY%2C+595%2D%2D608.+10.1145%2F2048066.2048113+
http://scholar.google.com/scholar?hl=en&q=B.+Delaware%2C+B.+C.+d.+S.+Oliveira%2C+and+T.+Schrijvers.+2013.+Meta-theory+%C3%A0+la+Carte.+In+Proc.+Symposium+Principles+of+Programming+Languages+%28POPL%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+207%2D%2D218.+10.1145%2F2429069.2429094+
http://scholar.google.com/scholar?hl=en&q=D.+Detlefs%2C+G.+Nelson%2C+and+J.+B.+Saxe.+2005.+Simplify%3A+A+theorem+prover+for+program+checking.+Journal+of+the+ACM+52%2C+3%2C+365%2D%2D473.+10.1145%2F1066100.1066102+
http://scholar.google.com/scholar?hl=en&q=E.+Engstr%C3%B6m+and+P.+Runeson.+2011.+Software+product+line+testing+-+A+systematic+mapping+study.+J.+of+Information+and+Software+Technology+53%2C+2%2D%2D13.+10.1016%2Fj.infsof.2010.05.011+
http://scholar.google.com/scholar?hl=en&q=L.+Etxeberria%2C+G.+Sagardui%2C+and+L.+Belategi.+2008.+Quality+aware+software+product+line+engineering.+Journal+of+the+Brazilian+Computer+Society+14%2C+1%2C+57%2D%2D69.
http://scholar.google.com/scholar?hl=en&q=A.+Fantechi+and+S.+Gnesi.+2008.+Formal+modeling+for+product+families+engineering.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9908%29.+IEEE%2C+Washington%2C+DC%2C+193%2D%2D202.+10.1109%2FSPLC.2008.45+
http://scholar.google.com/scholar?hl=en&q=D.+Fischbein%2C+S.+Uchitel%2C+and+V.+Braberman.+2006.+A+foundation+for+behavioural+conformance+in+software+product+line+architectures.+In+Proc.+Int%E2%80%99l+Workshop+Role+of+Software+Architecture+for+Testing+and+Analysis+%28ROSATEA%E2%80%9906%29.+ACM%2C+New+York%2C+NY%2C+39%2D%2D48.+10.1145%2F1147249.1147254+
http://scholar.google.com/scholar?hl=en&q=K.+Fisler+and+S.+Krishnamurthi.+2001.+Modular+verification+of+collaboration-based+software+designs.+In+Proc.+Europ.+Software+Engineering+Conf.%2FFoundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9901%29.+ACM%2C+New+York%2C+NY%2C+152%2D%2D163.+10.1145%2F503209.503231+
http://scholar.google.com/scholar?hl=en&q=K.+Fisler+and+S.+Krishnamurthi.+2005.+Decomposing+verification+around+end-user+features.+In+Proc.+IFIP+Working+Conf.+Verified+Software%3A+Theories%2C+Tools%2C+Experiments+%28VSTTE%E2%80%9905%29.+Springer%2C+Berlin%2C+74%2D%2D81.+10.1007%2F978-3-540-69149-5_10+
http://scholar.google.com/scholar?hl=en&q=P.+Gazzillo+and+R.+Grimm.+2012.+SuperC%3A+Parsing+all+of+C+by+taming+the+preprocessor.+In+Proc.+ACM+SIGPLAN+Conf.+Programming+Language+Design+and+Implementation+%28PLDI%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+323%2D%2D334.+10.1145%2F2254064.2254103+
http://scholar.google.com/scholar?hl=en&q=J.+Greenyer%2C+A.+M.+Sharifloo%2C+M.+Cordy%2C+and+P.+Heymans.+2013.+Features+meet+scenarios%3A+Modeling+and+consistency-checking+scenario-based+product+line+specifications.+Requirements+Engineering+18%2C+2%2C+175%2D%2D198.+10.1007%2Fs00766-013-0169-4+
http://scholar.google.com/scholar?hl=en&q=A.+Gruler%2C+M.+Leucker%2C+and+K.+Scheidemann.+2008.+Modeling+and+model+checking+software+product+lines.+In+Proc.+IFIP+Int%E2%80%99l+Conf.+Formal+Methods+for+Open+Object-based+Distributed+Systems+%28FMOODS%29.+Springer%2C+Berlin%2C+Heidelberg%2C+113%2D%2D131.+10.1007%2F978-3-540-68863-1_8+
http://scholar.google.com/scholar?hl=en&q=R.+H%C3%A4hnle+and+I.+Schaefer.+2012.+A+liskov+principle+for+delta-oriented+programming.+In+Proc.+Int%E2%80%99l+Symposium+Leveraging+Applications+of+Formal+Methods%2C+Verification+and+Validation+%28ISoLA%E2%80%9912%29.+Springer%2C+Berlin%2C+32%2D%2D46.+10.1007%2F978-3-642-34026-0_4+
http://scholar.google.com/scholar?hl=en&q=A.+Harhurin+and+J.+Hartmann.+2008.+Towards+consistent+specifications+of+product+families.+In+Proc.+Int%E2%80%99l+Symposium+Formal+Methods+%28FM%E2%80%9908%29.+Springer%2C+Berlin%2C+390%2D%2D405.+10.1007%2F978-3-540-68237-0_27+
http://scholar.google.com/scholar?hl=en&q=F.+Heidenreich.+2009.+Towards+systematic+ensuring+well-formedness+of+software+product+lines.+In+Proc.+Int%E2%80%99l+Workshop+Feature-Oriented+Software+Development+%28FOSD%E2%80%9909%29.+ACM%2C+New+York%2C+NY%2C+69%2D%2D74.+10.1145%2F1629716.1629730+
http://scholar.google.com/scholar?hl=en&q=G.+J.+Holzmann.+1997.+The+model+checker+SPIN.+IEEE+Transactions+on+Software+Engineering+23%2C+5%2C+279%2D%2D295.+10.1109%2F32.588521+
http://scholar.google.com/scholar?hl=en&q=D.+Hovemeyer+and+W.+Pugh.+2004.+Finding+bugs+is+easy.+SIGPLAN+Notices+39%2C+12%2C+92%2D%2D106.+10.1145%2F1052883.1052895+
http://scholar.google.com/scholar?hl=en&q=S.+S.+Huang%2C+D.+Zook%2C+and+Y.+Smaragdakis.+2007.+cJ%3A+Enhancing+java+with+safe+type+conditions.+In+Proc.+Int%E2%80%99l+Conf.+Aspect-Oriented+Software+Development+%28AOSD%E2%80%9907%29.+ACM%2C+New+York%2C+NY%2C+185%2D%2D198.+10.1145%2F1218563.1218584+
http://scholar.google.com/scholar?hl=en&q=S.+S.+Huang%2C+D.+Zook%2C+and+Y.+Smaragdakis.+2011.+Statically+safe+program+generation+with+SafeGen.+Science+of+Computer+Programming+76%2C+5%2C+376%2D%2D391.+10.1016%2Fj.scico.2008.09.007+
http://scholar.google.com/scholar?hl=en&q=P.+Istoan.+2013.+Methodology+for+the+derivation+of+product+behaviour+in+a+software+product+line.+Ph.D.+thesis%2C+Universit%C3%A9+Rennes+1%2C+Luxembourg.
http://scholar.google.com/scholar?hl=en&q=M.+Janota%2C+J.+Kiniry%2C+and+G.+Botterweck.+2008.+Formal+methods+in+software+product+lines%3A+Concepts%2C+survey%2C+and+guidelines.+Tech.+Rep.+Lero-TR-SPL-2008-02%2C+Lero%2C+University+of+Limerick.+May.
http://scholar.google.com/scholar?hl=en&q=P.+Jayaraman%2C+J.+Whittle%2C+A.+M.+Elkhodary%2C+and+H.+Gomaa.+2007.+Model+composition+in+product+lines+and+feature+interaction+detection+using+critical+pair+analysis.+In+Proc.+Int%E2%80%99l+Conf.+Model+Driven+Engineering+Languages+and+Systems+%28MODELS%E2%80%9907%29.+Springer%2C+Berlin%2C+151%2D%2D165.+
http://scholar.google.com/scholar?hl=en&q=E.+B.+Johnsen%2C+R.+H%C3%A4hnle%2C+J.+Sch%C3%A4fer%2C+R.+Schlatte%2C+and+M.+Steffen.+2012.+ABS%3A+A+core+language+for+abstract+behavioral+specification.+In+Proc.+Int%E2%80%99l+Symposium+Formal+Methods+for+Components+and+Objects+%28FMCO%E2%80%9912%29.+Springer%2C+Berlin%2C+142%2D%2D164.+10.1007%2F978-3-642-25271-6_8+
http://scholar.google.com/scholar?hl=en&q=K.+C.+Kang%2C+S.+G.+Cohen%2C+J.+A.+Hess%2C+W.+E.+Novak%2C+and+A.+S.+Peterson.+1990.+Feature-oriented+domain+analysis+%28FODA%29+feasibility+study.+Tech.+Rep.+CMU%2FSEI-90-TR-21%2C+Software+Engineering+Institute.
http://scholar.google.com/scholar?hl=en&q=C.+K%C3%A4stner%2C+S.+Apel%2C+T.+Th%C3%BCm%2C+and+G.+Saake.+2012a.+Type+checking+annotation-based+product+lines.+Transactions+on+Software+Engineering+and+Methodology+21%2C+3%2C+14%3A1%2D%2D14%3A39.+10.1145%2F2211616.2211617+
http://scholar.google.com/scholar?hl=en&q=C.+K%C3%A4stner%2C+S.+Apel%2C+S.+S.+ur+Rahman%2C+M.+Rosenm%C3%BCller%2C+D.+Batory%2C+and+G.+Saake.+2009.+On+the+impact+of+the+optional+feature+problem%3A+Analysis+and+case+studies.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9909%29.+Software+Engineering+Institute%2C+Pittsburgh%2C+PA%2C+181%2D%2D190.+
http://scholar.google.com/scholar?hl=en&q=C.+K%C3%A4stner%2C+P.+G.+Giarrusso%2C+T.+Rendel%2C+S.+Erdweg%2C+K.+Ostermann%2C+and+T.+Berger.+2011.+Variability-aware+parsing+in+the+presence+of+lexical+macros+and+conditional+compilation.+In+Proc.+Conf.+Object-Oriented+Programming%2C+Systems%2C+Languages+and+Applications+%28OOPSLA%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+805%2D%2D824.+10.1145%2F2048066.2048128+
http://scholar.google.com/scholar?hl=en&q=C.+K%C3%A4stner%2C+K.+Ostermann%2C+and+S.+Erdweg.+2012b.+A+variability-aware+module+system.+In+Proc.+Conf.+Object-Oriented+Programming%2C+Systems%2C+Languages+and+Applications+%28OOPSLA%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+773%2D%2D792.+10.1145%2F2384616.2384673+
http://scholar.google.com/scholar?hl=en&q=C.+K%C3%A4stner%2C+A.+von+Rhein%2C+S.+Erdweg%2C+J.+Pusch%2C+S.+Apel%2C+T.+Rendel%2C+and+K.+Ostermann.+2012c.+Toward+variability-aware+testing.+In+Proc.+Int%E2%80%99l+Workshop+Feature-Oriented+Software+Development.+ACM%2C+New+York%2C+NY%2C+1%2D%2D8.+10.1145%2F2377816.2377817+
http://scholar.google.com/scholar?hl=en&q=S.+Katz.+2006.+Aspect+categories+and+classes+of+temporal+properties.+Transactions+on+Aspect-Oriented+Software+Development+1%2C+106%2D%2D134.+
http://scholar.google.com/scholar?hl=en&q=A.+Kenner%2C+C.+K%C3%A4stner%2C+S.+Haase%2C+and+T.+Leich.+2010.+TypeChef%3A+Toward+type+checking+%26num%3BIfdef+variability+in+C.+In+Proc.+Int%E2%80%99l+Workshop+Feature-Oriented+Software+Development+%28FOSD%E2%80%9910%29.+ACM%2C+New+York%2C+NY%2C+25%2D%2D32.+10.1145%2F1868688.1868693+
http://scholar.google.com/scholar?hl=en&q=G.+Kiczales%2C+J.+Lamping%2C+A.+Mendhekar%2C+C.+Maeda%2C+C.+Lopes%2C+J.-M.+Loingtier%2C+and+J.+Irwin.+1997.+Aspect-oriented+programming.+In+Proc.+Europ.+Conf.+Object-Oriented+Programming+%28ECOOP%E2%80%9997%29.+Springer%2C+Berlin%2C+220%2D%2D242.
http://scholar.google.com/scholar?hl=en&q=C.+H.+P.+Kim%2C+D.+Batory%2C+and+S.+Khurshid.+2011.+Reducing+combinatorics+in+testing+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Aspect-Oriented+Software+Development+%28AOSD%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+57%2D%2D68.+10.1145%2F1960275.1960284+
http://scholar.google.com/scholar?hl=en&q=C.+H.+P.+Kim%2C+E.+Bodden%2C+D.+Batory%2C+and+S.+Khurshid.+2010.+Reducing+configurations+to+monitor+in+a+software+product+line.+In+Proc.+Int%E2%80%99l+Conf.+Runtime+Verification+%28RV%E2%80%9910%29.+Springer%2C+Berlin%2C+285%2D%2D299.+
http://scholar.google.com/scholar?hl=en&q=C.+H.+P.+Kim%2C+C.+K%C3%A4stner%2C+and+D.+Batory.+2008.+On+the+modularity+of+feature+interactions.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming+and+Component+Engineering+%28GPCE%E2%80%9908%29.+ACM%2C+New+York%2C+NY%2C+23%2D%2D34.+10.1145%2F1449913.1449919+
http://scholar.google.com/scholar?hl=en&q=C.+H.+P.+Kim%2C+S.+Khurshid%2C+and+D.+Batory.+2012.+Shared+execution+for+efficiently+testing+product+lines.+In+Proc.+Int%E2%80%99l+Symposium+Software+Reliability+Engineering+%28ISSRE%E2%80%9912%29.+IEEE%2C+Washington%2C+DC%2C+221%2D%2D230.
http://scholar.google.com/scholar?hl=en&q=C.+H.+P.+Kim%2C+D.+Marinov%2C+S.+Khurshid%2C+D.+Batory%2C+S.+Souto%2C+P.+Barros%2C+and+M.+D%E2%80%99Amorim.+2013.+SPLat%3A+Lightweight+dynamic+analysis+for+reducing+combinatorics+in+testing+configurable+systems.+In+Proc.+Europ.+Software+Engineering+Conf.%2FFoundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+257%2D%2D267.+10.1145%2F2491411.2491459+
http://scholar.google.com/scholar?hl=en&q=T.+Kishi+and+N.+Noda.+2006.+Formal+verification+and+software+product+lines.+Comm.+ACM+49%2C+73%2D%2D77.+10.1145%2F1183236.1183270+
http://scholar.google.com/scholar?hl=en&q=H.+Klaeren%2C+E.+Pulvermueller%2C+A.+Rashid%2C+and+A.+Speck.+2001.+Aspect+composition+applying+the+design+by+contract+principle.+In+Proc.+Int%E2%80%99l+Symposium+Generative+and+Component-Based+Software+Engineering+%28GCSE%E2%80%9901%29.+Springer%2C+Berlin%2C+57%2D%2D69.+
http://scholar.google.com/scholar?hl=en&q=K.+Klose+and+K.+Ostermann.+2010.+Modular+logic+metaprogramming.+In+Proc.+Conf.+Object-Oriented+Programming%2C+Systems%2C+Languages+and+Applications+%28OOPSLA%E2%80%9910%29.+ACM%2C+New+York%2C+NY%2C+484%2D%2D503.+10.1145%2F1869459.1869499+
http://scholar.google.com/scholar?hl=en&q=S.+Kolesnikov%2C+A.+von+Rhein%2C+C.+Hunsen%2C+and+S.+Apel.+2013.+A+comparison+of+product-based%2C+feature-based%2C+and+family-based+type+checking.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming%3A+Concepts+%26+Experiences+%28GPCE%26rsquo%3B%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+115%2D%2D124.+10.1145%2F2517208.2517213+
http://scholar.google.com/scholar?hl=en&q=M.+Kuhlemann%2C+D.+Batory%2C+and+C.+K%C3%A4stner.+2009.+Safe+composition+of+non-monotonic+features.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming+and+Component+Engineering+%28GPCE%E2%80%9909%29.+ACM%2C+New+York%2C+NY%2C+177%2D%2D186.+10.1145%2F1621607.1621634+
http://scholar.google.com/scholar?hl=en&q=M.+Kuhlemann+and+M.+Sturm.+2010.+Patching+product+line+programs.+In+Proc.+Int%E2%80%99l+Workshop+Feature-Oriented+Software+Development+%28FOSD%E2%80%9910%29.+ACM%2C+New+York%2C+NY%2C+33%2D%2D40.+10.1145%2F1868688.1868694+
http://scholar.google.com/scholar?hl=en&q=D.+R.+Kuhn%2C+R.+N.+Kacker%2C+and+Y.+Lei.+2013.+Introduction+to+Combinatorial+Testing%2C+1st+ed.+Chapman+%26+Hall%2FCRC%2C+London%2C+UK.+
http://scholar.google.com/scholar?hl=en&q=K.+Lauenroth%2C+A.+Metzger%2C+and+K.+Pohl.+2010.+Quality+assurance+in+the+presence+of+variability.+In+Intentional+Perspectives+on+Information+Systems+Engineering.+Springer%2C+Berlin%2C+319%2D%2D333.
http://scholar.google.com/scholar?hl=en&q=D.+M.+Le%2C+H.+Lee%2C+K.+C.+Kang%2C+and+L.+Keun.+2013.+Validating+consistency+between+a+feature+model+and+its+implementation.+In+Proc.+Int%E2%80%99l+Conf.+Software+Reuse+%28ICSR%E2%80%9913%29.+Springer%2C+Berlin%2C+1%2D%2D16.
http://scholar.google.com/scholar?hl=en&q=J.+Lee%2C+S.+Kang%2C+and+D.+Lee.+2012.+A+survey+on+software+product+line+testing.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+31%2D%2D40.+10.1145%2F2362536.2362545+
http://scholar.google.com/scholar?hl=en&q=H.+Li%2C+S.+Krishnamurthi%2C+and+K.+Fisler.+2002.+Verifying+cross-cutting+features+as+open+systems.+In+Proc.+Int%E2%80%99l+Symposium+Foundations+of+Software+Engineering+%28FSE%E2%80%9902%29.+ACM%2C+New+York%2C+NY%2C+89%2D%2D98.+10.1145%2F587051.587066+
http://scholar.google.com/scholar?hl=en&q=H.+Li%2C+S.+Krishnamurthi%2C+and+K.+Fisler.+2005.+Modular+verification+of+open+features+using+three-valued+model+checking.+Automated+Software+Engineering+12%2C+3%2C+349%2D%2D382.+10.1007%2Fs10515-005-2643-9+
http://scholar.google.com/scholar?hl=en&q=J.+Liebig%2C+S.+Apel%2C+C.+Lengauer%2C+C.+K%C3%A4stner%2C+and+M.+Schulze.+2010.+An+analysis+of+the+variability+in+forty+preprocessor-based+software+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9910%29.+IEEE%2C+Washington%2C+DC%2C+105%2D%2D114.+10.1145%2F1806799.1806819+
http://scholar.google.com/scholar?hl=en&q=J.+Liebig%2C+A.+von+Rhein%2C+C.+K%C3%A4stner%2C+S.+Apel%2C+J.+D%C3%B6rre%2C+and+C.+Lengauer.+2013.+Scalable+analysis+of+variable+software.+In+Proc.+Europ.+Software+Engineering+Conf.%2FFoundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+81%2D%2D91.+10.1145%2F2491411.2491437+
http://scholar.google.com/scholar?hl=en&q=J.+Liu%2C+S.+Basu%2C+and+R.+Lutz.+2011.+Compositional+model+checking+of+software+product+lines+using+variation+point+obligations.+Automated+Software+Engineering+18%2C+1%2C+39%2D%2D76.+10.1007%2Fs10515-010-0075-7+
http://scholar.google.com/scholar?hl=en&q=J.+Liu%2C+D.+Batory%2C+and+C.+Lengauer.+2006.+Feature+oriented+refactoring+of+legacy+applications.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9906%29.+ACM%2C+New+York%2C+NY%2C+112%2D%2D121.+10.1145%2F1134285.1134303+
http://scholar.google.com/scholar?hl=en&q=J.+Liu%2C+J.+Dehlinger%2C+and+R.+Lutz.+2007.+Safety+analysis+of+software+product+lines+using+state-based+modeling.+Journal+of+Systems+and+Software+80%2C+11%2C+1879%2D%2D1892.+10.1016%2Fj.jss.2007.01.047+
http://scholar.google.com/scholar?hl=en&q=R.+Lutz.+2007.+Survey+of+product-line+verification+and+validation+techniques.+Tech.+Rep.+2014%2F41221%2C+NASA%2C+Jet+Propulsion+Laboratory%2C+La+Canada+Flintridge%2C+CA.
http://scholar.google.com/scholar?hl=en&q=F.+Medeiros%2C+M.+Ribeiro%2C+and+R.+Gheyi.+2013.+Investigating+preprocessor-based+syntax+errors.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming%3A+Concepts+%26+Experiences+%28GPCE%26rsquo%3B%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+75%2D%2D84.+10.1145%2F2517208.2517221+
http://scholar.google.com/scholar?hl=en&q=M.+Mendon%C3%A7a%2C+A.+Wasowski%2C+and+K.+Czarnecki.+2009.+SAT-based+analysis+of+feature+models+is+easy.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9909%29.+Software+Engineering+Institute%2C+Pittsburgh%2C+PA%2C+231%2D%2D240.+
http://scholar.google.com/scholar?hl=en&q=A.+Metzger.+2007.+Quality+issues+in+software+product+lines%3A+Feature+interactions+and+beyond.+In+Proc.+Int%E2%80%99l+Conf.+Feature+Interactions+in+Software+and+Communication+Systems+%28ICFI%E2%80%9907%29.+IOS+Press%2C+Amsterdam%2C+The+Netherlands%2C+1%2D%2D12.
http://scholar.google.com/scholar?hl=en&q=A.+Metzger%2C+K.+Pohl%2C+P.+Heymans%2C+P.-Y.+Schobbens%2C+and+G.+Saval.+2007.+Disambiguating+the+documentation+of+variability+in+software+product+lines%3A+A+separation+of+concerns%2C+formalization+and+automated+analysis.+In+Proc.+Int%E2%80%99l+Conf.+Requirements+Engineering+%28RE%E2%80%9907%29.+IEEE%2C+Washington%2C+DC%2C+243%2D%2D253.
http://scholar.google.com/scholar?hl=en&q=J.+Midtgaard%2C+C.+Brabrand%2C+and+A.+Wasowski.+2014.+Systematic+derivation+of+static+analyses+for+software+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Aspect-Oriented+Software+Development+%28AOSD%E2%80%9914%29.+ACM%2C+New+York%2C+NY%2C+181%2D%2D192.+10.1145%2F2577080.2577091+
http://scholar.google.com/scholar?hl=en&q=S.+Montagud+and+S.+Abrah%C3%A3o.+2009.+Gathering+current+knowledge+about+quality+evaluation+in+software+product+lines.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9909%29.+Software+Engineering+Institute%2C+Pittsburgh%2C+PA%2C+91%2D%2D100.+
http://scholar.google.com/scholar?hl=en&q=S.+S.+Muchnick.+1997.+Advanced+Compiler+Design+and+Implementation.+Morgan+Kaufmann%2C+San+Francisco%2C+CA.+
http://scholar.google.com/scholar?hl=en&q=T.+Nelson%2C+D.+D.+Cowan%2C+and+P.+S.+C.+Alencar.+2001.+Supporting+formal+verification+of+crosscutting+concerns.+In+Proc.+Int%E2%80%99l+Conf.+Metalevel+Architectures+and+Separation+of+Crosscutting+Concerns.+Springer%2C+London%2C+153%2D%2D169.+
http://scholar.google.com/scholar?hl=en&q=H.+V.+Nguyen%2C+C.+K%C3%A4stner%2C+and+T.+N.+Nguyen.+2014.+Exploring+variability-aware+execution+for+testing+plugin-based+web+applications.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9914%29.+ACM%2C+New+York%2C+NY.+10.1145%2F2568225.2568300+
http://scholar.google.com/scholar?hl=en&q=C.+Nie+and+H.+Leung.+2011.+A+survey+of+combinatorial+testing.+ACM+Computing+Surveys+43%2C+2%2C+11%3A1%2D%2D11%3A29.+10.1145%2F1883612.1883618+
http://scholar.google.com/scholar?hl=en&q=F.+Nielson%2C+H.+R.+Nielson%2C+and+C.+Hankin.+2010.+Principles+of+Program+Analysis.+Springer%2C+Secaucus%2C+NJ.+
http://scholar.google.com/scholar?hl=en&q=T.+Nipkow%2C+M.+Wenzel%2C+and+L.+C.+Paulson.+2002.+Isabelle%2FHOL%3A+A+Proof+Assistant+for+Higher-Order+Logic.+Springer%2C+Berlin.+
http://scholar.google.com/scholar?hl=en&q=S.+Oster%2C+F.+Markert%2C+and+P.+Ritter.+2010.+Automated+incremental+pairwise+testing+of+software+product+lines.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9910%29.+Springer%2C+Berlin%2C+196%2D%2D210.+
http://scholar.google.com/scholar?hl=en&q=S.+Oster%2C+A.+W%C3%BCbbeke%2C+G.+Engels%2C+and+A.+Sch%C3%BCrr.+2011.+A+survey+of+model-based+software+product+lines+testing.+In+Model-based+Testing+for+Embedded+System.+CRC+Press%2C+Boca+Raton%2C+FL%2C+339%2D%2D381.
http://scholar.google.com/scholar?hl=en&q=S.+Owre%2C+J.+M.+Rushby%2C+and+N.+Shankar.+1992.+PVS%3A+A+prototype+verification+system.+In+Proc.+Int%E2%80%99l+Conf.+Automated+Deduction+%28CADE%E2%80%9992%29.+Springer%2C+London%2C+748%2D%2D752.+
http://scholar.google.com/scholar?hl=en&q=D.+L.+Parnas.+1976.+On+the+design+and+development+of+program+families.+IEEE+Transactions+on+Software+Engineering+SE-2%2C+1%2C+1%2D%2D9.+10.1109%2FTSE.1976.233797+
http://scholar.google.com/scholar?hl=en&q=G.+Perrouin%2C+S.+Sen%2C+J.+Klein%2C+B.+Baudry%2C+and+Y.+Le+Traon.+2010.+Automated+and+scalable+t-wise+test+case+generation+strategies+for+software+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Software+Testing%2C+Verification+and+Validation+%28ICST%E2%80%9910%29.+IEEE%2C+Washington%2C+DC%2C+459%2D%2D468.+10.1109%2FICST.2010.43+
http://scholar.google.com/scholar?hl=en&q=B.+C.+Pierce.+2002.+Types+and+Programming+Languages.+MIT+Press%2C+Cambridge%2C+MA.+
http://scholar.google.com/scholar?hl=en&q=M.+Plath+and+M.+Ryan.+2001.+Feature+integration+using+a+feature+construct.+Science+of+Computer+Programming+41%2C+1%2C+53%2D%2D84.+10.1016%2FS0167-6423%2800%2900018-6+
http://scholar.google.com/scholar?hl=en&q=K.+Pohl%2C+G.+B%C3%B6ckle%2C+and+F.+J.+van+der+Linden.+2005.+Software+Product+Line+Engineering%3A+Foundations%2C+Principles+and+Techniques.+Springer%2C+Berlin.+
http://scholar.google.com/scholar?hl=en&q=H.+Post+and+C.+Sinz.+2008.+Configuration+lifting%3A+Software+verification+meets+software+configuration.+In+Proc.+Int%E2%80%99l+Conf.+Automated+Software+Engineering+%28ASE%E2%80%9908%29.+IEEE%2C+Washington%2C+DC%2C+347%2D%2D350.+10.1109%2FASE.2008.45+
http://scholar.google.com/scholar?hl=en&q=C.+Prehofer.+1997.+Feature-oriented+programming%3A+A+fresh+look+at+objects.+In+Proc.+Europ.+Conf.+Object-Oriented+Programming+%28ECOOP%E2%80%9997%29.+Springer%2C+Berlin%2C+419%2D%2D443.
http://scholar.google.com/scholar?hl=en&q=M.+Ribeiro%2C+H.+Pacheco%2C+L.+Teixeira%2C+and+P.+Borba.+2010.+Emergent+feature+modularization.+In+Proc.+Int%E2%80%99l+Conf.+Object-Oriented+Programming+Systems+Languages+and+Applications+Companion+%28SPLASH%E2%80%9910%29.+ACM%2C+New+York%2C+NY%2C+11%2D%2D18.+10.1145%2F1869542.1869545+
http://scholar.google.com/scholar?hl=en&q=V.+V.+Rubanov+and+E.+A.+Shatokhin.+2011.+Runtime+verification+of+Linux+kernel+modules+based+on+call+interception.+In+Proc.+Int%E2%80%99l+Conf.+Software+Testing%2C+Verification+and+Validation+%28ICST%E2%80%9911%29.+IEEE%2C+Washington%2C+DC%2C+180%2D%2D189.+10.1109%2FICST.2011.20+
http://scholar.google.com/scholar?hl=en&q=H.+Sabouri+and+R.+Khosravi.+2012.+Efficient+verification+of+evolving+software+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Fundamentals+of+Software+Engineering+%28FSEN%E2%80%9912%29.+Springer%2C+Berlin%2C+351%2D%2D358.+10.1007%2F978-3-642-29320-7_24+
http://scholar.google.com/scholar?hl=en&q=H.+Sabouri+and+R.+Khosravi.+2013a.+Delta+modeling+and+model+checking+of+product+families.+In+Proc.+Int%E2%80%99l+Conf.+Fundamentals+of+Software+Engineering+%28FSEN%E2%80%9913%29.+Springer%2C+Berlin%2C+51%2D%2D65.
http://scholar.google.com/scholar?hl=en&q=H.+Sabouri+and+R.+Khosravi.+2013b.+Modeling+and+verification+of+reconfigurable+actor+families.+Journal+of+Universal+Computer+Science+19%2C+2%2C+207%2D%2D232.
http://scholar.google.com/scholar?hl=en&q=H.+Sabouri+and+R.+Khosravi.+2014.+Reducing+the+verification+cost+of+evolving+product+families+using+static+analysis+techniques.+Science+of+Computer+Programming+83%2C+0%2C+35%2D%2D55.+10.1016%2Fj.scico.2013.06.009+
http://scholar.google.com/scholar?hl=en&q=I.+Schaefer%2C+D.+Gurov%2C+and+S.+Soleimanifard.+2010.+Compositional+algorithmic+verification+of+software+product+lines.+In+Proc.+Int%E2%80%99l+Symposium+Formal+Methods+for+Components+and+Objects+%28FMCO%E2%80%9910%29.+Springer%2C+Berlin%2C+184%2D%2D203.+10.1007%2F978-3-642-25271-6_10+
http://scholar.google.com/scholar?hl=en&q=W.+Scholz%2C+T.+Th%C3%BCm%2C+S.+Apel%2C+and+C.+Lengauer.+2011.+Automatic+detection+of+feature+interactions+using+the+java+modeling+language%3A+An+experience+report.+In+Proc.+Int%E2%80%99l+Workshop+Feature-Oriented+Software+Development+%28FOSD%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+7%3A1%2D%2D7%3A8.+10.1145%2F2019136.2019144+
http://scholar.google.com/scholar?hl=en&q=J.+Schumann.+2001.+Automated+Theorem+Proving+in+Software+Engineering.+Springer%2C+Berlin.+
http://scholar.google.com/scholar?hl=en&q=J.+Shi%2C+M.+B.+Cohen%2C+and+M.+B.+Dwyer.+2012.+Integration+testing+of+software+product+lines+using+compositional+symbolic+execution.+In+Proc.+Int%E2%80%99l+Conf.+Fundamental+Approaches+to+Software+Engineering+%28FASE%E2%80%9912%29.+Springer%2C+Berlin%2C+270%2D%2D284.+10.1007%2F978-3-642-28872-2_19+
http://scholar.google.com/scholar?hl=en&q=M.+Svahnberg%2C+J.+van+Gurp%2C+and+J.+Bosch.+2005.+A+taxonomy+of+variability+realization+techniques%3A+Research+articles.+Software%3A+Practice+and+Experience+35%2C+8%2C+705%2D%2D754.+10.1002%2Fspe.v35%3A8+
http://scholar.google.com/scholar?hl=en&q=R.+Tartler%2C+D.+Lohmann%2C+C.+Dietrich%2C+C.+Egger%2C+and+J.+Sincero.+2012.+Configuration+coverage+in+the+analysis+of+large-scale+system+software.+ACM+SIGOPS+Operating+Systems+Review+45%2C+3%2C+10%2D%2D14.+10.1145%2F2094091.2094095+
http://scholar.google.com/scholar?hl=en&q=R.+Tartler%2C+D.+Lohmann%2C+J.+Sincero%2C+and+W.+Schr%C3%B6der-Preikschat.+2011.+Feature+consistency+in+compile-time-configurable+system+software%3A+Facing+the+Linux+10%2C000+feature+problem.+In+Proc.+Europ.+Conf.+Computer+Systems+%28EuroSys%E2%80%9911%29.+ACM%2C+New+York%2C+NY%2C+47%2D%2D60.+10.1145%2F1966445.1966451+
http://scholar.google.com/scholar?hl=en&q=L.+Teixeira%2C+P.+Borba%2C+and+R.+Gheyi.+2011.+Safe+composition+of+configuration+knowledge-based+software+product+lines.+In+Proc.+Brazilian+Symposium+Software+Engineering+%28SBES%E2%80%9911%29.+IEEE%2C+Washington%2C+DC%2C+263%2D%2D272.+10.1109%2FSBES.2011.15+
http://scholar.google.com/scholar?hl=en&q=M.+H.+ter+Beek%2C+A.+L.+Lafuente%2C+and+M.+Petrocchi.+2013.+Combining+declarative+and+procedural+views+in+the+specification+and+analysis+of+product+families.+In+Proc.+Int%E2%80%99l+Workshop+Formal+Methods+and+Analysis+in+Software+Product+Line+Engineering+%28FMSPLE%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+10%2D%2D17.+10.1145%2F2499777.2500722+
http://scholar.google.com/scholar?hl=en&q=A.+Tevanlinna%2C+J.+Taina%2C+and+R.+Kauppinen.+2004.+Product+family+testing%3A+A+survey.+SIGSOFT+Software+Engineering+Notes+29%2C+12%2D%2D17.+10.1145%2F979743.979766+
http://scholar.google.com/scholar?hl=en&q=S.+Thaker%2C+D.+Batory%2C+D.+Kitchin%2C+and+W.+Cook.+2007.+Safe+composition+of+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming+and+Component+Engineering+%28GPCE%E2%80%9907%29.+ACM%2C+New+York%2C+NY%2C+95%2D%2D104.+10.1145%2F1289971.1289989+
http://scholar.google.com/scholar?hl=en&q=T.+Th%C3%BCm%2C+D.+Batory%2C+and+C.+K%C3%A4stner.+2009.+Reasoning+about+edits+to+feature+models.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%E2%80%9909%29.+IEEE%2C+Washington%2C+DC%2C+254%2D%2D264.+10.1109%2FICSE.2009.5070526+
http://scholar.google.com/scholar?hl=en&q=T.+Th%C3%BCm%2C+C.+K%C3%A4stner%2C+S.+Erdweg%2C+and+N.+Siegmund.+2011a.+Abstract+features+in+feature+modeling.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%E2%80%9911%29.+IEEE%2C+Washington%2C+DC%2C+191%2D%2D200.+10.1109%2FSPLC.2011.53+
http://scholar.google.com/scholar?hl=en&q=T.+Th%C3%BCm%2C+I.+Schaefer%2C+S.+Apel%2C+and+M.+Hentschel.+2012.+Family-based+deductive+verification+of+software+product+lines.+In+Proc.+Int%E2%80%99l+Conf.+Generative+Programming+and+Component+Engineering+%28GPCE%E2%80%9912%29.+ACM%2C+New+York%2C+NY%2C+11%2D%2D20.+10.1145%2F2371401.2371404+
http://scholar.google.com/scholar?hl=en&q=T.+Th%C3%BCm%2C+I.+Schaefer%2C+M.+Kuhlemann%2C+and+S.+Apel.+2011b.+Proof+composition+for+deductive+verification+of+software+product+lines.+In+Proc.+Int%E2%80%99l+Workshop+Variability-intensive+Systems+Testing%2C+Validation+and+Verification+%28VAST%E2%80%9911%29.+IEEE%2C+Washington%2C+DC%2C+270%2D%2D277.+10.1109%2FICSTW.2011.48+
http://scholar.google.com/scholar?hl=en&q=T.+Th%C3%BCm%2C+I.+Schaefer%2C+M.+Kuhlemann%2C+S.+Apel%2C+and+G.+Saake.+2012.+Applying+design+by+contract+to+feature-oriented+programming.+In+Proc.+Int%E2%80%99l+Conf.+Fundamental+Approaches+to+Software+Engineering+%28FASE%E2%80%9902%29.+Springer%2C+Berlin%2C+255%2D%2D269.+10.1007%2F978-3-642-28872-2_18+
http://scholar.google.com/scholar?hl=en&q=N.+Ubayashi+and+T.+Tamai.+2002.+Aspect-oriented+programming+with+model+checking.+In+Proc.+Int%E2%80%99l+Conf.+Aspect-Oriented+Software+Development+%28AOSD%E2%80%9902%29.+ACM%2C+New+York%2C+NY%2C+148%2D%2D154.+10.1145%2F508386.508405+
http://scholar.google.com/scholar?hl=en&q=F.+J.+van+der+Linden%2C+K.+Schmid%2C+and+E.+Rommes.+2007.+Software+Product+Lines+in+Action%3A+The+Best+Industrial+Practice+in+Product+Line+Engineering.+Springer%2C+Berlin.+
http://scholar.google.com/scholar?hl=en&q=W.+Visser%2C+K.+Havelund%2C+G.+P.+Brat%2C+and+S.+Park.+2000.+Model+checking+programs.+In+Proc.+Int%E2%80%99l+Conf.+Automated+Software+Engineering+%28ASE%E2%80%9900%29.+Springer%2C+Berlin%2C+3%2D%2D12.+
http://scholar.google.com/scholar?hl=en&q=A.+von+Rhein%2C+S.+Apel%2C+C.+K%C3%A4stner%2C+T.+Th%C3%BCm%2C+and+I.+Schaefer.+2013.+The+PLA+model%3A+On+the+combination+of+product-line+analyses.+In+Proc.+Int%E2%80%99l+Workshop+Variability+Modelling+of+Software-intensive+Systems+%28VaMoS%E2%80%9913%29.+ACM%2C+New+York%2C+NY%2C+14%3A1%2D%2D14%3A8.+10.1145%2F2430502.2430522+
http://scholar.google.com/scholar?hl=en&q=C.+Weidenbach%2C+D.+Dimova%2C+A.+Fietzke%2C+R.+Kumar%2C+M.+Suda%2C+and+P.+Wischnewski.+2009.+SPASS+version+3.5.+In+Proc.+Int%E2%80%99l+Conf.+Automated+Deduction+%28CADE%E2%80%9909%29.+Springer%2C+Berlin%2C+140%2D%2D145.+10.1007%2F978-3-642-02959-2_10+
http://scholar.google.com/scholar?hl=en&q=M.+Weiser.+1981.+Program+slicing.+In+Proc.+Int%E2%80%99l+Conf.+Software+Engineering+%28ICSE%29.+IEEE%2C+Piscataway%2C+NJ%2C+USA%2C+439%2D%2D449.+
http://scholar.google.com/scholar?hl=en&q=D.+M.+Weiss.+2008.+The+product+line+hall+of+fame.+In+Proc.+Int%E2%80%99l+Software+Product+Line+Conf.+%28SPLC%29.+IEEE%2C+Washington%2C+DC%2C+USA%2C+395.+10.1109%2FSPLC.2008.56+
