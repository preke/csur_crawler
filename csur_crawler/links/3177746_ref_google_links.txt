http://scholar.google.com/scholar?hl=en&q=Manish+Agrawal+and+Kaushal+Chari.+2007.+Software+effort%2C+quality%2C+and+cycle+time%3A+A+study+of+CMM+Level+5+projects.+IEEE+Trans.+Software+Eng.+33%2C+3%2C+145%2D%2D156.+10.1109%2FTSE.2007.29+
http://scholar.google.com/scholar?hl=en&q=Jarmo+J.+Ahonen+and+Tuukka+Junttila.+2003.+A+case+study+on+quality-affecting+problems+in+software+engineering+projects.+In+Proceedings+of+IEEE+International+Conference+on+Software%3A+Science%2C+Technology+and+Engineering+%28SwSTE%E2%80%9903%29.+IEEE+Press%2C+145%2D%2D153.+
http://scholar.google.com/scholar?hl=en&q=Robert+D.+Austin.+2001.+The+effects+of+time+pressure+on+quality+in+software+development%3A+An+agency+model.+Info.+Syst.+J.+12%2C+2%2C+195%2D%2D207.+10.1287%2Fisre.12.2.195.9699+
http://scholar.google.com/scholar?hl=en&q=Rajiv+D.+Banker%2C+Gordon+B.+Davis%2C+and+Sandra+A.+Slaughter.+1998.+Software+development+practices%2C+software+complexity%2C+and+software+maintenance+performance%3A+A+field+study.+Manage.+Sci.+44%2C+4%2C+433%2D%2D450.+10.1287%2Fmnsc.44.4.433+
http://scholar.google.com/scholar?hl=en&q=Richard+Baskerville%2C+Linda+Levine%2C+Jan+Pries-Heje%2C+and+Sandra+A.+Slaughter.+2001.+How+internet+software+companies+negotiate+quality.+IEEE+Comput.+34%2C+5%2C+51%2D%2D57.+10.1109%2F2.920612+
http://scholar.google.com/scholar?hl=en&q=Richard+Baskerville+and+Jan+Pries-Heje.+2004.+Short+cycle+time+systems+development.+Info.+Syst.+J.+14%2C+3%2C+237%2D%2D264.
http://scholar.google.com/scholar?hl=en&q=Richard+Baskerville%2C+Balasubramaniam+Ramesh%2C+Linda+Levine%2C+Jan+Pries-Heje%2C+and+Sandra+A.+Slaughter.+2003.+Is+Internet-speed+software+development+different%3F+IEEE+Software+20%2C+6%2C+70%2D%2D77.+10.1109%2FMS.2003.1241369+
http://scholar.google.com/scholar?hl=en&q=Joachim+Bayer+and+Dirk+Muthig.+2006.+A+view-based+approach+for+improving+software+documentation+practices.+In+Proceedings+of+the+IEEE+International+Conference+on+the+Engineering+of+Computer-Based+Systems.+IEEE+Computer+Society%2C+269%2D%2D278.+10.1109%2FECBS.2006.18+
http://scholar.google.com/scholar?hl=en&q=Kent+Beck.+2000.+Extreme+Programming+Explained%3A+Embrace+Change.+Addison-Wesley+Professional.+
http://scholar.google.com/scholar?hl=en&q=Paul+E.+Black.+2012.+Static+analyzers%3A+Seat+belts+for+your+code.+IEEE+Secur.+Privacy+10%2C+3%2C+48%2D%2D52.+10.1109%2FMSP.2012.2+
http://scholar.google.com/scholar?hl=en&q=Barry+W.+Boehm+and+Kevin+J.+Sullivan.+2000.+Software+economics%3A+A+roadmap.+In+Proceedings+of+the+Conference+on+the+Future+of+Software+Engineering.+ACM%2C+319%2D%2D343.+10.1145%2F336512.336584+
http://scholar.google.com/scholar?hl=en&q=Frederick+P.+Brooks.+1995.+The+Mythical+Man-Month%3A+Essays+on+Software+Engineering.+Addison-Wesley%2C+MA.+
http://scholar.google.com/scholar?hl=en&q=Nanette+Brown%2C+Yuanfang+Cai%2C+Yuepu+Guo%2C+Rick+Kazman%2C+Miryung+Kim%2C+Philippe+Kruchten%2C+Erin+Lim+et+al.+2010.+Managing+technical+debt+in+software-reliant+systems.+In+Proceedings+of+the+FSE%2FSDP+Workshop+on+Future+of+Software+Engineering+Research.+47%2D%2D52.+10.1145%2F1882362.1882373+
http://scholar.google.com/scholar?hl=en&q=G%C3%BCl+%C3%87al%C4%B1kl%C4%B1+and+Ay%C5%9Fe+Ba%C5%9Far+Bener.+2013.+Influence+of+confirmation+biases+of+developers+on+software+quality%3A+An+empirical+study.+Software+Qual.+J.+21%2C+2%2C+377%2D%2D416.+10.1007%2Fs11219-012-9180-0+
http://scholar.google.com/scholar?hl=en&q=Zadia+Codabux+and+Byron+Williams.+2013.+Managing+technical+debt%3A+an+industrial+case+study.+In+Proceedings+of+the+4th+International+Workshop+on+Managing+Technical+Debt.+IEEE+Press%2C+8%2D%2D15.+
http://scholar.google.com/scholar?hl=en&q=Ward+Cunningham.+1992.+The+wycash+portfolio+management+system.+Addendum+to+the+Proceedings+on+Object-Oriented+Programming+Systems%2C+Languages%2C+and+Applications.+British+Columbia%2C+Canada.+29%2D%2D30.+10.1145%2F157709.157715+
http://scholar.google.com/scholar?hl=en&q=Amr+Elssamadisy+and+Gregory+Schalliol.+2002.+Recognizing+and+responding+to+bad+smells+in+extreme+programming.+In+Proceedings+of+the+24th+International+conference+on+Software+Engineering.+ACM%2C+617%2D%2D622.+10.1145%2F581339.581418+
http://scholar.google.com/scholar?hl=en&q=Ryan+Fleming.+1999.+A+fresh+perspective+on+old+problems.+IEEE+Software+16%2C+1%2C+106%2D%2D113.+10.1109%2F52.744577+
http://scholar.google.com/scholar?hl=en&q=Jose+Fonseca+and+Marco+Vieira.+2008.+Mapping+software+faults+with+web+security+vulnerabilities.+In+Proceedings+of+IEEE+International+Conference+on+Dependable+Systems+and+Networks+With+FTCS+and+DCC+%28DSN%E2%80%9908%29.+257%2D%2D266.
http://scholar.google.com/scholar?hl=en&q=Martin+Fowler+and+Jim+Highsmith.+2001.+The+agile+manifesto.+Software+Dev.+9%2C+8%2C+28%2D%2D35.
http://scholar.google.com/scholar?hl=en&q=Steven+Fraser+and+Dennis+Mancl.+2008.+No+silver+bullet%3A+Software+engineering+reloaded.+IEEE+Software+25%2C+1%2C+91%2D%2D94.+10.1109%2FMS.2008.14+
http://scholar.google.com/scholar?hl=en&q=Virginia+R.+Gibson+and+James+A.+Senn.+1989.+System+structure+and+software+maintenance+performance.+Commun.+ACM+32%2C+3%2C+347%2D%2D358.+10.1145%2F62065.62073+
http://scholar.google.com/scholar?hl=en&q=Johannes+Holvitie%2C+Ville+Leppanen%2C+and+Sami+Hyrynsalmi.+2014.+Technical+debt+and+the+effect+of+agile+software+development+practices+on+it-an+industry+practitioner+survey.+In+Proceedings+of+6th+International+Workshop+on+Managing+Technical+Debt+%28MTD%E2%80%9914%29.+IEEE%2C+35%2D%2D42.+10.1109%2FMTD.2014.8+
http://scholar.google.com/scholar?hl=en&q=Ivar+Jacobson+and+Ed+Seidewitz.+2014.+A+new+software+engineering.+Commun.+ACM+57%2C+12%2C+49%2D%2D54.+10.1145%2F2677034+
http://scholar.google.com/scholar?hl=en&q=Ken+H.+Judy.+2009.+Agile+principles+and+ethical+conduct.+In+Proceedings+of+the+42nd+Hawaii+International+Conference+on+System+Sciences+%28HICSSamp%3Brsquo%3B09%29.+IEEE%2C+1%2D%2D8.+10.1109%2FHICSS.2009.53+
http://scholar.google.com/scholar?hl=en&q=Barbara+Kitchenham+and+Stuart+Charters.+2007.+Guidelines+for+performing+systematic+literature+reviews+in+software+engineering.+EBSE+Technical+Report+EBSE-2007-01.+1%2D%2D57.
http://scholar.google.com/scholar?hl=en&q=Barbara+Kitchenham%2C+Rialette+Pretorius%2C+David+Budgen%2C+O.+Pearl+Brereton%2C+Mark+Turner%2C+Mahmood+Niazi%2C+and+Stephen+Linkman.+2010.+Systematic+literature+reviews+in+software+engineering%2D%2Da+tertiary+study.+Info.+Software+Technol.+52%2C+8%2C+792%2D%2D805.+10.1016%2Fj.infsof.2010.03.006+
http://scholar.google.com/scholar?hl=en&q=Per+Lenberg%2C+Robert+Feldt%2C+and+Lars+G.+Wallgren.+2015.+Behavioral+software+engineering%3A+A+definition+and+systematic+literature+review.+J.+Syst.+Software+107%2C+15%2D%2D37.+10.1016%2Fj.jss.2015.04.084+
http://scholar.google.com/scholar?hl=en&q=Nancy+G.+Leveson+and+Clark+S.+Turner.+1993.+An+investigation+of+the+therac-25+accidents.+IEEE+Comput.+26%2C+7%2C+18%2D%2D41.+10.1109%2FMC.1993.274940+
http://scholar.google.com/scholar?hl=en&q=Erin+Lim%2C+Nitin+Taksande%2C+and+Carolyn+Seaman.+2012.+A+balancing+act%3A+What+software+practitioners+have+to+say+about+technical+debt.+IEEE+Software+29%2C+6%2C+22%2D%2D27.+10.1109%2FMS.2012.130+
http://scholar.google.com/scholar?hl=en&q=Kurt+R.+Linberg.+1999.+Software+developer+perceptions+about+software+project+failure%3A+A+case+study.+J.+Syst.+Software+42%2C+9%2C+177%2D%2D192.+10.1016%2FS0164-1212%2899%2900094-1+
http://scholar.google.com/scholar?hl=en&q=Dennis+Mancl%2C+Steven+D.+Fraser%2C+and+William+F.+Opdyke.+2007.+No+silver+bullet%3A+A+retrospective+on+the+essence+and+accidents+of+software+engineering.+In+Companion+to+the+22nd+ACM+SIGPLAN+Conference+on+Object-oriented+Programming+Systems+and+Applications.+ACM%2C+758%2D%2D759.+10.1145%2F1297846.1297873+
http://scholar.google.com/scholar?hl=en&q=Robert+C.+Martin.+2003.+Agile+Software+Development%3A+Principles%2C+Patterns%2C+and+Practices.+Prentice+Hall+PTR%2C+Upper+Saddle+River%2C+NJ.+
http://scholar.google.com/scholar?hl=en&q=Antonio+Martini%2C+Jan+Bosch%2C+and+Michel+Chaudron.+2014.+Architecture+technical+debt%3A+Understanding+causes+and+a+qualitative+model.+In+Proceedings+of+40th+EUROMICRO+Conference+on+Software+Engineering+and+Advanced+Applications+%28SEAA%E2%80%9914%29.+IEEE+Press%2C+85%2D%2D92.+10.1109%2FSEAA.2014.65+
http://scholar.google.com/scholar?hl=en&q=Steve+McConnell.+1996.+Avoiding+classic+mistakes.+IEEE+Software+13%2C+5%2C+111%2D%2D112.+
http://scholar.google.com/scholar?hl=en&q=Steve+McConnell.+2007.+Technical+debt.+%28November+2007%29.+Retrieved+from+http%3A%2F%2Fwww.construx.com%2F10x_Software_Development%2FTechnical_Debt%2F.
http://scholar.google.com/scholar?hl=en&q=San+Murugesan.+1994.+Attitude+towards+testing%3A+A+key+contributor+to+software+quality.+In+Proceedings+of+First+International+Conference+on+Software+Testing%2C+Reliability+and+Quality+Assurance.+IEEE+Press%2C+111%2D%2D115.
http://scholar.google.com/scholar?hl=en&q=Chitu+Okoli+and+Kira+Schabram.+2010.+A+guide+to+conducting+a+systematic+literature+review+of+information+systems+research.+Retrieved+from+http%3A%2F%2Fssrn.com%2Fabstract%3D1954824+or
http://scholar.google.com/scholar?hl=en&q=Kai+Petersen%2C+Robert+Feldt%2C+Shahid+Mujtaba%2C+and+Michaek+Mattsson.+2008.+Systematic+mapping+studies+in+software+engineering.+In+Proceedings+of+the+12th+International+Conference+on+Evaluation+and+Assessment+in+Software+Engineering%2C+1%2D%2D10.+
http://scholar.google.com/scholar?hl=en&q=Aniket+Potdar+and+Emad+Shihab.+2014.+An+exploratory+study+on+self-admitted+technical+debt.+In+Proceedings+of+IEEE+International+Conference+on+Software+Maintenance+and+Evolution+%28ICSME%E2%80%9914%29.+IEEE+Press%2C+91%2D%2D100.+10.1109%2FICSME.2014.31+
http://scholar.google.com/scholar?hl=en&q=Alexander+Poth+and+Ali+Sunyaev.+2014.+Effective+quality+management%3A+Risk-and+value-based+software+quality+management.+IEEE+Software+31%2C+6%2C+79%2D%2D85.
http://scholar.google.com/scholar?hl=en&q=Frantz+Rowe.+2014.+What+literature+review+is+not%3A+Diversity%2C+boundaries+and+recommendations.+Eur.+J.+Info.+Syst.+23%2C+3%2C+241%2D%2D255.
http://scholar.google.com/scholar?hl=en&q=Jana+Samalikova%2C+Rob+Kusters%2C+Jos+Trienekens%2C+Ton+Weijters%2C+and+Paul+Siemons.+2011.+Toward+objective+software+process+information%3A+Experiences+from+a+case+study.+Software+Qual.+J.+19%2C+1%2C+101%2D%2D120.+10.1007%2Fs11219-010-9105-8+
http://scholar.google.com/scholar?hl=en&q=Ken+Schwaber+and+Mike+Beedle.+2001.+Agile+Software+Development+with+Scrum.+Prentice+Hall+PTR%2C+NJ.+
http://scholar.google.com/scholar?hl=en&q=Frank+P.+Seth%2C+Ossi+Taipale%2C+and+Kari+Smolander.+2014.+Organizational+and+customer+related+challenges+of+software+testing%3A+An+empirical+study+in+11+software+companies.+In+Proceedings+of+8th+IEEE+International+Conference+on+Research+Challenges+in+Information+Science+%28RCIS%E2%80%9914%29.+IEEE+Press%2C+1%2D%2D12.
http://scholar.google.com/scholar?hl=en&q=Hina+Shah%2C+Mary+Jean+Harrold%2C+and+Saurabh+Sinha.+2014.+Global+software+testing+under+deadline+pressure%3A+Vendor-Side+experiences.+Info.+Software+Technol.+56%2C+1%2C+6%2D%2D19.+10.1016%2Fj.infsof.2013.04.005+
http://scholar.google.com/scholar?hl=en&q=Sandra+A.+Slaughter%2C+Donald+E.+Harter%2C+and+Mayuram+S.+Krishnan.+1998.+Evaluating+the+cost+of+software+quality.+Commun.+ACM%2C+41%2C+8%2C+67%2D%2D73.+10.1145%2F280324.280335+
http://scholar.google.com/scholar?hl=en&q=Ian+Sommervile.+2011.+Software+Engineering+%289th+ed.%29.+Addison-Wesley%2C+Boston%2C+USA.
http://scholar.google.com/scholar?hl=en&q=Gregory+Tassey.+2002.+The+economic+impacts+of+inadequate+infrastructure+for+software+testing.+National+Institute+of+Standards+and+Technology%2C+RTI+Project+7007.011.+Retrived+from+http%3A%2F%2Fciteseerx.ist.psu.edu%2Fviewdoc%2Fdownload%3Fdoi%3D10.1.1.122.33168rep%3Drep18type%3Dpdf.
http://scholar.google.com/scholar?hl=en&q=Edith+Tom%2C+Ayb%C3%BCke+Aurum%2C+and+Richard+Vidgen.+2013.+An+exploration+of+technical+debt.+J.+Syst.+Software+86%2C+6%2C+1498%2D%2D1516.+10.1016%2Fj.jss.2012.12.052+
http://scholar.google.com/scholar?hl=en&q=Eva+Van+Emden+and+Leon+Moonen.+2002.+Java+quality+assurance+by+detecting+code+smells.+In+Proceedings+of+9th+Working+Conference+on+Reverse+Engineering.+IEEE+Press%2C+97%2D%2D106.+
http://scholar.google.com/scholar?hl=en&q=Tero+Vartiainen%2C+Mikko+T.+Siponen%2C+and+Gregory+Moody.+2011.+Gray-area+phenomenon+in+information+systems+development%3A+A+call+for+research.+In+Proceedings+of+Pacific+Asia+Conference+on+Information+Systems+%28PACIS%29.+AIS+Electronic+Library+%28AISeL%29%2C+1%2D%2D13.
http://scholar.google.com/scholar?hl=en&q=Yi+Wang+and+Min+Zhang.+2010.+Penalty+policies+in+professional+software+development+practice%3A+A+multi-method+field+study.+In+Proceedings+of+the+32nd+ACM%2FIEEE+International+Conference+on+Software+Engineering.+ACM+Press%2C+39%2D%2D47.+10.1145%2F1810295.1810302+
http://scholar.google.com/scholar?hl=en&q=Dumidu+Wijayasekara%2C+Milos+Manic%2C+Jason+L.+Wright%2C+and+Miles+McQueen.+2012.+Mining+bug+databases+for+unidentified+software+vulnerabilities.+In+Proceedings+of+5th+International+Conference+on+Human+System+Interactions+%28HSIamp%3Brsquo%3B12%29.+IEEE+Press%2C+89%2D%2D96.+10.1109%2FHSI.2012.22+
http://scholar.google.com/scholar?hl=en&q=Bo+Yang%2C+Huajun+Hu%2C+and+Lixin+Jia.+2008.+A+study+of+uncertainty+in+software+cost+and+its+impact+on+optimal+software+release+time.+IEEE+Trans.+Software+Eng.+34%2C+6%2C+813%2D%2D825+10.1109%2FTSE.2008.47+
