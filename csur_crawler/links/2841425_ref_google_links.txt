http://scholar.google.com/scholar?hl=en&q=J.+Aidemark%2C+J.+Vinter%2C+P.+Folkesson%2C+and+J.+Karlsson.+2001.+GOOFI%3A+Generic+object-oriented+fault+injection+tool.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+83%2D%2D88.+
http://scholar.google.com/scholar?hl=en&q=A.+Albinet%2C+J.+Arlat%2C+and+J.+C.+Fabre.+2004.+Characterization+of+the+impact+of+faulty+drivers+on+the+robustness+of+the+linux+kernel.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+867%2D%2D876.+
http://scholar.google.com/scholar?hl=en&q=AMBER+project.+2009.+AMBER+Final+Research+Roadmap.+Retrieved+from+http%3A%2F%2Fwww.amber-project.eu%2F.
http://scholar.google.com/scholar?hl=en&q=J.+H.+Andrews%2C+L.+C.+Briand%2C+and+Y.+Labiche.+2005.+Is+mutation+an+appropriate+tool+for+testing+experiments%3F+In+Proc.+Intl.+Conf.+on+Software+Engineering.+402%2D%2D411.+10.1145%2F1062455.1062530+
http://scholar.google.com/scholar?hl=en&q=J.+Arlat%2C+M.+Aguera%2C+L.+Amat%2C+Y.+Crouzet%2C+J.+C.+Fabre%2C+J.+C.+Laprie%2C+E.+Martins%2C+and+D.+Powell.+1990.+Fault+injection+for+dependability+validation%3A+A+methodology+and+some+applications.+IEEE+Trans.+Software+Eng.+16%2C+2+%281990%29%2C+166%2D%2D182.+10.1109%2F32.44380+
http://scholar.google.com/scholar?hl=en&q=J.+Arlat%2C+Y.+Crouzet%2C+J.+Karlsson%2C+P.+Folkesson%2C+E.+Fuchs%2C+and+G.+H.+Leber.+2003.+Comparison+of+physical+and+software-implemented+fault+injection+techniques.+IEEE+Trans.+Comput.+52%2C+9+%282003%29%2C+1115%2D%2D1133.+10.1109%2FTC.2003.1228509+
http://scholar.google.com/scholar?hl=en&q=J.+Arlat%2C+J.+C.+Fabre%2C+M.+Rodr%C3%ADguez%2C+and+F.+Salles.+2002.+Dependability+of+COTS+microkernel-based+systems.+IEEE+Trans.+Comput.+51%2C+2+%282002%29%2C+138%2D%2D163.+10.1109%2F12.980005+
http://scholar.google.com/scholar?hl=en&q=J.+Arlat+and+R.+Moraes.+2011.+Collecting%2C+analyzing+and+archiving+results+from+fault+injection+experiments.+In+Proc.+Latin-American+Symposium+on+Dependable+Computing.+100%2D%2D105.
http://scholar.google.com/scholar?hl=en&q=A.+Avizienis%2C+J.+C.+Laprie%2C+B.+Randell%2C+and+C.+Landwehr.+2004.+Basic+concepts+and+taxonomy+of+dependable+and+secure+computing.+IEEE+Trans.+on+Dependable+and+Secure+Computing+1%2C+1+%282004%29%2C+11%2D%2D33.+10.1109%2FTDSC.2004.2+
http://scholar.google.com/scholar?hl=en&q=D.+Avresky%2C+J.+Arlat%2C+J.+C.+Laprie%2C+and+Y.+Crouzet.+1996.+Fault+injection+for+formal+testing+of+fault+tolerance.+IEEE+Trans.+on+Reliability+45%2C+3+%281996%29%2C+443%2D%2D455.
http://scholar.google.com/scholar?hl=en&q=R.+Banabic+and+G.+Candea.+2012.+Fast+black-box+testing+of+system+recovery+code.+In+Proc.+ACM+European+Conference+on+Computer+Systems.+281%2D%2D294.+10.1145%2F2168836.2168865+
http://scholar.google.com/scholar?hl=en&q=R.+Barbosa%2C+J.+Vinter%2C+P.+Folkesson%2C+and+J.+Karlsson.+2005.+Assembly-level+pre-injection+analysis+for+improving+fault+injection+efficiency.+In+Proc.+European+Dependable+Computing+Conf.+246%2D%2D262.+10.1007%2F11408901_19+
http://scholar.google.com/scholar?hl=en&q=J.+H.+Barton%2C+E.+W.+Czeck%2C+Z.+Z.+Segall%2C+and+D.+P.+Siewiorek.+1990.+Fault+injection+experiments+using+FIAT.+IEEE+Trans.+Comput.+39%2C+4+%281990%29%2C+575%2D%2D582.+10.1109%2F12.54853+
http://scholar.google.com/scholar?hl=en&q=T.+Basso%2C+R.+Moraes%2C+B.+P.+Sanches%2C+and+M.+Jino.+2009.+An+investigation+of+java+faults+operators+derived+from+a+field+data+study+on+Java+software+faults.+In+Workshop+de+Testes+e+Toler%C3%A2ncia+a+Falhas.
http://scholar.google.com/scholar?hl=en&q=A.+Bondavalli%2C+S.+Chiaradonna%2C+D.+Cotroneo%2C+and+L.+Romano.+2004.+Effective+fault+treatment+for+improving+the+dependability+of+COTS+and+legacy-based+applications.+IEEE+Trans.+Dependable+Secure+Comput.+1%2C+4+%282004%29%2C+223%2D%2D237.+10.1109%2FTDSC.2004.40+
http://scholar.google.com/scholar?hl=en&q=E.+Bounimova%2C+P.+Godefroid%2C+and+D.+Molnar.+2013.+Billions+and+billions+of+constraints%3A+Whitebox+fuzz+testing+in+production.+In+Proc.+Intl.+Conf.+on+Software+Engineering.+122%2D%2D131.+
http://scholar.google.com/scholar?hl=en&q=P.+Broadwell%2C+N.+Sastry%2C+and+J.+Traupman.+2002.+FIG%3A+A+prototype+tool+for+online+verification+of+recovery+mechanisms.+In+Workshop+on+Self-Healing%2C+Adaptive+and+self-MANaged+Systems.
http://scholar.google.com/scholar?hl=en&q=G.+Candea%2C+S.+Kawamoto%2C+Y.+Fujiki%2C+G.+Friedman%2C+and+A.+Fox.+2004.+Microreboot%2D%2DA+technique+for+cheap+recovery.+In+Proc.+Symp.+on+Operating+Systems+Design+and+Implementation.+
http://scholar.google.com/scholar?hl=en&q=J.+V.+Carreira%2C+D.+Costa%2C+and+J.+G.+Silva.+1999.+Fault+injection+spot-checks+computer+system+dependability.+IEEE+Spectrum+36%2C+8+%281999%29%2C+50%2D%2D55.+10.1109%2F6.780999+
http://scholar.google.com/scholar?hl=en&q=J.+Carreira%2C+H.+Madeira%2C+and+J.+G.+Silva.+1998.+Xception%3A+A+technique+for+the+experimental+evaluation+of+dependability+in+modern+computers.+IEEE+Trans.+Software+Eng.+24%2C+2+%281998%29%2C+125%2D%2D136.+10.1109%2F32.666826+
http://scholar.google.com/scholar?hl=en&q=R.+Chandra%2C+R.+M.+Lefever%2C+K.+R.+Joshi%2C+M.+Cukier%2C+and+W.+H.+Sanders.+2004.+A+global-state-triggered+fault+injector+for+distributed+system+evaluation.+IEEE+Trans.+Parallel+Distrib.+Syst.+15%2C+7+%282004%29%2C+593%2D%2D605.+10.1109%2FTPDS.2004.14+
http://scholar.google.com/scholar?hl=en&q=S.+Chandra+and+P.+M.+Chen.+1998.+How+fail-stop+are+faulty+programs%3F+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+240%2D%2D249.+
http://scholar.google.com/scholar?hl=en&q=R.+Chillarege%2C+I.+S.+Bhandari%2C+J.+K.+Chaar%2C+M.+J.+Halliday%2C+D.+S.+Moebus%2C+B.+K.+Ray%2C+and+M.+Y.+Wong.+1992.+Orthogonal+defect+classification%2D%2DA+concept+for+in-process+measurements.+IEEE+Trans.+Software+Eng.+18%2C+11+%281992%29%2C+943%2D%2D956.+10.1109%2F32.177364+
http://scholar.google.com/scholar?hl=en&q=R.+Chillarege%2C+W.+L.+Kao%2C+and+R.+G.+Condit.+1991.+Defect+type+and+its+impact+on+the+growth+curve.+In+Proc.+Intl.+Conf.+on+Software+Engineering.+246%2D%2D255.+
http://scholar.google.com/scholar?hl=en&q=J.+Christmansson+and+R.+Chillarege.+1996.+Generation+of+an+error+set+that+emulates+software+faults+based+on+field+data.+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+304%2D%2D313.+
http://scholar.google.com/scholar?hl=en&q=J.+Christmansson%2C+M.+Hiller%2C+and+M.+Rimen.+1998.+An+experimental+comparison+of+fault+and+error+injection.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+369%2D%2D378.+
http://scholar.google.com/scholar?hl=en&q=J.+Christmansson+and+P.+Santhanam.+1996.+Error+injection+aimed+at+fault+removal+in+fault+tolerance+mechanisms%2D%2DCriteria+for+error+selection+using+field+data+on+software+faults.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+175%2D%2D184.+
http://scholar.google.com/scholar?hl=en&q=J.+A.+Clark+and+D.+K.+Pradhan.+1995.+Fault+injection%3A+A+method+for+validating+computer-system+dependability.+IEEE+Computer+28%2C+6+%281995%29%2C+47%2D%2D56.+10.1109%2F2.386985+
http://scholar.google.com/scholar?hl=en&q=D.+Cotroneo%2C+D.+Di+Leo%2C+F.+Fucci%2C+and+R.+Natella.+2013.+SABRINE%3A+State-based+robustness+testing+of+operating+systems.+In+Proc.+IEEE%2FACM+Intl.+Conf.+on+Automated+Software+Engineering.+125%2D%2D135.
http://scholar.google.com/scholar?hl=en&q=D.+Cotroneo%2C+A.+Lanzaro%2C+R.+Natella%2C+and+R.+Barbosa.+2012.+Experimental+analysis+of+binary-level+software+fault+injection+in+complex+software.+In+Proc.+European+Dependable+Computing+Conf.+162%2D%2D172.+10.1109%2FEDCC.2012.12+
http://scholar.google.com/scholar?hl=en&q=D.+Cotroneo%2C+R.+Natella%2C+S.+Russo%2C+and+F.+Scippacercola.+2013.+State-driven+testing+of+distributed+systems.+In+Proc.+Intl.+Conf.+Principles+of+Distributed+Systems.+114%2D%2D128.+10.1007%2F978-3-319-03850-6_9+
http://scholar.google.com/scholar?hl=en&q=M.+Daran+and+P.+Th%C3%A9venod-Fosse.+1996.+Software+error+analysis%3A+A+real+case+study+involving+real+faults+and+mutations.+ACM+Software+Engineering+Notes+21%2C+3+%281996%29%2C+158%2D%2D171.+10.1145%2F226295.226313+
http://scholar.google.com/scholar?hl=en&q=S.+Dawson%2C+F.+Jahanian%2C+T.+Mitton%2C+and+T.+L.+Tung.+1996.+Testing+of+fault-tolerant+and+real-time+distributed+systems+via+protocol+fault+injection.+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+404%2D%2D414.+
http://scholar.google.com/scholar?hl=en&q=DBench+project.+2004.+DBench+Final+Report.+Retrieved+from+http%3A%2F%2Fwww.laas.fr%2FDBench%2F.
http://scholar.google.com/scholar?hl=en&q=V.+De+Florio+and+C.+Blondia.+2008.+A+survey+of+linguistic+structures+for+application-level+fault+tolerance.+Comput.+Surveys+40%2C+2+%282008%29%2C+6.+10.1145%2F1348246.1348249+
http://scholar.google.com/scholar?hl=en&q=M.+E.+Delamaro+and+J.+C.+Maldonado.+1996.+Proteum%E2%80%94A+tool+for+the+assessment+of+test+adequacy+for+c+programs.+In+Proc.+Conf.+Performability+in+Computer+Systems.+79%2D%2D95.
http://scholar.google.com/scholar?hl=en&q=R.+A.+DeMillo%2C+R.+J.+Lipton%2C+and+F.+G.+Sayward.+1978.+Hints+on+test+data+selection%3A+Help+for+the+practicing+programmer.+IEEE+Computer+11%2C+4+%281978%29%2C+34%2D%2D41.+10.1109%2FC-M.1978.218136+
http://scholar.google.com/scholar?hl=en&q=C.+P.+Dingman+and+J.+Marshall.+1995.+Measuring+robustness+of+a+fault-tolerant+aerospace+system.+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+522%2D%2D527.+
http://scholar.google.com/scholar?hl=en&q=H.+Do+and+G.+Rothermel.+2006.+On+the+use+of+mutation+faults+in+empirical+assessments+of+test+case+prioritization+techniques.+IEEE+Trans.+Software+Eng.+%282006%29%2C+733%2D%2D752.+10.1109%2FTSE.2006.92+
http://scholar.google.com/scholar?hl=en&q=J.+Duraes+and+H.+Madeira.+2002.+Emulation+of+software+faults+by+educated+mutations+at+machine-code+level.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+329%2D%2D340.+
http://scholar.google.com/scholar?hl=en&q=J.+Dur%C3%A3es+and+H.+Madeira.+2006.+Emulation+of+software+faults%3A+A+field+data+study+and+a+practical+approach.+IEEE+Trans.+Software+Eng.+32%2C+11+%282006%29%2C+849%2D%2D867.+10.1109%2FTSE.2006.113+
http://scholar.google.com/scholar?hl=en&q=J.+Dur%C3%A3es%2C+M.+Vieira%2C+and+H.+Madeira.+2003.+Multidimensional+characterization+of+the+impact+of+faulty+drivers+on+the+operating+systems+behavior.+IEICE+Trans.+Inf.+Sys.+86%2C+12+%282003%29%2C+2563%2D%2D2570.
http://scholar.google.com/scholar?hl=en&q=J.+Dur%C3%A3es%2C+M.+Vieira%2C+and+H.+Madeira.+2004.+Dependability+benchmarking+of+Web-servers.+In+Proc.+Intl.+Conf.+on+Computer+Safety%2C+Reliability%2C+and+Security.+297%2D%2D310.
http://scholar.google.com/scholar?hl=en&q=N.+E.+Fenton+and+N.+Ohlsson.+2000.+Quantitative+analysis+of+faults+and+failures+in+a+complex+software+system.+IEEE+Trans.+Software+Eng.+26%2C+8+%282000%29%2C+797%2D%2D814.+10.1109%2F32.879815+
http://scholar.google.com/scholar?hl=en&q=C.+Fetzer%2C+P.+Felber%2C+and+K.+H%C3%B6gstedt.+2004.+Automatic+detection+and+masking+of+nonatomic+exception+handling.+IEEE+Trans.+Software+Eng.+30+%282004%29%2C+547%2D%2D560.+Issue+8.+10.1109%2FTSE.2004.35+
http://scholar.google.com/scholar?hl=en&q=C.+Fetzer+and+Z.+Xiao.+2002.+An+automated+approach+to+increasing+the+robustness+of+C+libraries.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+155%2D%2D164.+
http://scholar.google.com/scholar?hl=en&q=J.+Fonseca+and+M.+Vieira.+2008.+Mapping+software+faults+with+web+security+vulnerabilities.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+257%2D%2D266.
http://scholar.google.com/scholar?hl=en&q=J.+Fonseca%2C+M.+Vieira%2C+and+H.+Madeira.+2009.+Vulnerability+%26+attack+injection+for+Web+applications.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+93%2D%2D102.
http://scholar.google.com/scholar?hl=en&q=A.+G.+Ganek+and+T.+A.+Corbi.+2003.+The+dawning+of+the+autonomic+computing+era.+IBM+Syst.+J.+42%2C+1+%282003%29%2C+5%2D%2D18.+10.1147%2Fsj.421.0005+
http://scholar.google.com/scholar?hl=en&q=A.+K.+Ghosh%2C+M.+Schmid%2C+and+V.+Shah.+1998.+Testing+the+robustness+of+windows+NT+software.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+231%2D%2D235.+
http://scholar.google.com/scholar?hl=en&q=C.+Giuffrida%2C+A.+Kuijsten%2C+and+A.+S.+Tanenbaum.+2013.+EDFI%3A+A+dependable+fault+injection+tool+for+dependability+benchmarking+experiments.+In+Proc.+Pacific+Rim+Intl.+Symp.+on+Dependable+Computing.+10.1109%2FPRDC.2013.12+
http://scholar.google.com/scholar?hl=en&q=P.+Godefroid%2C+M.+Y.+Levin%2C+and+D.+A.+Molnar.+2008.+Automated+whitebox+fuzz+testing.+In+Proc.+Network+and+Distributed+Sys.+Sec.+Symp.+151%2D%2D166.
http://scholar.google.com/scholar?hl=en&q=A.+Gorla%2C+M.+Pezz%C3%A8%2C+J.+Wuttke%2C+L.+Mariani%2C+and+F.+Pastore.+2012.+Achieving+cost-effective+software+reliability+through+self-healing.+Comput.+Inf.+29%2C+1+%282012%29%2C+93%2D%2D115.
http://scholar.google.com/scholar?hl=en&q=J.+Gray.+1990.+A+census+of+tandem+system+availability+between+1985+and+1990.+IEEE+Trans.+on+Reliability+39%2C+4+%281990%29%2C+409%2D%2D418.
http://scholar.google.com/scholar?hl=en&q=H.+S.+Gunawi%2C+T.+Do%2C+P.+Joshi%2C+P.+Alvaro%2C+J.+M.+Hellerstein%2C+A.+C.+Arpaci-Dusseau%2C+R.+H.+Arpaci-Dusseau%2C+K.+Sen%2C+and+D.+Borthakur.+2011.+FATE+and+DESTINI%3A+A+framework+for+cloud+recovery+testing.+In+Proc.+USENIX+Symposium+on+Networked+Systems+Design+and+Implementation.+
http://scholar.google.com/scholar?hl=en&q=R.+G.+Hamlet.+1977.+Testing+programs+with+the+aid+of+a+compiler.+IEEE+Trans.+Software+Eng.+3%2C+4+%281977%29%2C+279%2D%2D290.+10.1109%2FTSE.1977.231145+
http://scholar.google.com/scholar?hl=en&q=S.+Han%2C+K.+G.+Shin%2C+and+H.+A.+Rosenberg.+1995.+DOCTOR%3A+An+integrated+software+fault+injection+environment.+In+Proc.+Intl.+Computer+Performance+and+Dependability+Symp.+204%2D%2D213.+
http://scholar.google.com/scholar?hl=en&q=M.+Hiller%2C+A.+Jhumka%2C+and+N.+Suri.+2001.+An+approach+for+analysing+the+propagation+of+data+errors+in+software.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+161%2D%2D170.+
http://scholar.google.com/scholar?hl=en&q=M.+C.+Hsueh%2C+T.+K.+Tsai%2C+and+R.+K.+Iyer.+1997.+Fault+injection+techniques+and+tools.+IEEE+Computer+30%2C+4+%281997%29%2C+75%2D%2D82.+10.1109%2F2.585157+
http://scholar.google.com/scholar?hl=en&q=J.+J.+Hudak%2C+B.+H.+Suh%2C+D.+P.+Siewiorek%2C+and+Z.+Segall.+1993.+Evaluation+and+comparison+of+fault-tolerant+software+techniques.+IEEE+Trans.+Reliability+42%2C+2+%281993%29%2C+190%2D%2D204.
http://scholar.google.com/scholar?hl=en&q=IEEE.+1990.+IEEE+standard+glossary+of+software+engineering+terminology.+IEEE+Std+610.12-1990+%281990%29.
http://scholar.google.com/scholar?hl=en&q=IEEE.+1994.+IEEE+standard+for+information+technology%2D%2DPortable+operating+system+interface+%28POSIX%29+part+1.+IEEE+Std+1003.1b-1993+%281994%29.
http://scholar.google.com/scholar?hl=en&q=ISO.+2011.+Product+development%3A+software+level.+ISO+26262%3A+Road+vehicles+%2D%2D+Functional+safety+6+%282011%29.
http://scholar.google.com/scholar?hl=en&q=T.+Jarboui%2C+J.+Arlat%2C+Y.+Crouzet%2C+K.+Kanoun%2C+and+T.+Marteau.+2002.+Analysis+of+the+effects+of+real+and+injected+software+faults%3A+Linux+as+a+case+study.+In+Proc.+Pacific+Rim+Intl.+Symp.+on+Dependable+Computing.+51%2D%2D58.+
http://scholar.google.com/scholar?hl=en&q=Y.+Jia+and+M.+Harman.+2009.+Higher+order+mutation+testing.+Inf.+Software+Technol.+51%2C+10+%282009%29%2C+1379%2D%2D1393.+10.1016%2Fj.infsof.2009.04.016+
http://scholar.google.com/scholar?hl=en&q=Y.+Jia+and+M.+Harman.+2011.+An+analysis+and+survey+of+the+development+of+mutation+testing.+IEEE+Trans.+Software+Eng.+37%2C+5+%282011%29%2C+649%2D%2D678.+10.1109%2FTSE.2010.62+
http://scholar.google.com/scholar?hl=en&q=A.+Johansson+and+N.+Suri.+2005.+Error+propagation+profiling+of+operating+systems.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+86%2D%2D95.+10.1109%2FDSN.2005.45+
http://scholar.google.com/scholar?hl=en&q=A.+Johansson%2C+N.+Suri%2C+and+B.+Murphy.+2007a.+On+the+impact+of+injection+triggers+for+OS+robustness+evaluation.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+127%2D%2D126.+10.1109%2FISSRE.2007.23+
http://scholar.google.com/scholar?hl=en&q=A.+Johansson%2C+N.+Suri%2C+and+B.+Murphy.+2007b.+On+the+selection+of+error+model%28s%29+for+OS+robustness+evaluation.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+502%2D%2D511.+10.1109%2FDSN.2007.71+
http://scholar.google.com/scholar?hl=en&q=P.+Joshi%2C+H.+S.+Gunawi%2C+and+K.+Sen.+2011.+PREFAIL%3A+A+programmable+tool+for+multiple-failure+injection.+ACM+SIGPLAN+Not.+46%2C+10+%282011%29%2C+171%2D%2D188.+10.1145%2F2076021.2048082+
http://scholar.google.com/scholar?hl=en&q=A.+Kalakech%2C+K.+Kanoun%2C+Y.+Crouzet%2C+and+J.+Arlat.+2004.+Benchmarking+the+dependability+of+windows+NT4%2C+2000+and+XP.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+681%2D%2D686.+
http://scholar.google.com/scholar?hl=en&q=G.+A.+Kanawati%2C+N.+A.+Kanawati%2C+and+J.+A.+Abraham.+1995.+FERRARI%3A+A+flexible+software-based+fault+and+error+injection+system.+IEEE+Trans.+Comput.+44%2C+2+%281995%29%2C+248%2D%2D260.+10.1109%2F12.364536+
http://scholar.google.com/scholar?hl=en&q=K.+Kanoun+and+L.+Spainhower.+2008.+Dependability+Benchmarking+for+Computer+Systems.+Wiley-IEEE+Computer+Society.+
http://scholar.google.com/scholar?hl=en&q=W.-I.+Kao+and+R.+K.+Iyer.+1994.+DEFINE%3A+A+distributed+fault+injection+and+monitoring+environment.+In+Proc.+Workshop+on+Fault-Tolerant+Parallel+and+Distributed+Systems.+252%2D%2D259.
http://scholar.google.com/scholar?hl=en&q=W.-I.+Kao%2C+R.+K.+Iyer%2C+and+D.+Tang.+1993.+FINE%3A+A+fault+injection+and+monitoring+environment+for+tracing+the+UNIX+system+behavior+under+faults.+IEEE+Trans.+Software+Eng.+19%2C+11+%281993%29%2C+1105%2D%2D1118.+10.1109%2F32.256857+
http://scholar.google.com/scholar?hl=en&q=J.+Katcher.+1997.+Postmark%3A+A+New+File+System+Benchmark.+Technical+Report+TR-3022.
http://scholar.google.com/scholar?hl=en&q=L.+Keller%2C+P.+Upadhyaya%2C+and+G.+Candea.+2008.+ConfErr%3A+A+tool+for+assessing+resilience+to+human+configuration+errors.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+157%2D%2D166.
http://scholar.google.com/scholar?hl=en&q=J.+C.+King.+1976.+Symbolic+execution+and+program+testing.+Commun.+ACM+19%2C+7+%281976%29%2C+385%2D%2D394.+10.1145%2F360248.360252+
http://scholar.google.com/scholar?hl=en&q=K.+N.+King+and+A.+J.+Offutt.+1991.+A+fortran+language+system+for+mutation-based+software+testing.+Software%3A+Practice+Exp.+21%2C+7+%281991%29%2C+685%2D%2D718.+10.1002%2Fspe.4380210704+
http://scholar.google.com/scholar?hl=en&q=P.+Koopman+and+J.+DeVale.+2000.+The+exception+handling+effectiveness+of+POSIX+operating+systems.+IEEE+Trans.+Software+Eng.+26%2C+9+%282000%29%2C+837%2D%2D848.+10.1109%2F32.877845+
http://scholar.google.com/scholar?hl=en&q=A.+Lanzaro%2C+R.+Natella%2C+S.+Winter%2C+D.+Cotroneo%2C+and+N.+Suri.+2014.+An+empirical+study+of+injected+versus+actual+interface+errors.+In+Proc.+Intl.+Symp.+Soft.+Testing+and+Analysis.+397%2D%2D408.+10.1145%2F2610384.2610418+
http://scholar.google.com/scholar?hl=en&q=J.-C.+Laprie%2C+J.+Arlat%2C+C.+Beounes%2C+and+K.+Kanoun.+1990.+Definition+and+analysis+of+hardware-and+software-fault-tolerant+architectures.+IEEE+Computer+23%2C+7+%281990%29%2C+39%2D%2D51.+10.1109%2F2.56851+
http://scholar.google.com/scholar?hl=en&q=N.+Laranjeiro%2C+M.+Vieira%2C+and+H.+Madeira.+2014.+A+technique+for+deploying+robust+Web+services.+IEEE+Trans.+Services+Comput.+7%2C+1+%282014%29%2C+68%2D%2D81.+10.1109%2FTSC.2012.39+
http://scholar.google.com/scholar?hl=en&q=I.+Lee+and+R.+K.+Iyer.+1995.+Software+dependability+in+the+tandem+guardian+system.+IEEE+Trans.+Software+Eng.+21%2C+5+%281995%29%2C+455%2D%2D467.+10.1109%2F32.387474+
http://scholar.google.com/scholar?hl=en&q=N.+G.+Leveson.+2004.+Role+of+software+in+spacecraft+accidents.+J.+Spacecraft+Rockets+41%2C+4+%282004%29%2C+564%2D%2D575.
http://scholar.google.com/scholar?hl=en&q=X.+Li%2C+M.+C.+Huang%2C+K.+Shen%2C+and+L.+Chu.+2010.+A+realistic+evaluation+of+memory+hardware+errors+and+software+system+susceptibility.+In+Proc.+USENIX+Annual+Technical+Conf.+
http://scholar.google.com/scholar?hl=en&q=M.+R.+Lyu.+1995.+Software+Fault+Tolerance.+John+Wiley+%26+Sons.+
http://scholar.google.com/scholar?hl=en&q=H.+Madeira%2C+D.+Costa%2C+and+M.+Vieira.+2000.+On+the+emulation+of+software+faults+by+software+fault+injection.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+417%2D%2D426.+
http://scholar.google.com/scholar?hl=en&q=L.+Madeyski%2C+W.+Orzeszyna%2C+R.+Torkar%2C+and+M.+J%C3%B3zala.+2014.+Overcoming+the+equivalent+mutant+problem%3A+A+systematic+literature+review+and+a+comparative+experiment+of+second+order+mutation.+IEEE+Trans.+Software+Eng.+40%2C+1+%282014%29%2C+23%2D%2D42.+10.1109%2FTSE.2013.44+
http://scholar.google.com/scholar?hl=en&q=A.+Mahmood%2C+D.+M.+Andrews%2C+and+EJ+McCluskey.+1984.+Executable+assertions+and+flight+software.+In+Proceedings+of+the+6th+Digital+Avionics+Systems+Conference.+346%2D%2D351.
http://scholar.google.com/scholar?hl=en&q=P.+D.+Marinescu+and+G.+Candea.+2011.+Efficient+testing+of+recovery+code+using+fault+injection.+ACM+Trans.+Comput.+Syst.+29%2C+4+%282011%29%2C+11%3A1%2D%2D11%3A38.+10.1145%2F2063509.2063511+
http://scholar.google.com/scholar?hl=en&q=E.+Martins%2C+C.+M.+F.+Rubira%2C+and+N.+G.+M.+Leme.+2002.+Jaca%3A+A+reflective+fault+injection+tool+based+on+patterns.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+483%2D%2D487.+
http://scholar.google.com/scholar?hl=en&q=P.+A.+McQuaid.+2012.+Software+disasters%E2%80%94understanding+the+past%2C+to+improve+the+future.+J.+Software%3A+Evolution+and+Process+24%2C+5+%282012%29%2C+459%2D%2D470.
http://scholar.google.com/scholar?hl=en&q=Microsoft+Corp.+2014.+Resilience+by+Design+for+Cloud+Services.+Retrieved+from+http%3A%2F%2Fwww.microsoft.com%2Fen-us%2Fdownload%2Fdetails.aspx%3Fid%26equals%3B38823.
http://scholar.google.com/scholar?hl=en&q=B.+P.+Miller%2C+L.+Fredriksen%2C+and+B.+So.+1990.+An+empirical+study+of+the+reliability+of+UNIX+utilities.+Commun.+ACM+33%2C+12+%281990%29%2C+32%2D%2D44.+10.1145%2F96267.96279+
http://scholar.google.com/scholar?hl=en&q=B.+Miller%2C+D.+Koski%2C+C.+Lee%2C+V.+Maganty%2C+R.+Murthy%2C+A.+Natarajan%2C+and+J.+Steidl.+1998.+Fuzz+Revisited%3A+A+Re-examination+of+the+Reliability+of+UNIX+Utilities+and+Services.+Technical+Report+CSTR-95-1268.
http://scholar.google.com/scholar?hl=en&q=R.+Moraes%2C+R.+Barbosa%2C+J.+Dur%C3%A3es%2C+N.+Mendes%2C+E.+Martins%2C+and+H.+Madeira.+2006.+Injection+of+faults+at+component+interfaces+and+inside+the+component+code%3A+Are+they+equivalent%3F+In+Proc.+European+Dependable+Computing+Conf.+53%2D%2D64.+10.1109%2FEDCC.2006.16+
http://scholar.google.com/scholar?hl=en&q=V.+Nagarajan%2C+D.+Jeffrey%2C+and+R.+Gupta.+2009.+Self-recovery+in+server+programs.+In+Proc.+Intl.+Symp.+on+Memory+Management.+49%2D%2D58.+10.1145%2F1542431.1542439+
http://scholar.google.com/scholar?hl=en&q=NASA.+2004.+NASA+software+safety+guidebook.+NASA-GB-8719.13+%282004%29.
http://scholar.google.com/scholar?hl=en&q=R.+Natella+and+D.+Cotroneo.+2010.+Emulation+of+transient+software+faults+for+dependability+assessment%3A+A+case+study.+In+Proc.+European+Dependable+Computing+Conf.+23%2D%2D32.+10.1109%2FEDCC.2010.13+
http://scholar.google.com/scholar?hl=en&q=R.+Natella%2C+D.+Cotroneo%2C+J.+A.+Duraes%2C+and+H.+Madeira.+2013.+On+fault+representativeness+of+software+fault+injection.+IEEE+Trans.+Software+Eng.+39%2C+1+%282013%29%2C+80%2D%2D96.+10.1109%2FTSE.2011.124+
http://scholar.google.com/scholar?hl=en&q=W.+T.+Ng%2C+C.+M.+Aycock%2C+G.+Rajamani%2C+and+P.+M.+Chen.+1996.+Comparing+disk+and+memory%E2%80%99s+resistance+to+operating+system+crashes.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+185%2D%2D194.+
http://scholar.google.com/scholar?hl=en&q=W.+T.+Ng+and+P.+M.+Chen.+2001.+The+design+and+verification+of+the+rio+file+cache.+IEEE+Trans.+Comput.+50%2C+4+%282001%29%2C+322%2D%2D337.+10.1109%2F12.919278+
http://scholar.google.com/scholar?hl=en&q=A.+J.+Offutt.+1992.+Investigations+of+the+software+testing+coupling+effect.+ACM+Trans.+Software+Eng+Methodol.+1%2C+1+%281992%29%2C+5%2D%2D20.+10.1145%2F125489.125473+
http://scholar.google.com/scholar?hl=en&q=A.+J.+Offutt%2C+A.+Lee%2C+G.+Rothermel%2C+R.+H.+Untch%2C+and+C.+Zapf.+1996.+An+experimental+determination+of+sufficient+mutant+operators.+ACM+Trans.+Software+Eng+Methodol.+5%2C+2+%281996%29%2C+99%2D%2D118.+10.1145%2F227607.227610+
http://scholar.google.com/scholar?hl=en&q=D.+Oppenheimer%2C+A.+Ganapathi%2C+and+D.+A.+Patterson.+2003.+Why+do+internet+services+fail%2C+and+what+can+be+done+about+it%3F+In+USENIX+Symp.+on+Internet+Technologies+and+Systems.+
http://scholar.google.com/scholar?hl=en&q=T.+J.+Ostrand%2C+E.+J.+Weyuker%2C+and+R.+M.+Bell.+2005.+Predicting+the+location+and+number+of+faults+in+large+software+systems.+IEEE+Trans.+Software+Eng.+31%2C+4+%282005%29%2C+340%2D%2D355.+10.1109%2FTSE.2005.49+
http://scholar.google.com/scholar?hl=en&q=M.+Papadakis+and+N.+Malevris.+2010.+An+empirical+evaluation+of+the+first+and+second+order+mutation+testing+strategies.+In+Proc.+Intl.+Conf.+Software+Testing%2C+Verification%2C+and+Validation+Workshops.+90%2D%2D99.+10.1109%2FICSTW.2010.50+
http://scholar.google.com/scholar?hl=en&q=C.+S.+P%C4%83s%C4%83reanu+and+W.+Visser.+2009.+A+survey+of+new+trends+in+symbolic+execution+for+software+testing+and+analysis.+Intl.+J.+Software+Tools+Tech.+Transf.+11%2C+4+%282009%29%2C+339%2D%2D353.+10.1007%2Fs10009-009-0118-1+
http://scholar.google.com/scholar?hl=en&q=K.+Pattabiraman%2C+N.+Nakka%2C+Z.+Kalbarczyk%2C+and+R.+K.+Iyer.+2008.+SymPLFIED%3A+symbolic+program-level+fault+injection+and+error+detection+framework.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+472%2D%2D481.
http://scholar.google.com/scholar?hl=en&q=D.+Patterson%2C+A.+Brown%2C+P.+Broadwell%2C+G.+Candea%2C+M.+Chen%2C+J.+Cutler%2C+P.+Enriquez%2C+A.+Fox%2C+E.+Kiciman%2C+M.+Merzbacher%2C+D.+Oppenheimer%2C+N.+Sastry%2C+W.+Tetzlaff%2C+J.+Traupman%2C+and+N.+Treuhaft.+2002.+Recovery-Oriented+Computing+%28ROC%29%3A+Motivation%2C+Definition%2C+Techniques%2C+and+Case+Studies.+Technical+Report+TR-02-1175.+
http://scholar.google.com/scholar?hl=en&q=D.+Powell%2C+E.+Martins%2C+J.+Arlat%2C+and+Y.+Crouzet.+1995.+Estimators+for+fault+tolerance+coverage+evaluation.+IEEE+Trans.+Comput.+44%2C+2+%281995%29%2C+261%2D%2D274.+10.1109%2F12.364537+
http://scholar.google.com/scholar?hl=en&q=V.+Prabhakaran%2C+A.+C.+Arpaci-Dusseau%2C+and+R.+H.+Arpaci-Dusseau.+2005.+Model-based+failure+analysis+of+journaling+file+systems.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+802%2D%2D811.+10.1109%2FDSN.2005.65+
http://scholar.google.com/scholar?hl=en&q=G.+L.+Ries%2C+G.+S.+Choi%2C+and+R.+K.+Iyer.+1994.+Device-level+transient+fault+modeling.+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+86%2D%2D94.
http://scholar.google.com/scholar?hl=en&q=RTCA.+1992.+DO-178B+software+considerations+in+airborne+systems+and+equipment+certification.+Requirements+and+Technical+Concepts+for+Aviation+%281992%29.
http://scholar.google.com/scholar?hl=en&q=F.+Salfner%2C+M.+Lenk%2C+and+M.+Malek.+2010.+A+survey+of+online+failure+prediction+methods.+Comput.+Surveys+42%2C+3+%282010%29%2C+10.+10.1145%2F1670679.1670680+
http://scholar.google.com/scholar?hl=en&q=F.+Salles%2C+M.+Rodriguez%2C+J.-C.+Fabre%2C+and+J.+Arlat.+1999.+MetaKernels+and+fault+containment+wrappers.+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+22%2D%2D29.+
http://scholar.google.com/scholar?hl=en&q=B.+P.+Sanches%2C+T.+Basso%2C+and+R.+Moraes.+2011.+J-SWFIT%3A+A+Java+software+fault+injection+tool.+In+Proc.+Latin+American+Symp.+on+Dependable+Computing.
http://scholar.google.com/scholar?hl=en&q=A.+Schiper%2C+K.+Birman%2C+and+P.+Stephenson.+1991.+Lightweight+causal+and+atomic+group+multicast.+ACM+Trans.+Comput.+Syst.+9%2C+3+%281991%29%2C+272%2D%2D314.+10.1145%2F128738.128742+
http://scholar.google.com/scholar?hl=en&q=SPEC.+2000.+SPECweb99+v1.02.+Retrieved+from+http%3A%2F%2Fwww.spec.org%2Fweb99%2F.
http://scholar.google.com/scholar?hl=en&q=M.+Sridharan+and+A.+S.+Namin.+2010.+Prioritizing+mutation+operators+based+on+importance+sampling.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+378%2D%2D387.+10.1109%2FISSRE.2010.16+
http://scholar.google.com/scholar?hl=en&q=D.+T.+Stott%2C+B.+Floering%2C+Z.+Kalbarczyk%2C+and+R.+K.+Iyer.+2000.+A+framework+for+assessing+dependability+in+distributed+systems+with+lightweight+fault+injectors.+In+Proc.+Intl.+Computer+Performance+and+Dependability+Symp.+91%2D%2D100.+
http://scholar.google.com/scholar?hl=en&q=R.+Strom+and+S.+Yemini.+1985.+Optimistic+recovery+in+distributed+systems.+ACM+Trans.+Comput.+Syst.+3%2C+3+%281985%29%2C+204%2D%2D226.+10.1145%2F3959.3962+
http://scholar.google.com/scholar?hl=en&q=M.+Sullivan+and+R.+Chillarege.+1991.+Software+defects+and+their+impact+on+system+availability%3A+A+study+of+field+failures+in+operating+systems.+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+2%2D%2D9.
http://scholar.google.com/scholar?hl=en&q=N.+Suri+and+P.+Sinha.+1998.+On+the+use+of+formal+techniques+for+validation.+In+Digest+of+Papers%2C+Intl.+Symp.+on+Fault-Tolerant+Computing.+390%2D%2D399.+
http://scholar.google.com/scholar?hl=en&q=M.+Susskraut+and+C.+Fetzer.+2006.+Automatically+finding+and+patching+bad+error+handling.+In+Proc.+European+Dependable+Computing+Conf.+13%2D%2D22.+10.1109%2FEDCC.2006.3+
http://scholar.google.com/scholar?hl=en&q=A.+Thakur%2C+R.+K.+Iyer%2C+L.+Young%2C+and+I.+Lee.+1995.+Analysis+of+failures+in+the+tandem+nonstop-UX+operating+system.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+40%2D%2D50.
http://scholar.google.com/scholar?hl=en&q=TPCC.+2010.+TPC+Benchmark+C+%28TPC-C%29+v5.11.+Retrieved+from+http%3A%2F%2Fwww.tpc.org%2Ftpcc%2F.
http://scholar.google.com/scholar?hl=en&q=T.+K.+Tsai%2C+M.+C.+Hsueh%2C+H.+Zhao%2C+Z.+Kalbarczyk%2C+and+R.+K.+Iyer.+1999.+Stress-based+and+path-based+fault+injection.+IEEE+Trans.+Comput.+48%2C+11+%281999%29%2C+1183%2D%2D1201.+10.1109%2F12.811108+
http://scholar.google.com/scholar?hl=en&q=E.+van+der+Kouwe%2C+C.+Giuffrida%2C+and+A.+S.+Tanenbaum.+2014.+Evaluating+distortion+in+fault+injection+experiments.+In+Proc.+IEEE+Intl.+Symp.+High-Assurance+Systems+Engineering.+25%2D%2D32.+10.1109%2FHASE.2014.13+
http://scholar.google.com/scholar?hl=en&q=P.+C.+V%C3%A9ras%2C+E.+Villani%2C+A.+M.+Ambrosio%2C+N.+Silva%2C+M.+Vieira%2C+and+H.+Madeira.+2012.+Errors+on+space+software+requirements%3A+A+field+study+and+application+scenarios.+In+Proc.+IEEE+Intl.+Symp.+on+Software+Reliability+Engineering.+61%2D%2D70.+10.1109%2FISSRE.2010.30+
http://scholar.google.com/scholar?hl=en&q=M.+Vieira+and+H.+Madeira.+2003.+A+dependability+benchmark+for+OLTP+application+environments.+In+Proc.+Intl.+Conf.+on+Very+Large+Data+Bases.+742%2D%2D753.+
http://scholar.google.com/scholar?hl=en&q=M.+Vieira%2C+H.+Madeira%2C+I.+Irrera%2C+and+M.+Malek.+2009.+Fault+injection+for+failure+prediction+methods+validation.+In+Proc.+Workshop+on+Hot+Topics+in+System+Dependability.
http://scholar.google.com/scholar?hl=en&q=J.+M.+Voas.+1998.+Certifying+off-the-shelf+software+components.+IEEE+Computer+31%2C+6+%281998%29%2C+53%2D%2D59.+10.1109%2F2.683008+
http://scholar.google.com/scholar?hl=en&q=J.+M.+Voas%2C+F.+Charron%2C+G.+McGraw%2C+K.+Miller%2C+and+M.+Friedman.+1997.+Predicting+how+badly+%E2%80%9CGood%E2%80%9D+software+can+behave.+IEEE+Software+14%2C+4+%281997%29%2C+73%2D%2D83.+10.1109%2F52.595959+
http://scholar.google.com/scholar?hl=en&q=C.+J.+Walter+and+N.+Suri.+2003.+The+customizable+fault%2Ferror+model+for+dependable+distributed+systems.+Theor.+Comput.+Sci.+290%2C+2+%282003%29%2C+1223%2D%2D1251.+10.1016%2FS0304-3975%2801%2900203-1+
http://scholar.google.com/scholar?hl=en&q=E.+J.+Weyuker.+1998.+Testing+component-based+software%3A+A+cautionary+tale.+IEEE+Software+15%2C+5+%281998%29%2C+54%2D%2D59.+10.1109%2F52.714817+
http://scholar.google.com/scholar?hl=en&q=L.+Wilson.+2013.+International+Technology+Roadmap+for+Semiconductors.+Retrieved+from+http%3A%2F%2Fwww.itrs.net.
http://scholar.google.com/scholar?hl=en&q=S.+Winter%2C+C.+S%C3%A2rbu%2C+N.+Suri%2C+and+B.+Murphy.+2011.+The+impact+of+fault+models+on+software+robustness+evaluations.+In+Proc.+Intl.+Conf.+on+Software+Engineering.+51%2D%2D60.+10.1145%2F1985793.1985801+
http://scholar.google.com/scholar?hl=en&q=S.+Winter%2C+M.+Tretter%2C+B.+Sattler%2C+and+N.+Suri.+2013.+simFI%3A+From+single+to+simultaneous+software+fault+injections.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+10.1109%2FDSN.2013.6575310+
http://scholar.google.com/scholar?hl=en&q=C.+Wohlin%2C+P.+Runeson%2C+M.+H%C3%B6st%2C+M.+C.+Ohlsson%2C+B.+Regnell%2C+and+A.+Wessl%C3%A9n.+2012.+Experimentation+in+Software+Engineering.+Springer.+
http://scholar.google.com/scholar?hl=en&q=W.+E.+Wong+and+A.+P.+Mathur.+1995.+Reducing+the+cost+of+mutation+testing%3A+An+empirical+study.+J.+Syst.+Software+31%2C+3+%281995%29%2C+185%2D%2D196.+10.1016%2F0164-1212%2894%2900098-0+
http://scholar.google.com/scholar?hl=en&q=J.+Xu%2C+S.+Chen%2C+Z.+Kalbarczyk%2C+and+R.+K.+Iyer.+2001.+An+experimental+study+of+security+vulnerabilities+caused+by+errors.+In+Proc.+IEEE%2FIFIP+Intl.+Conf.+Dependable+Systems+and+Networks.+421%2D%2D430.+
