http://scholar.google.com/scholar?hl=en&q=Georgios+Bitzes+and+Andrzej+Nowak.+2014.+The+overhead+of+profiling+using+PMU+hardware+counters.+CERN+Openlab+Report+%282014%29.+Retrieved+from+https%3A%2F%2Fzenodo.org%2Frecord%2F10800%2Ffiles%2FTheOverheadOfProfilingUsingPMUhardwareCounters.pdf.
http://scholar.google.com/scholar?hl=en&q=Jan+Blunck%2C+Mathieu+Desnoyers%2C+and+Pierre-Marc+Fournier.+2009.+Userspace+application+tracing+with+markers+and+tracepoints.+In+Proceedings+of+the+Linux+Kongress.+Dresden%2C+Germany%2C+7%2D%2D14.
http://scholar.google.com/scholar?hl=en&q=Yannick+Brosseau.+2017.+A+userspace+tracing+comparison%3A+Dtrace+vs+LTTng+UST.+Retrieved+from+http%3A%2F%2Fwww.dorsal.polymtl.ca%2Ffr%2Fblog%2Fyannick-brosseau%2Fuserspace-tracing-comparison-dtrace-vs-lttng-ust.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers.+2009.+Low-Impact+Operating+System+Tracing.+Ph.D.+Dissertation.+%C3%89cole+Polytechnique+de+Montr%C3%A9al.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers.+2012.+Common+trace+format+%28CTF%29+specification+%28v1.+8.2%29.+Common+Trace+Format+GIT+Repository+%282012%29.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fefficios%2Fctf%2Fblob%2Fmaster%2Fcommon-trace-format-specification.md.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers.+2016a.+Restartable+sequences+system+call.+Retrieved+from+http%3A%2F%2Fwww.mail-archive.com%2Flinux-kernel%40vger.kernel.org%2Fmsg1213826.html.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers.+2016b.+Semantics+and+Behavior+of+Local+Atomic+Operations.+Documentation%2Flocal_ops.txt.+%282016%29.+Linux+kernel+version+4.5.0.+Retrieved+from+https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Ftorvalds%2Flinux.git%2Ftree%2FDocumentation%2Flocal_ops.txt%3Fh%26equals%3Bv4.5.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers.+2016c.+Tracepoints+documentation+in+the+Linux+kernel.+Documentation%2Ftrace%2Ftracepoints.txt.+Linux+kernel+version+4.5.0.+Retrieved+from+https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Ftorvalds%2Flinux.git%2Ftree%2FDocumentation%2Ftrace%2Ftracepoints.txt%3Fh%26equals%3Bv4.5.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers+and+Michel+Dagenais.+2006a.+Low+disturbance+embedded+system+tracing+with+linux+trace+toolkit+next+generation.+In+Proceedings+of+the+Embedded+Linux+Conference+%28ELC%E2%80%9906%29%2C+Vol.+2006.+Citeseer%2C+San+Jose%2C+California.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers+and+Michel+Dagenais.+2008.+LTTng%3A+Tracing+across+execution+layers%2C+from+the+hypervisor+to+user-space.+In+Proceedings+of+the+Linux+Symposium%2C+Vol.+101.+Ottawa+Linux+Symposium%2C+101%2D%2D106.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers+and+Michel+R.+Dagenais.+2006b.+The+LTTng+tracer%3A+A+low+impact+performance+and+behavior+monitor+for+GNU%2FLinux.+In+Proceedings+of+the+Ottawa+Linux+Symposium+%28OLS%E2%80%9906%29%2C+Vol.+2006.+Citeseer%2C+209%2D%2D224.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers+and+Michel+R.+Dagenais.+2009.+Lttng%2C+filling+the+gap+between+kernel+instrumentation+and+a+widely+usable+kernel+tracer.+In+Linux+Foundation+Collaboration+Summit+2009.+Linux+Foundation.
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers+and+Michel+R.+Dagenais.+2010.+Synchronization+for+fast+and+reentrant+operating+system+kernel+tracing.+Softw.+Pract.+Exp.+40%2C+12+%282010%29%2C+1053%2D%2D1072.+10.1002%2Fspe.v40%3A12+
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers+and+Michel+R.+Dagenais.+2012.+Lockless+multi-core+high-throughput+buffering+scheme+for+kernel+tracing.+ACM+SIGOPS+Op.+Syst.+Rev.+46%2C+3+%282012%29%2C+65%2D%2D81.+10.1145%2F2421648.2421659+
http://scholar.google.com/scholar?hl=en&q=Mathieu+Desnoyers%2C+Paul+E.+McKenney%2C+Alan+S.+Stern%2C+Michel+R.+Dagenais%2C+and+Jonathan+Walpole.+2012.+User-level+implementations+of+read-copy+update.+IEEE+Trans.+Parallel+Distrib.+Syst.+23%2C+2+%282012%29%2C+375%2D%2D382.+10.1109%2FTPDS.2011.159+
http://scholar.google.com/scholar?hl=en&q=Frank+Ch.+Eigler.+2006.+Problem+solving+with+systemtap.+In+Proceedings+of+the+Ottawa+Linux+Symposium.+Citeseer%2C+261%2D%2D268.
http://scholar.google.com/scholar?hl=en&q=Extrae.+2016.+Extrae+website.+Retrieved+from+http%3A%2F%2Fwww.vi-hps.org%2Ftools%2Fextrae.html.
http://scholar.google.com/scholar?hl=en&q=Pierre-Marc+Fournier%2C+Mathieu+Desnoyers%2C+and+Michel+R.+Dagenais.+2009.+Combined+tracing+of+the+kernel+and+applications+with+LTTng.+In+Proceedings+of+the+2009+Linux+Symposium.+Citeseer%2C+87%2D%2D93.
http://scholar.google.com/scholar?hl=en&q=M.+Frysinger.+2016.+Function+tracer+guts.+Documentation%2Ftrace%2Fftrace-design.txt.+Linux+kernel+version+4.5.0.+Retrieved+from+https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Ftorvalds%2Flinux.git%2Ftree%2FDocumentation%2Ftrace%2Fftrace-design.txt%3Fh%26equals%3Bv4.5.
http://scholar.google.com/scholar?hl=en&q=Amir+Reza+Ghods.+2016.+A+study+of+Linux+Perf+and+slab+allocation+sub-systems.+Master+thesis%2C+University+of+Waterloo.+Retrieved+from+http%3A%2F%2Fhdl.handle.net%2F10012%2F10184.
http://scholar.google.com/scholar?hl=en&q=Github.+2017a.+BCC+project.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fiovisor%2Fbcc.
http://scholar.google.com/scholar?hl=en&q=Github.+2017b.+Chisels+User+Guide.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fdraios%2Fsysdig%2Fwiki%2FChisels-User-Guide.
http://scholar.google.com/scholar?hl=en&q=Github.+2017c.+KTap%3A+A+lightweight+script-based+dynamic+tracing+tool+for+Linux.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fktap%2Fktap.
http://scholar.google.com/scholar?hl=en&q=Brendan+Gregg.+2017.+Brendan+Gregg+Linux+Performance.+Retrieved+from+http%3A%2F%2Fwww.brendangregg.com.
http://scholar.google.com/scholar?hl=en&q=Brendan+Gregg+and+Jim+Mauro.+2011.+DTrace%3A+Dynamic+Tracing+in+Oracle+Solaris%2C+Mac+OS+X%2C+and+FreeBSD.+Prentice+Hall+Professional.+
http://scholar.google.com/scholar?hl=en&q=M.+Haardt+and+M.+Coleman.+1999.+ptrace%282%29+Linux+Programmer%E2%80%99s+Manual.+Retrieved+from+http%3A%2F%2Fman7.org%2Flinux%2Fman-pages%2Fman2%2Fptrace.2.html.
http://scholar.google.com/scholar?hl=en&q=John+L.+Hennessy+and+David+A.+Patterson.+2011.+Computer+Architecture%3A+A+Quantitative+Approach.+Elsevier.+
http://scholar.google.com/scholar?hl=en&q=M.+Hiramatsu.+2010.+Kprobes+jump+optimization+support.+%28Feb.+2010%29.+https%3A%2F%2Flwn.net%2FArticles%2F375232.
http://scholar.google.com/scholar?hl=en&q=M.+Hiramatsu%2C+J.+Keniston%2C+and+P.+S.+Panchamukhi.+2016.+Kernel+Probes+%28Kprobes%29.+Documentation%2Fkprobes.txt.+%282016%29.+Linux+kernel+version+4.5.0.
http://scholar.google.com/scholar?hl=en&q=Intel+Corporation.+2016.+Intel%C2%AE+64+and+IA-32+Architectures+Software+Developer%E2%80%99s+Manual%2C+No.+325462-045US.
http://scholar.google.com/scholar?hl=en&q=Michael+K.+Johnson+and+Erik+W.+Troan.+2004.+Linux+Application+Development.+Addison-Wesley+Professional.+
http://scholar.google.com/scholar?hl=en&q=Tomas+Kalibera+and+Richard+Jones.+2013.+Rigorous+benchmarking+in+reasonable+time.+In+ACM+SIGPLAN+Not.%2C+Vol.+48.+ACM%2C+63%2D%2D74.+10.1145%2F2555670.2464160+
http://scholar.google.com/scholar?hl=en&q=Michael+Kerrisk.+2010.+The+Linux+Programming+Interface.+No+Starch+Press.+
http://scholar.google.com/scholar?hl=en&q=Andreas+Kn%C3%BCpfer%2C+Holger+Brunst%2C+Jens+Doleschal%2C+Matthias+Jurenz%2C+Matthias+Lieber%2C+Holger+Mickler%2C+Matthias+S.+M%C3%BCller%2C+and+Wolfgang+E.+Nagel.+2008.+The+vampir+performance+analysis+tool-set.+In+Tools+for+High+Performance+Computing%2C+Michael+Resch%2C+Rainer+Keller%2C+Valentin+Himmler%2C+Bettina+Krammer%2C+and+Alexander+Schulz+%28Eds.%29+Springer%2C+139%2D%2D155.
http://scholar.google.com/scholar?hl=en&q=Robert+Love.+2005.+Linux+Kernel+Development.+Novell+Press.+
http://scholar.google.com/scholar?hl=en&q=Ananth+Mavinakayanahalli%2C+Prasanna+Panchamukhi%2C+Jim+Keniston%2C+Anil+Keshavamurthy%2C+and+Masami+Hiramatsu.+2006.+Probing+the+guts+of+kprobes.+In+Proceedings+of+the+Linux+Symposium%2C+Vol.+6.+Ottawa+Linux+Symposium%2C+101%2D%2D116.
http://scholar.google.com/scholar?hl=en&q=Steven+McCanne+and+Van+Jacobson.+1993.+The+BSD+packet+filter%3A+A+new+architecture+for+user-level+packet+capture.+In+USENIX+Winter%2C+Vol.+46%2C+259%2D%2D270.+
http://scholar.google.com/scholar?hl=en&q=Paul+E.+McKenney+and+John+D.+Slingwine.+1998.+Read-copy+update%3A+Using+execution+history+to+solve+concurrency+problems.+In+Proceedings+of+the+10th+IASTED+International+Conference+on+Parallel+and+Distributed+Computing+and+Systems%2C+Oct.+1998.+509%2D%2D518.
http://scholar.google.com/scholar?hl=en&q=Bojan+Mihajlovi%C4%87%2C+%C5%BDeljko+%C5%BDili%C4%87%2C+and+Warren+J.+Gross.+2014.+Dynamically+instrumenting+the+QEMU+emulator+for+Linux+process+trace+generation+with+the+GDB+debugger.+ACM+Trans.+Embed.+Comput.+Syst.+%28TECS%E2%80%9914%29+13%2C+5s+%282014%29%2C+167.+10.1145%2F2678022+
http://scholar.google.com/scholar?hl=en&q=Shirley+Moore%2C+David+Cronk%2C+Kevin+London%2C+and+Jack+Dongarra.+2001.+Review+of+performance+analysis+tools+for+MPI+parallel+programs.+In+Proceedings+of+the+European+Parallel+Virtual+Machine%2FMessage+Passing+Interface+Users%E2%80%99+Group+Meeting.+Springer%2C+241%2D%2D248.+
http://scholar.google.com/scholar?hl=en&q=Matthias+S.+M%C3%BCller%2C+Andreas+Kn%C3%BCpfer%2C+Matthias+Jurenz%2C+Matthias+Lieber%2C+Holger+Brunst%2C+Hartmut+Mix%2C+and+Wolfgang+E.+Nagel.+2007.+Developing+scalable+applications+with+Vampir%2C+VampirServer+and+VampirTrace.+In+PARCO%2C+Vol.+15.+Citeseer%2C+637%2D%2D644.
http://scholar.google.com/scholar?hl=en&q=Pradeep+Padala.+2002.+Playing+with+ptrace%2C+Part+I.+Linux+J.+2002%2C+103+%282002%29%2C+5.+
http://scholar.google.com/scholar?hl=en&q=J.+S.+Peek.+1996.+System+and+method+for+creating+thread-safe+shared+libraries.+U.S.+Patent+No.+5%2C481%2C706.+Jan.+2%2C+1996.+Retrieved+from+https%3A%2F%2Fwww.google.com%2Fpatents%2FUS5481706.
http://scholar.google.com/scholar?hl=en&q=Vincent+Pillet%2C+Jes%C3%BAs+Labarta%2C+Toni+Cortes%2C+and+Sergi+Girona.+1995.+Paraver%3A+A+tool+to+visualize+and+analyze+parallel+code.+In+Proceedings+of+WoTUG-18%3A+Transputer+and+occam+Developments%2C+Vol.+44.+mar%2C+17%2D%2D31.
http://scholar.google.com/scholar?hl=en&q=Vara+Prasad%2C+William+Cohen%2C+F.+C.+Eigler%2C+Martin+Hunt%2C+Jim+Keniston%2C+and+J.+Chen.+2005.+Locating+system+problems+using+dynamic+instrumentation.+In+2005+Ottawa+Linux+Symposium.+Citeseer%2C+49%2D%2D64.
http://scholar.google.com/scholar?hl=en&q=Steven+Rostedt.+2009a.+Debugging+the+kernel+using+Ftrace+-+Part+1.+%282009%29.+https%3A%2F%2Flwn.net%2FArticles%2F365835.
http://scholar.google.com/scholar?hl=en&q=Steven+Rostedt.+2009b.+Finding+origins+of+latencies+using+ftrace.+In+Proceedings+of+the+Eleventh+Real-Time+Linux+Workshop%2C+Dresden%2C+Germany%2C+September+2009.
http://scholar.google.com/scholar?hl=en&q=S.+Rostedt.+2010.+Using+the+trace+event+macro.+Retrieved+from+http%3A%2F%2Flwn.net%2FArticles%2F379903.
http://scholar.google.com/scholar?hl=en&q=S.+Rostedt.+2016a.+ftrace+-+Function+Tracer.+Documentation%2Ftrace%2Fftrace.txt.+Linux+kernel+version+4.5.0.+Retrieved+from+https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Ftorvalds%2Flinux.git%2Ftree%2FDocumentation%2Ftrace%2Fftrace.txt%3Fh%26equals%3Bv4.5.
http://scholar.google.com/scholar?hl=en&q=S.+Rostedt.+2016b.+Lockless+Ring+Buffer+Design.+Documentation%2Ftrace%2Fring-buffer-design.txt.+Linux+kernel+version+4.5.0.+Retrieved+from+https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Ftorvalds%2Flinux.git%2Ftree%2FDocumentation%2Ftrace%2Fring-buffer-design.txt%3Fh%26equals%3Bv4.5.
http://scholar.google.com/scholar?hl=en&q=Robert+Sch%C3%B6ne%2C+Ronny+Tsch%C3%BCter%2C+Thomas+Ilsche%2C+and+Daniel+Hackenberg.+2010.+The+VampirTrace+plugin+counter+interface%3A+Introduction+and+examples.+In+Proceedings+of+the+European+Conference+on+Parallel+Processing.+Springer%2C+501%2D%2D511.+
http://scholar.google.com/scholar?hl=en&q=A.+Starovoitov%2C+J.+Schulist%2C+D.+Borkmann.+2016.+Linux+Socket+Filtering+aka+Berkeley+Packet+Filter+%28BPF%29.+Documentation%2Fnetworking%2Ffilter.txt.+Linux+kernel+version+4.5.0.+Retrieved+from+https%3A%2F%2Fgit.kernel.org%2Fpub%2Fscm%2Flinux%2Fkernel%2Fgit%2Ftorvalds%2Flinux.git%2Ftree%2FDocumentation%2Fnetworking%2Ffilter.txt%3Fh%26equals%3Bv4.5.
http://scholar.google.com/scholar?hl=en&q=Jan-Willem+Selij+and+Eric+van+den+Haak.+2014.+A+visitation+of+sysdig.+Project+Report.+Retrieved+from+https%3A%2F%2Fwww.os3.nl%2F_media%2F2013-2014%2Fcourses%2Fccf%2Fsysdig-jan-willem-eric.pdf.
http://scholar.google.com/scholar?hl=en&q=Suchakrapani+Sharma+and+Michel+Dagenais.+2016a.+Hardware-assisted+instruction+profiling+and+latency+detection.+J.f+Eng.+1%2C+1+%282016%29.
http://scholar.google.com/scholar?hl=en&q=Suchakrapani+Datt+Sharma+and+Michel+Dagenais.+2016b.+Enhanced+userspace+and+in-kernel+trace+filtering+for+production+systems.+J.+Comput.+Sci.+Technol.+31%2C+6+%282016%29%2C+1161%2D%2D1178.
http://scholar.google.com/scholar?hl=en&q=Narendran+Sivakumar+and+Sriram+Sundar+Rajan.+2010.+Effectiveness+of+tracing+in+a+multicore+environment.+%282010%29.
http://scholar.google.com/scholar?hl=en&q=James+E.+Smith.+1981.+A+study+of+branch+prediction+strategies.+In+Proceedings+of+the+8th+Annual+Symposium+on+Computer+Architecture.+IEEE+Computer+Society+Press%2C+135%2D%2D148.+
http://scholar.google.com/scholar?hl=en&q=Andrew+S.+Tanenbaum+and+Herbert+Bos.+2014.+Modern+Operating+Systems.+Prentice+Hall+Press.+
http://scholar.google.com/scholar?hl=en&q=Dan+Terpstra%2C+Heike+Jagode%2C+Haihang+You%2C+and+Jack+Dongarra.+2010.+Collecting+performance+data+with+PAPI-C.+In+Tools+for+High+Performance+Computing+2009.+Springer%2C+157%2D%2D173.
http://scholar.google.com/scholar?hl=en&q=Reinhard+Wilhelm%2C+Daniel+Grund%2C+Jan+Reineke%2C+Marc+Schlickling%2C+Markus+Pister%2C+and+Christian+Ferdinand.+2009.+Memory+hierarchies%2C+pipelines%2C+and+buses+for+future+architectures+in+time-critical+embedded+systems.+IEEE+Trans.+Comput.-Aided+Des.+Integr.+Circuits+Syst.+28%2C+7+%282009%29%2C+966.+10.1109%2FTCAD.2009.2013287+
