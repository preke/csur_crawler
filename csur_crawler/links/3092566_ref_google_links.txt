http://scholar.google.com/scholar?hl=en&q=Mithun+Acharya%2C+Tao+Xie%2C+Jian+Pei%2C+and+Jun+Xu.+2007.+Mining+API+patterns+as+partial+orders+from+source+code%3A+From+usage+scenarios+to+specifications.+In+Proceedings+of+the+the+6th+Joint+Meeting+of+the+European+Software+Engineering+Conference+and+the+ACM+SIGSOFT+Symposium+on+Foundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9907%29.+ACM%2C+25%2D%2D34.
http://scholar.google.com/scholar?hl=en&q=Adobe+Security+Bulletin.+2015.+APSA15-05%3A+Security+Advisory+for+Adobe+Flash+Player.+Retrieved+from+https%3A%2F%2Fhelpx.adobe.com%2Fsecurity%2Fproducts%2Fflash-player%2Fapsa15-05.html.
http://scholar.google.com/scholar?hl=en&q=Charu+C.+Aggarwal+and+Haixun+Wang.+2010.+A+survey+of+clustering+algorithms+for+graph+data.+In+Managing+and+Mining+Graph+Data.+Springer%2C+275%2D%2D301.+10.1007%2F978-1-4419-6045-0_9
http://scholar.google.com/scholar?hl=en&q=Leman+Akoglu%2C+Hanghang+Tong%2C+and+Danai+Koutra.+2015.+Graph+based+anomaly+detection+and+description%3A+A+survey.+Data+Min.+Knowl.+Discov.+29%2C+3+%282015%29%2C+626%2D%2D688.+10.1007%2Fs10618-014-0365-y+
http://scholar.google.com/scholar?hl=en&q=Marcos+Alvares%2C+Tshilidzi+Marwala%2C+and+Fernando+Buarque+De+Lima+Neto.+2013.+Applications+of+computational+intelligence+for+static+software+checking+against+memory+corruption+vulnerabilities.+In+Proceedings+of+the+IEEE+Symposium+on+Computational+Intelligence+in+Cyber+Security+%28CICS%E2%80%9913%29.+IEEE%2C+59%2D%2D66.+10.1109%2FCICYBS.2013.6597207
http://scholar.google.com/scholar?hl=en&q=Brad+Arkin%2C+Scott+Stender%2C+and+Gary+McGraw.+2005.+Software+penetration+testing.+IEEE+Security+8+Privacy+3%2C+1+%282005%29%2C+84%2D%2D87.
http://scholar.google.com/scholar?hl=en&q=Nathaniel+Ayewah%2C+David+Hovemeyer%2C+J.+David+Morgenthaler%2C+John+Penix%2C+and+William+Pugh.+2008.+Using+static+analysis+to+find+bugs.+IEEE+Softw.+25%2C+5+%282008%29%2C+22%2D%2D29.+10.1109%2FMS.2008.130+
http://scholar.google.com/scholar?hl=en&q=Al+Bessey%2C+Ken+Block%2C+Ben+Chelf%2C+Andy+Chou%2C+Bryan+Fulton%2C+Seth+Hallem%2C+Charles+Henri-Gros%2C+Asya+Kamsky%2C+Scott+McPeak%2C+and+Dawson+Engler.+2010.+A+few+billion+lines+of+code+later%3A+Using+static+analysis+to+find+bugs+in+the+real+world.+Commun.+ACM+%28CACM%29+53%2C+2+%282010%29%2C+66%2D%2D75.+10.1145%2F1646353.1646374+
http://scholar.google.com/scholar?hl=en&q=Matt+Bishop.+2007.+About+penetration+testing.+IEEE+Security+8+Privacy+5%2C+6+%282007%29%2C+84%2D%2D87.
http://scholar.google.com/scholar?hl=en&q=Tim+Boland+and+Paul+E+Black.+2012.+Juliet+1.1+C%2FC%2B%2B+and+java+test+suite.+Computer+45%2C+10+%282012%29%2C+88%2D%2D90.+10.1109%2FMC.2012.345+
http://scholar.google.com/scholar?hl=en&q=Amiangshu+Bosu%2C+Jeffrey+C.+Carver%2C+Munawar+Hafiz%2C+Patrick+Hilley%2C+and+Derek+Janni.+2014.+Identifying+the+characteristics+of+vulnerable+code+changes%3A+An+empirical+study.+In+Proceedings+of+the+22nd+ACM+International+Symposium+on+Foundations+of+Software+Engineering+%28FSE%E2%80%9914%29.+ACM%2C+257%2D%2D268.
http://scholar.google.com/scholar?hl=en&q=Stephen+Breen.+2015.+What+Do+WebLogic%2C+WebSphere%2C+JBoss%2C+Jenkins%2C+OpenNMS%2C+and+Your+Application+Have+in+Common%3F+This+Vulnerability.+Retrieved+from+http%3A%2F%2Ffoxglovesecurity.com%2F2015%2F11%2F06%2Fwhat-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability%2F.
http://scholar.google.com/scholar?hl=en&q=Godwin+Caruana+and+Maozhen+Li.+2012.+A+survey+of+emerging+approaches+to+spam+filtering.+ACM+Comput.+Surveys+%28CSUR%29+44%2C+2+%282012%29%2C+9.
http://scholar.google.com/scholar?hl=en&q=Cagatay+Catal+and+Banu+Diri.+2009.+A+systematic+review+of+software+fault+prediction+studies.+Expert+Syst.+Appl.+36%2C+4+%282009%29%2C+7346%2D%2D7354.+10.1016%2Fj.eswa.2008.10.027+
http://scholar.google.com/scholar?hl=en&q=Varun+Chandola%2C+Arindam+Banerjee%2C+and+Vipin+Kumar.+2009.+Anomaly+detection%3A+A+survey.+ACM+Comput.+Surveys+%28CSUR%29+41%2C+3+%282009%29%2C+15.
http://scholar.google.com/scholar?hl=en&q=Ray+Yaung+Chang%2C+Andy+Podgurski%2C+and+Jiong+Yang.+2008.+Discovering+neglected+conditions+in+software+by+mining+dependence+graphs.+IEEE+Trans.+Softw.+Eng.+34%2C+5+%282008%29%2C+579%2D%2D596.+10.1109%2FTSE.2008.24+
http://scholar.google.com/scholar?hl=en&q=Hong+Cheng%2C+Xifeng+Yan%2C+and+Jiawei+Han.+2014.+Mining+graph+patterns.+In+Frequent+Pattern+Mining.+Springer%2C+307%2D%2D338.+10.1007%2F978-3-319-07821-2_13
http://scholar.google.com/scholar?hl=en&q=Jan+Chorowski.+2012.+Learning+Understandable+Classifier+Models.+Ph.D.+Dissertation.+University+of+Louisville.
http://scholar.google.com/scholar?hl=en&q=Codenomicon.+2014.+The+Heartbleed+Bug.+Retrieved+from+http%3A%2F%2Fheartbleed.com%2F.
http://scholar.google.com/scholar?hl=en&q=Pedro+Domingos.+2012.+A+few+useful+things+to+know+about+machine+learning.+Commun.+ACM+%28CACM%29+55%2C+10+%282012%29%2C+78%2D%2D87.+10.1145%2F2347736.2347755+
http://scholar.google.com/scholar?hl=en&q=Mark+Dowd%2C+John+McDonald%2C+and+Justin+Schuh.+2007.+The+Art+of+Software+Security+Assessment%3A+Identifying+and+Preventing+Software+Vulnerabilities.+Addison-Wesley+Professional.
http://scholar.google.com/scholar?hl=en&q=Maureen+Doyle+and+James+Walden.+2011.+An+empirical+study+of+the+evolution+of+PHP+web+application+security.+In+Proceedings+of+the+3rd+International+Workshop+on+Security+Measurements+and+Metrics+%28MetriSec%E2%80%9911%29.+IEEE%2C+11%2D%2D20.+10.1109%2FMetrisec.2011.18+
http://scholar.google.com/scholar?hl=en&q=Dawson+Engler%2C+David+Yu+Chen%2C+Seth+Hallem%2C+Andy+Chou%2C+and+Benjamin+Chelf.+2001.+Bugs+as+deviant+behavior%3A+A+general+approach+to+inferring+errors+in+systems+code.+In+Proceedings+of+the+18th+ACM+Symposium+on+Operating+Systems+Principles+%28SOSP%E2%80%9901%29.+ACM%2C+57%2D%2D72.+10.1145%2F502034.502041+
http://scholar.google.com/scholar?hl=en&q=David+Evans+and+David+Larochelle.+2002.+Improving+security+using+extensible+lightweight+static+analysis.+IEEE+Software+19%2C+1+%282002%29%2C+42%2D%2D51.+10.1109%2F52.976940+
http://scholar.google.com/scholar?hl=en&q=Pasquale+Foggia%2C+Gennaro+Percannella%2C+and+Mario+Vento.+2014.+Graph+matching+and+learning+in+pattern+recognition+in+the+last+10+years.+Int.+J.+Pattern+Recogn.+Artific.+Intell.+28%2C+1+%282014%29%2C+1450001.+10.1142%2FS0218001414500013
http://scholar.google.com/scholar?hl=en&q=Alex+A.+Freitas.+2014.+Comprehensible+classification+models%3A+A+position+paper.+ACM+SIGKDD+Explor.+News.+15%2C+1+%282014%29%2C+1%2D%2D10.+10.1145%2F2594473.2594475+
http://scholar.google.com/scholar?hl=en&q=Pedro+Garcia-Teodoro%2C+J.+Diaz-Verdejo%2C+Gabriel+Macia-Fernandez%2C+and+Enrique+Vazquez.+2009.+Anomaly-based+network+intrusion+detection%3A+Techniques%2C+systems+and+challenges.+Comput.+Secur.+28%2C+1+%282009%29%2C+18%2D%2D28.
http://scholar.google.com/scholar?hl=en&q=Carrie+Gates+and+Carol+Taylor.+2006.+Challenging+the+anomaly+detection+paradigm%3A+A+provocative+discussion.+In+Proceedings+of+the+New+Security+Paradigms+Workshop+%28NSPW%E2%80%9906%29.+ACM%2C+21%2D%2D29.
http://scholar.google.com/scholar?hl=en&q=Patrice+Godefroid.+2007.+Random+testing+for+security%3A+Blackbox+vs.+whitebox+fuzzing.+In+Proceedings+of+the+2nd+International+Workshop+on+Random+Testing+%28RT%E2%80%9907%29.+ACM%2C+1.
http://scholar.google.com/scholar?hl=en&q=Patrice+Godefroid%2C+Michael+Y.+Levin%2C+and+David+Molnar.+2012.+SAGE%3A+Whitebox+fuzzing+for+security+testing.+Queue+10%2C+1+%282012%29%2C+20.
http://scholar.google.com/scholar?hl=en&q=Gustavo+Grieco%2C+Guillermo+Luis+Grinblat%2C+Lucas+Uzal%2C+Sanjay+Rawat%2C+Josselin+Feist%2C+and+Laurent+Mounier.+2015.+Toward+Large-scale+Vulnerability+Discovery+Using+Machine+Learning.+Technical+Report.+The+Free+International+Center+of+Information+Sciences+and+Systems+%28CIFASIS%29%2C+National+Council+for+Science+and+Technology+of+Argentina+%28CONICET%29.
http://scholar.google.com/scholar?hl=en&q=Natalie+Gruska%2C+Andrzej+Wasylkowski%2C+and+Andreas+Zeller.+2010.+Learning+from+6%2C000+projects%3A+Lightweight+cross-project+anomaly+detection.+In+Proceedings+of+the+19th+International+Symposium+on+Software+Testing+and+Analysis+%28ISSTA%E2%80%9910%29.+ACM%2C+119%2D%2D130.
http://scholar.google.com/scholar?hl=en&q=Thiago+S.+Guzella+and+Walmir+M.+Caminhas.+2009.+A+review+of+machine-learning+approaches+to+spam+filtering.+Expert+Syst.+Appl.+36%2C+7+%282009%29%2C+10206%2D%2D10222.+10.1016%2Fj.eswa.2009.02.037+
http://scholar.google.com/scholar?hl=en&q=Jiawei+Han%2C+Micheline+Kamber%2C+and+Jian+Pei.+2011.+Data+Mining%3A+Concepts+and+Techniques+%283rd+ed.%29.+Morgan+Kaufmann.
http://scholar.google.com/scholar?hl=en&q=Sean+Heelan.+2011.+Vulnerability+detection+systems%3A+Think+cyborg%2C+not+robot.+IEEE+Secur.+Privacy+9%2C+3+%282011%29%2C+74%2D%2D77.+10.1109%2FMSP.2011.70+
http://scholar.google.com/scholar?hl=en&q=Caitriona+H.+Heinl.+2014.+Artificial+%28intelligent%29+agents+and+active+cyber+defence%3A+Policy+implications.+In+Proceedings+of+the+6th+International+Conference+on+Cyber+Conflict+%28CyCon%E2%80%9914%29.+IEEE%2C+53%2D%2D66.
http://scholar.google.com/scholar?hl=en&q=Aram+Hovsepyan%2C+Riccardo+Scandariato%2C+Wouter+Joosen%2C+and+James+Walden.+2012.+Software+vulnerability+prediction+using+text+analysis+techniques.+In+Proceedings+of+the+4th+International+Workshop+on+Security+Measurements+and+Metrics+%28MetriSec%E2%80%9912%29.+ACM%2C+7%2D%2D10.+10.1145%2F2372225.2372230+
http://scholar.google.com/scholar?hl=en&q=IEEE+Standards.+1990.+IEEE+Standard+Glossary+of+Software+Engineering+Terminology.+IEEE+Std.+610.12-1990.
http://scholar.google.com/scholar?hl=en&q=Ranjit+Jhala+and+Rupak+Majumdar.+2009.+Software+model+checking.+ACM+Comput.+Surveys+%28CSUR%E2%80%9909%29+41%2C+4+%282009%29%2C+21.
http://scholar.google.com/scholar?hl=en&q=Cem+Kaner+and+Walter+P.+Bond.+2004.+Software+engineering+metrics%3A+What+do+they+measure+and+how+do+we+know%3F+In+Proceedings+of+the+10th+International+Symposium+on+Software+Metrics+%28METRICS%E2%80%9904%29.+IEEE.
http://scholar.google.com/scholar?hl=en&q=Taghi+M.+Khoshgoftaar%2C+Edward+B.+Allen%2C+John+P.+Hudepohl%2C+and+Stephen+J.+Aud.+1997.+Application+of+neural+networks+to+software+quality+modeling+of+a+very+large+telecommunications+system.+IEEE+Trans.+Neural+Netw.+8%2C+4+%281997%29%2C+902%2D%2D909.+10.1109%2F72.595888+
http://scholar.google.com/scholar?hl=en&q=Ivan+Victor+Krsul.+1998.+Software+Vulnerability+Analysis.+Ph.D.+Dissertation.+Purdue+University.
http://scholar.google.com/scholar?hl=en&q=William+Landi.+1992.+Undecidability+of+static+analysis.+ACM+Lett.+Program.+Lang.+Syst.+%28LOPLAS%29+1%2C+4+%281992%29%2C+323%2D%2D337.+10.1145%2F161494.161501+
http://scholar.google.com/scholar?hl=en&q=Carl+Landwehr.+2008.+Cybersecurity+and+artificial+intelligence%3A+From+fixing+the+plumbing+to+smart+water.+IEEE+Secur.+Privacy+6%2C+5+%282008%29%2C+3%2D%2D4.+10.1109%2FMSP.2008.113+
http://scholar.google.com/scholar?hl=en&q=James+R.+Larus%2C+Thomas+Ball%2C+Manuvir+Das%2C+Robert+DeLine%2C+Manuel+Fahndrich%2C+Jon+Pincus%2C+Sriram+K.+Rajamani%2C+and+Ramanathan+Venkatapathy.+2004.+Righting+software.+IEEE+Softw.+21%2C+3+%282004%29%2C+92%2D%2D100.+10.1109%2FMS.2004.1293079+
http://scholar.google.com/scholar?hl=en&q=Yann+LeCun%2C+Yoshua+Bengio%2C+and+Geoffrey+Hinton.+2015.+Deep+learning.+Nature+521%2C+7553+%282015%29%2C+436%2D%2D444.+10.1038%2Fnature14539
http://scholar.google.com/scholar?hl=en&q=Zhenmin+Li+and+Yuanyuan+Zhou.+2005.+PR-miner%3A+Automatically+extracting+implicit+programming+rules+and+detecting+violations+in+large+software+code.+In+Proceedings+of+the+10th+European+Software+Engineering+Conference+Held+Jointly+with+the+13th+ACM+International+Symposium+on+Foundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9905%29.+ACM%2C+306%2D%2D315.
http://scholar.google.com/scholar?hl=en&q=Benjamin+Livshits+and+Thomas+Zimmermann.+2005.+DynaMine%3A+Finding+common+error+patterns+by+mining+software+revision+histories.+In+Proceedings+of+the+10th+European+Software+Engineering+Conference+held+Jointly+with+the+13th+ACM+SIGSOFT+International+Symposium+on+Foundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9905%29.+ACM%2C+296%2D%2D305.
http://scholar.google.com/scholar?hl=en&q=Fan+Long+and+Martin+Rinard.+2016.+Automatic+patch+generation+by+learning+correct+code.+In+Proceedings+of+the+43rd+Symposium+on+Principles+of+Programming+Languages+%28POPL%E2%80%9916%29.+ACM%2C+298%2D%2D312.+10.1145%2F2837614.2837617+
http://scholar.google.com/scholar?hl=en&q=Ying+Ma%2C+Guangchun+Luo%2C+Xue+Zeng%2C+and+Aiguo+Chen.+2012.+Transfer+learning+for+cross-company+software+defect+prediction.+Info.+Softw.+Technol.+54%2C+3+%282012%29%2C+248%2D%2D256.+10.1016%2Fj.infsof.2011.09.007+
http://scholar.google.com/scholar?hl=en&q=Ruchika+Malhotra.+2015.+A+systematic+review+of+machine-learning+techniques+for+software+fault+prediction.+Appl.+Soft+Comput.+27+%282015%29%2C+504%2D%2D518.+10.1016%2Fj.asoc.2014.11.023+
http://scholar.google.com/scholar?hl=en&q=Iberia+Medeiros%2C+Nuno+F.+Neves%2C+and+Miguel+Correia.+2014.+Automatic+detection+and+correction+of+web+application+vulnerabilities+using+data+mining+to+predict+false+positives.+In+Proceedings+of+the+23rd+International+Conference+on+World+Wide+Web+%28WWW%E2%80%9914%29.+ACM%2C+63%2D%2D74.+10.1145%2F2566486.2568024+
http://scholar.google.com/scholar?hl=en&q=Andrew+Meneely%2C+Harshavardhan+Srinivasan%2C+Afiqah+Musa%2C+Alberto+Rodriguez-Tejeda%2C+Matthew+Mokary%2C+and+Brian+Spates.+2013.+When+a+patch+goes+bad%3A+Exploring+the+properties+of+vulnerability-contributing+commits.+In+Proceedings+of+the+ACM%2FIEEE+International+Symposium+on+Empirical+Software+Engineering+and+Measurement+%28ESEM%E2%80%9913%29.+IEEE%2C+65%2D%2D74.
http://scholar.google.com/scholar?hl=en&q=Andrew+Meneely+and+Laurie+Williams.+2010.+Strengthening+the+empirical+analysis+of+the+relationship+between+linus%E2%80%99+law+and+software+security.+In+Proceedings+of+the+ACM%2FIEEE+International+Symposium+on+Empirical+Software+Engineering+and+Measurement+%28ESEM%E2%80%9910%29.+ACM%2C+9.
http://scholar.google.com/scholar?hl=en&q=Julie+Moeyersoms%2C+Enric+Junque+de+Fortuny%2C+Karel+Dejaeger%2C+Bart+Baesens%2C+and+David+Martens.+2015.+Comprehensible+software+fault+and+effort+prediction%3A+A+data-mining+approach.+J.+Syst.+Softw.+100+%282015%29%2C+80%2D%2D90.+10.1016%2Fj.jss.2014.10.032+
http://scholar.google.com/scholar?hl=en&q=Benoit+Morel.+2011.+Artificial+intelligence%3A+A+key+to+the+future+of+cybersecurity.+In+Proceedings+of+the+4th+ACM+workshop+on+Artificial+Intelligence+and+Security+%28AISec%E2%80%9911%29.+ACM%2C+93%2D%2D98.+10.1145%2F2046684.2046699+
http://scholar.google.com/scholar?hl=en&q=Patrick+Morrison%2C+Kim+Herzig%2C+Brendan+Murphy%2C+and+Laurie+Williams.+2015.+Challenges+with+applying+vulnerability+prediction+models.+In+Proceedings+of+the+Symposium+and+Bootcamp+on+the+Science+of+Security+%28HotSoS%E2%80%9915%29.+ACM%2C+4.+10.1145%2F2746194.2746198+
http://scholar.google.com/scholar?hl=en&q=Sara+Moshtari%2C+Ashkan+Sami%2C+and+Mahdi+Azimi.+2013.+Using+complexity+metrics+to+improve+software+security.+Comput.+Fraud+Secur.+2013%2C+5+%282013%29%2C+8%2D%2D17.+10.1016%2FS1361-3723%2813%2970045-9
http://scholar.google.com/scholar?hl=en&q=Jaechang+Nam%2C+Sinno+Jialin+Pan%2C+and+Sunghun+Kim.+2013.+Transfer+defect+learning.+In+Proceedings+of+the+International+Conference+on+Software+Engineering+%28ICSE%E2%80%9913%29.+IEEE%2C+382%2D%2D391.+10.1109%2FICSE.2013.6606584
http://scholar.google.com/scholar?hl=en&q=Kartik+Nayak%2C+Daniel+Marino%2C+Petros+Efstathopoulos%2C+and+Tudor+Dumitras.+2014.+Some+vulnerabilities+are+different+than+others.+In+Proceedings+of+the+17th+International+Symposium+on+Research+in+Attacks%2C+Intrusions+and+Defenses+%28RAID%E2%80%9914%29.+Springer%2C+426%2D%2D446.+10.1007%2F978-3-319-11379-1_21
http://scholar.google.com/scholar?hl=en&q=Andy+Ozment.+2007.+Improving+vulnerability+discovery+models.+In+Proceedings+of+the+2007+ACM+workshop+on+Quality+of+Protection+%28QoP%E2%80%9907%29.+ACM%2C+6%2D%2D11.+10.1145%2F1314257.1314261+
http://scholar.google.com/scholar?hl=en&q=Sinno+Jialin+Pan+and+Qiang+Yang.+2010.+A+survey+on+transfer+learning.+IEEE+Trans.+Knowl.+Data+Eng.+22%2C+10+%282010%29%2C+1345%2D%2D1359.+10.1109%2FTKDE.2009.191+
http://scholar.google.com/scholar?hl=en&q=Yulei+Pang%2C+Xiaozhen+Xue%2C+and+Akbar+Siami+Namin.+2015.+Predicting+vulnerable+software+components+through+N-gram+analysis+and+statistical+feature+selection.+In+Proceedings+of+the+14th+International+Conference+on+Machine+Learning+and+Applications+%28ICMLA%E2%80%9915%29.+IEEE%2C+543%2D%2D548.
http://scholar.google.com/scholar?hl=en&q=Hao+Peng%2C+Lili+Mou%2C+Ge+Li%2C+Yuxuan+Liu%2C+Lu+Zhang%2C+and+Zhi+Jin.+2015.+Building+program+vector+representations+for+deep+learning.+In+Proceedings+of+the+8th+International+Conference+on+Knowledge+Science%2C+Engineering+and+Management+%28KSEM%E2%80%9915%29.+Springer%2C+547%2D%2D553.+10.1007%2F978-3-319-25159-2_49+
http://scholar.google.com/scholar?hl=en&q=Henning+Perl%2C+Sergej+Dechand%2C+Matthew+Smith%2C+Daniel+Arp%2C+Fabian+Yamaguchi%2C+Konrad+Rieck%2C+Sascha+Fahl%2C+and+Yasemin+Acar.+2015.+VccFinder%3A+Finding+potential+vulnerabilities+in+open-source+projects+to+assist+code+audits.+In+Proceedings+of+the+22nd+ACM+SIGSAC+Conference+on+Computer+and+Communications+Security+%28CCS%E2%80%9915%29.+ACM%2C+426%2D%2D437.
http://scholar.google.com/scholar?hl=en&q=Thomas+Reps.+2000.+Undecidability+of+context-sensitive+data-dependence+analysis.+ACM+Trans.+Program.+Lang.+Syst.+%28TOPLAS%29+22%2C+1+%282000%29%2C+162%2D%2D186.+10.1145%2F345099.345137+
http://scholar.google.com/scholar?hl=en&q=Stuart+Russell+and+Peter+Norvig.+2009.+Artificial+Intelligence%3A+A+Modern+Approach+%283rd+ed.%29.+Pearson.
http://scholar.google.com/scholar?hl=en&q=Alireza+Sadeghi%2C+Naeem+Esfahani%2C+and+Sam+Malek.+2014.+Mining+the+categorized+software+repositories+to+improve+the+analysis+of+security+vulnerabilities.+In+Proceedings+of+the+17th+International+Conference+on+Fundamental+Approaches+to+Software+Engineering+%28FASE%E2%80%9914%29+Part+of+the+European+Joint+Conferences+on+Theory+and+Practice+of+Software+%28ETAPS%E2%80%9914%29.+Springer%2C+155%2D%2D169.+10.1007%2F978-3-642-54804-8_11+
http://scholar.google.com/scholar?hl=en&q=Arthur+L.+Samuel.+1959.+Some+studies+in+machine+learning+using+the+game+of+checkers.+IBM+J.+Res.+Dev.+44%2C+1+%281959%29%2C+210%2D%2D229.+10.1147%2Frd.33.0210+
http://scholar.google.com/scholar?hl=en&q=Riccardo+Scandariato%2C+James+Walden%2C+Aram+Hovsepyan%2C+and+Wouter+Joosen.+2014.+Predicting+vulnerable+software+components+via+text+mining.+IEEE+Trans.+Softw.+Eng.+40%2C+10+%282014%29%2C+993%2D%2D1006.+10.1109%2FTSE.2014.2340398
http://scholar.google.com/scholar?hl=en&q=Hossain+Shahriar+and+Mohammad+Zulkernine.+2012.+Mitigating+program+security+vulnerabilities%3A+Approaches+and+challenges.+ACM+Comput.+Surveys+%28CSUR%29+44%2C+3+%282012%29%2C+11.
http://scholar.google.com/scholar?hl=en&q=Lwin+Khin+Shar%2C+Lionel+C+Briand%2C+and+Hee+Beng+Kuan+Tan.+2015.+Web+application+vulnerability+prediction+using+hybrid+program+analysis+and+machine+learning.+IEEE+Trans.+Depend.+Secure+Comput.+12%2C+6+%282015%29%2C+688%2D%2D707.+10.1109%2FTDSC.2014.2373377
http://scholar.google.com/scholar?hl=en&q=Lwin+Khin+Shar+and+Hee+Beng+Kuan+Tan.+2012.+Predicting+common+web+application+vulnerabilities+from+input+validation+and+sanitization+code+patterns.+In+Proceedings+of+the+27th+IEEE%2FACM+International+Conference+on+Automated+Software+Engineering+%28ASE%E2%80%9912%29.+IEEE%2C+310%2D%2D313.+10.1145%2F2351676.2351733+
http://scholar.google.com/scholar?hl=en&q=Lwin+Khin+Shar+and+Hee+Beng+Kuan+Tan.+2013.+Predicting+SQL+injection+and+cross+site+scripting+vulnerabilities+through+mining+input+sanitization+patterns.+Info.+Softw.+Technol.+55%2C+10+%282013%29%2C+1767%2D%2D1780.+10.1016%2Fj.infsof.2013.04.002+
http://scholar.google.com/scholar?hl=en&q=Lwin+Khin+Shar%2C+Hee+Beng+Kuan+Tan%2C+and+Lionel+C.+Briand.+2013.+Mining+SQL+injection+and+cross+site+scripting+vulnerabilities+using+hybrid+program+analysis.+In+Proceedings+of+the+35th+International+Conference+on+Software+Engineering+%28ICSE%E2%80%9913%29.+IEEE%2C+642%2D%2D651.+10.1109%2FICSE.2013.6606610
http://scholar.google.com/scholar?hl=en&q=Yonghee+Shin%2C+Andrew+Meneely%2C+Laurie+Williams%2C+and+Jason+Osborne.+2011.+Evaluating+complexity%2C+code+churn%2C+and+developer+activity+metrics+as+indicators+of+software+vulnerabilities.+IEEE+Trans.+Softw.+Eng.+37%2C+6+%282011%29%2C+772%2D%2D787.+10.1109%2FTSE.2010.81+
http://scholar.google.com/scholar?hl=en&q=Yonghee+Shin+and+Laurie+Williams.+2011.+An+initial+study+on+the+use+of+execution+complexity+metrics+as+indicators+of+software+vulnerabilities.+In+Proceedings+of+the+7th+International+Workshop+on+Software+Engineering+for+Secure+Systems+%28SESS%E2%80%9911%29.+ACM%2C+1%2D%2D7.+10.1145%2F1988630.1988632+
http://scholar.google.com/scholar?hl=en&q=Yonghee+Shin+and+Laurie+Williams.+2013.+Can+traditional+fault+prediction+models+be+used+for+vulnerability+prediction%3F+Empir.+Softw.+Eng.+18%2C+1+%282013%29%2C+25%2D%2D59.+10.1007%2Fs10664-011-9190-8
http://scholar.google.com/scholar?hl=en&q=Robin+Sommer+and+Vern+Paxson.+2010.+Outside+the+closed+world%3A+On+using+machine+learning+for+network+intrusion+detection.+In+Proceedings+of+the+31st+IEEE+Symposium+on+Security+and+Privacy+%28SP%E2%80%9910%29.+IEEE%2C+305%2D%2D316.
http://scholar.google.com/scholar?hl=en&q=Sherri+Sparks%2C+Shawn+Embleton%2C+Ryan+Cunningham%2C+and+Cliff+Zou.+2007.+Automated+vulnerability+analysis%3A+Leveraging+control+flow+for+evolutionary+input+crafting.+In+Proceedings+of+the+23rd+Annual+Computer+Security+Applications+Conference+%28ACSAC%E2%80%9907%29.+IEEE%2C+477%2D%2D486.
http://scholar.google.com/scholar?hl=en&q=Symantec+Security+Response.+2014.+ShellShock%3A+All+you+need+to+know+about+the+Bash+Bug+vulnerability.+Retrieved+from+http%3A%2F%2Fwww.symantec.com%2Fconnect%2Fblogs%2Fshellshock-all-you-need-know-about-bash-bug-vulnerability.
http://scholar.google.com/scholar?hl=en&q=Yaming+Tang%2C+Fei+Zhao%2C+Yibiao+Yang%2C+Hongmin+Lu%2C+Yuming+Zhou%2C+and+Baowen+Xu.+2015.+Predicting+vulnerable+components+via+text+mining+or+software+metrics%3F+An+effort-aware+perspective.+In+Proceedings+of+the+International+Conference+on+Software+Quality%2C+Reliability+and+Security+%28QRS%E2%80%9915%29.+IEEE%2C+27%2D%2D36.+10.1109%2FQRS.2015.15+
http://scholar.google.com/scholar?hl=en&q=Suresh+Thummalapenta+and+Tao+Xie.+2009.+Alattin%3A+Mining+alternative+patterns+for+detecting+neglected+conditions.+In+Proceedings+of+the+24th+IEEE%2FACM+International+Conference+on+Automated+Software+Engineering+%28ASE%E2%80%9909%29.+IEEE%2C+283%2D%2D294.
http://scholar.google.com/scholar?hl=en&q=Enn+Tyugu.+2011.+Artificial+intelligence+in+cyber+defense.+In+Proceedings+of+the+3rd+International+Conference+on+Cyber+Conflict+%28CyCon%E2%80%9911%29.+IEEE%2C+1%2D%2D11.
http://scholar.google.com/scholar?hl=en&q=US-CERT.+2013.+Oracle+Java+Contains+Multiple+Vulnerabilities.+Retrieved+from+https%3A%2F%2Fwww.us-cert.gov%2Fncas%2Falerts%2FTA13-064A.
http://scholar.google.com/scholar?hl=en&q=US-CERT.+2015.+Adobe+Flash+and+Microsoft+Windows+Vulnerabilities.+Retrieved+from+https%3A%2F%2Fwww.us-cert.gov%2Fncas%2Falerts%2FTA15-195A.
http://scholar.google.com/scholar?hl=en&q=Anneleen+Van-Assche+and+Hendrik+Blockeel.+2007.+Seeing+the+forest+through+the+trees%3A+Learning+a+comprehensible+model+from+an+ensemble.+In+Machine+Learning%3A+Proceedings+of+the+18th+European+Conference+on+Machine+Learning+%28ECML%E2%80%9907%29+%28Lecture+Notes+in+Computer+Science+%28LNCS%29%29.+Springer%2C+Berlin%2C+418%2D%2D429.
http://scholar.google.com/scholar?hl=en&q=James+Walden%2C+Jeffrey+Stuckman%2C+and+Riccardo+Scandariato.+2014.+Predicting+vulnerable+components%3A+Software+metrics+vs+text+mining.+In+Proceedings+of+the+25th+International+Symposium+on+Software+Reliability+Engineering+%28ISSRE%E2%80%9914%29.+IEEE%2C+23%2D%2D33.
http://scholar.google.com/scholar?hl=en&q=Andrzej+Wasylkowski%2C+Andreas+Zeller%2C+and+Christian+Lindig.+2007.+Detecting+object+usage+anomalies.+In+Proceedings+of+the+the+6th+Joint+Meeting+of+the+European+Software+Engineering+Conference+and+the+ACM+SIGSOFT+Symposium+on+the+Foundations+of+Software+Engineering+%28ESEC%2FFSE%E2%80%9907%29.+ACM%2C+35%2D%2D44.+10.1145%2F1287624.1287632+
http://scholar.google.com/scholar?hl=en&q=Dumidu+Wijayasekara%2C+Milos+Manic%2C+and+Miles+McQueen.+2014.+Vulnerability+identification+and+classification+via+text+mining+bug+databases.+In+Proceedings+of+the+40th+Annual+Conference+of+the+IEEE+Industrial+Electronics+Society+%28IECON%E2%80%9914%29.+IEEE%2C+3612%2D%2D3618.+10.1109%2FIECON.2014.7049035
http://scholar.google.com/scholar?hl=en&q=Dumidu+Wijayasekara%2C+Milos+Manic%2C+Jason+L.+Wright%2C+and+Miles+McQueen.+2012.+Mining+bug+databases+for+unidentified+software+vulnerabilities.+In+Proceedings+of+the+5th+International+Conference+on+Human+System+Interactions+%28HSI%E2%80%9912%29.+IEEE%2C+89%2D%2D96.+10.1109%2FHSI.2012.22+
http://scholar.google.com/scholar?hl=en&q=Tao+Xie+and+Jian+Pei.+2006.+MAPO%3A+Mining+API+usages+from+open+source+repositories.+In+Proceedings+of+the+International+Workshop+on+Mining+Software+Repositories+%28MSR%E2%80%9906%29.+ACM%2C+54%2D%2D57.
http://scholar.google.com/scholar?hl=en&q=Yichen+Xie%2C+Mayur+Naik%2C+Brian+Hackett%2C+and+Alex+Aiken.+2005.+Soundness+and+its+role+in+bug+detection+systems.+In+Proceedings+of+the+Workshop+on+the+Evaluation+of+Software+Defect+Detection+Tools+%28BUGS%E2%80%9905%29.
http://scholar.google.com/scholar?hl=en&q=Fabian+Yamaguchi%2C+Nico+Golde%2C+Daniel+Arp%2C+and+Konrad+Rieck.+2014.+Modeling+and+discovering+vulnerabilities+with+code+property+graphs.+In+Proceedings+of+the+35th+IEEE+Symposium+on+Security+and+Privacy+%28SP%E2%80%9914%29.+IEEE%2C+590%2D%2D604.+10.1109%2FSP.2014.44+
http://scholar.google.com/scholar?hl=en&q=Fabian+Yamaguchi%2C+Felix+Lindner%2C+and+Konrad+Rieck.+2011.+Vulnerability+extrapolation%3A+Assisted+discovery+of+vulnerabilities+using+machine+learning.+In+Proceedings+of+the+5th+USENIX+Workshop+on+Offensive+Technologies.+USENIX+Association.
http://scholar.google.com/scholar?hl=en&q=Fabian+Yamaguchi%2C+Markus+Lottmann%2C+and+Konrad+Rieck.+2012.+Generalized+vulnerability+extrapolation+using+abstract+syntax+trees.+In+Proceedings+of+the+28th+Annual+Computer+Security+Applications+Conference+%28ACSAC%E2%80%9912%29.+ACM%2C+359%2D%2D368.+10.1145%2F2420950.2421003+
http://scholar.google.com/scholar?hl=en&q=Fabian+Yamaguchi%2C+Alwin+Maier%2C+Hugo+Gascon%2C+and+Konrad+Rieck.+2015.+Automatic+inference+of+search+patterns+for+taint-style+vulnerabilities.+In+Proceedings+of+the+36th+IEEE+Symposium+on+Security+and+Privacy+%28SP%E2%80%9915%29.+IEEE%2C+797%2D%2D812.+10.1109%2FSP.2015.54+
http://scholar.google.com/scholar?hl=en&q=Fabian+Yamaguchi%2C+Christian+Wressnegger%2C+Hugo+Gascon%2C+and+Konrad+Rieck.+2013.+Chucky%3A+Exposing+missing+checks+in+source+code+for+vulnerability+discovery.+In+Proceedings+of+the+20th+ACM+SIGSAC+Conference+on+Computer+8+Communications+Security+%28CCS%E2%80%9913%29.+ACM%2C+499%2D%2D510.
http://scholar.google.com/scholar?hl=en&q=Xinli+Yang%2C+David+Lo%2C+Xin+Xia%2C+Yun+Zhang%2C+and+Jianling+Sun.+2015.+Deep+learning+for+just-in-time+defect+prediction.+In+Proceedings+of+the+International+Conference+on+Software+Quality%2C+Reliability+and+Security+%28QRS%E2%80%9915%29.+IEEE%2C+17%2D%2D26.+10.1109%2FQRS.2015.14+
http://scholar.google.com/scholar?hl=en&q=Awad+Younis%2C+Yashwant+Malaiya%2C+Charles+Anderson%2C+and+Indrajit+Ray.+2016.+To+fear+or+not+to+fear+that+is+the+question%3A+Code+characteristics+of+a+vulnerable+function+with+an+existing+exploit.+In+Proceedings+of+the+6th+ACM+Conference+on+Data+and+Application+Security+and+Privacy+%28CODASPY%E2%80%9916%29.+ACM%2C+97%2D%2D104.
http://scholar.google.com/scholar?hl=en&q=Andreas+Zeller%2C+Thomas+Zimmermann%2C+and+Christian+Bird.+2011.+Failure+is+a+four-letter+word%3A+A+parody+in+empirical+research.+In+Proceedings+of+the+7th+International+Conference+on+Predictive+Models+in+Software+Engineering.+ACM.+10.1145%2F2020390.2020395+
http://scholar.google.com/scholar?hl=en&q=Chenfeng+Vincent+Zhou%2C+Christopher+Leckie%2C+and+Shanika+Karunasekera.+2010.+A+survey+of+coordinated+attacks+and+collaborative+intrusion+detection.+Comput.+Secur.+29%2C+1+%282010%29%2C+124%2D%2D140.+10.1016%2Fj.cose.2009.06.008+
http://scholar.google.com/scholar?hl=en&q=Thomas+Zimmermann%2C+Nachiappan+Nagappan%2C+and+Laurie+Williams.+2010.+Searching+for+a+needle+in+a+haystack%3A+Predicting+security+vulnerabilities+for+windows+vista.+In+Proceedings+of+the+3rd+International+Conference+on+Software+Testing%2C+Verification+and+Validation+%28ICST%E2%80%9910%29.+IEEE%2C+421%2D%2D428.
