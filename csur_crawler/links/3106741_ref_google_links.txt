http://scholar.google.com/scholar?hl=en&q=Wonsun+Ahn%2C+Jiho+Choi%2C+Thomas+Shull%2C+Mar%C3%ADa+J.+Garzar%C3%A1n%2C+and+Josep+Torrellas.+2014.+Improving+JavaScript+performance+by+deconstructing+the+type+system.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+496%2D%2D507+10.1145%2F2666356.2594332+
http://scholar.google.com/scholar?hl=en&q=Saba+Alimadadi%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2015.+Hybrid+DOM-sensitive+change+impact+analysis+for+JavaScript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+321%2D%2D345.
http://scholar.google.com/scholar?hl=en&q=Saba+Alimadadi%2C+Sheldon+Sequeira%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2014.+Understanding+JavaScript+event-based+interactions.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+367%2D%2D377.+10.1145%2F2568225.2568268+
http://scholar.google.com/scholar?hl=en&q=Christopher+Anderson%2C+Paola+Giannini%2C+and+Sophia+Drossopoulou.+2005.+Towards+type+inference+for+JavaScript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+428%2D%2D452.+10.1007%2F11531142_19+
http://scholar.google.com/scholar?hl=en&q=Esben+Andreasen+and+Anders+M%C3%B8ller.+2014.+Determinacy+in+static+analysis+for+jquery.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+17%2D%2D31.+10.1145%2F2660193.2660214+
http://scholar.google.com/scholar?hl=en&q=AngularJS.+2010.+AngularJS.+Retrieved+from+http%3A%2F%2Fwww.angularjs.org.
http://scholar.google.com/scholar?hl=en&q=Shay+Artzi%2C+Julian+Dolby%2C+Simon+Holm+Jensen%2C+Anders+M%C3%B8ller%2C+and+Frank+Tip.+2011.+A+framework+for+automated+testing+of+JavaScript+web+applications.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+571%2D%2D580.+10.1145%2F1985793.1985871+
http://scholar.google.com/scholar?hl=en&q=Atomic+OS.+2007.+Atomic+OS.+Retrieved+from+http%3A%2F%2Fatomos.sourceforge.net%2Faos-1.1%2Findex.html.
http://scholar.google.com/scholar?hl=en&q=Thomas+H.+Austin+and+Cormac+Flanagan.+2012.+Multiple+facets+for+dynamic+information+flow.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+165%2D%2D178.+10.1145%2F2103656.2103677+
http://scholar.google.com/scholar?hl=en&q=SungGyeong+Bae%2C+Hyunghun+Cho%2C+Inho+Lim%2C+and+Sukyoung+Ryu.+2014.+SAFEWAPI%3A+Web+API+misuse+detector+for+web+applications.+In+Proc.+of+the+International+Symposium+on+Foundations+of+Software+Engineering.+507%2D%2D517.
http://scholar.google.com/scholar?hl=en&q=Kartik+Bajaj%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2014.+Dompletion%3A+DOM-aware+JavaScript+code+completion.+In+Proc.+of+the+International+Conference+on+Automated+Software+Engineering.+43%2D%2D54.+10.1145%2F2642937.2642981+
http://scholar.google.com/scholar?hl=en&q=Gogul+Balakrishnan+and+Thomas+Reps.+2006.+Recency-Abstraction+for+heap-allocated+storage.+In+Proc.+of+the+International+Symposium+on+Static+Analysis.+221%2D%2D239.+10.1007%2F11823230_15+
http://scholar.google.com/scholar?hl=en&q=Sruthi+Bandhakavi%2C+Samuel+T.+King%2C+P.+Madhusudan%2C+and+Marianne+Winslett.+2010.+VEX%3A+Vetting+browser+extensions+for+security+vulnerabilities.+In+Proc.+of+the+USENIX+Conference+on+Security.+22%2D%2D22.
http://scholar.google.com/scholar?hl=en&q=Martin+Bodin%2C+Arthur+Chargueraud%2C+Daniele+Filaretti%2C+Philippa+Gardner%2C+Sergio+Maffeis%2C+Daiva+Naudziuniene%2C+Alan+Schmitt%2C+and+Gareth+Smith.+2014.+A+trusted+mechanised+JavaScript+specification.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+87%2D%2D100.
http://scholar.google.com/scholar?hl=en&q=Aaron+Bohannon+and+Benjamin+C.+Pierce.+2010.+Featherweight+firefox%3A+Formalizing+the+core+of+a+web+browser.+In+Proc.+of+the+USENIX+Conference+on+Web+Application+Development.+11%2D%2D11.
http://scholar.google.com/scholar?hl=en&q=Achim+D.+Brucker+and+Michael+Herzberg.+2016.+On+the+static+analysis+of+hybrid+mobile+apps.+In+Proc.+of+the+International+Symposium+on+Engineering+Secure+Software+and+Systems.+72%2D%2D88.+10.1007%2F978-3-319-30806-7_5+
http://scholar.google.com/scholar?hl=en&q=Cristiano+Calcagno%2C+Dino+Distefano%2C+Jeremy+Dubreil%2C+Dominik+Gabi%2C+Pieter+Hooimeijer%2C+Martino+Luca%2C+Peter+OHearn%2C+Irene+Papakonstantinou%2C+Jim+Purbrick%2C+and+Dulma+Rodriguez.+2015.+Moving+fast+with+software+verification.+In+Proc.+of+NASA+Formal+Methods.+3%2D%2D11.+10.1007%2F978-3-319-17524-9_1
http://scholar.google.com/scholar?hl=en&q=WaiTing+Cheung%2C+Sukyoung+Ryu%2C+and+Sunghun+Kim.+2015.+Development+nature+matters%3A+An+empirical+study+of+code+clones+in+JavaScript+applications.+Empirical+Software+Engineering+%282015%29%2C+1%2D%2D48.
http://scholar.google.com/scholar?hl=en&q=Maxime+Chevalier-Boisvert+and+Marc+Feeley.+2015.+Simple+and+effective+type+check+removal+through+lazy+basic+block+versioning.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+101%2D%2D123.
http://scholar.google.com/scholar?hl=en&q=Wontae+Choi%2C+Satish+Chandra%2C+George+C.+Necula%2C+and+Koushik+Sen.+2015.+SJS%3A+A+type+system+for+JavaScript+with+fixed+object+layout.+In+Proc.+of+the+International+Symposium+on+Static+Analysis.+181%2D%2D198.+10.1007%2F978-3-662-48288-9_11
http://scholar.google.com/scholar?hl=en&q=Ravi+Chugh%2C+David+Herman%2C+and+Ranjit+Jhala.+2012a.+Dependent+types+for+JavaScript.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+587%2D%2D606.+10.1145%2F2384616.2384659+
http://scholar.google.com/scholar?hl=en&q=Ravi+Chugh%2C+Patrick+M.+Rondon%2C+and+Ranjit+Jhala.+2012b.+Nested+refinements%3A+A+logic+for+duck+typing.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+231%2D%2D244.+10.1145%2F2103656.2103686+
http://scholar.google.com/scholar?hl=en&q=Ravi+Chugh%2C+Jeffrey+A.+Meister%2C+Ranjit+Jhala%2C+and+Sorin+Lerner.+2009.+Staged+information+flow+for+JavaScript.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+50%2D%2D62.+10.1145%2F1542476.1542483+
http://scholar.google.com/scholar?hl=en&q=Holger+Cleve+and+Andreas+Zeller.+2000.+Finding+failure+causes+through+automated+testing.+In+Proc.+of+the+International+Workshop+on+Automated+Debugging.
http://scholar.google.com/scholar?hl=en&q=Coq.+2012.+The+Coq+Proof+Assistant.+Retrieved+from+http%3A%2F%2Fcoq.inria.fr%2F.
http://scholar.google.com/scholar?hl=en&q=Arlen+Cox%2C+Bor-Yuh+Evan+Chang%2C+and+Xavier+Rival.+2014.+Automatic+analysis+of+open+objects+in+dynamic+language+programs.+In+Proc.+of+the+International+Symposium+on+Static+Analysis.+134%2D%2D150.+10.1007%2F978-3-319-10936-7_9
http://scholar.google.com/scholar?hl=en&q=Charlie+Curtsinger%2C+Benjamin+Livshits%2C+Benjamin+Zorn%2C+and+Christian+Seifert.+2011.+ZOZZLE%3A+Fast+and+precise+in-browser+JavaScript+malware+detection.+In+Proc.+of+the+USENIX+Conference+on+Security.+3%2D%2D3.
http://scholar.google.com/scholar?hl=en&q=DefinitelyTyped.+2013.+DefinitelyTyped.+Retrieved+from+http%3A%2F%2Fdefinitelytyped.org.
http://scholar.google.com/scholar?hl=en&q=Dominique+Devriese+and+Frank+Piessens.+2010.+Noninterference+through+secure+multi-execution.+In+Proc.+of+the+Symposium+on+Security+and+Privacy.+109%2D%2D124.+10.1109%2FSP.2010.15+
http://scholar.google.com/scholar?hl=en&q=Kyle+Dewey%2C+Vineeth+Kashyap%2C+and+Ben+Hardekopf.+2015.+A+parallel+abstract+interpreter+for+JavaScript.+In+Proc.+of+the+International+Symposium+on+Code+Generation+and+Optimization.+34%2D%2D45.+10.1109%2FCGO.2015.7054185
http://scholar.google.com/scholar?hl=en&q=Mohan+Dhawan+and+Vinod+Ganapathy.+2009.+Analyzing+information+flow+in+JavaScript-based+browser+extensions.+In+Proc.+of+the+Annual+Computer+Security+Applications+Conference.+382%2D%2D391.+10.1109%2FACSAC.2009.43+
http://scholar.google.com/scholar?hl=en&q=Bruno+Dufour%2C+Barbara+G.+Ryder%2C+and+Gary+Sevitsky.+2007.+Blended+analysis+for+performance+understanding+of+framework-based+applications.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+118%2D%2D128.+10.1145%2F1273463.1273480+
http://scholar.google.com/scholar?hl=en&q=ECMA.+2015.+ECMA-262%3A+ECMAScript+2015+Language+Specification+%286th+ed%29.+%28June+2015%29.+http%3A%2F%2Fwww.ecma-international.org%2Fpublications%2Ffiles%2FECMA-ST%2FEcma-262.pdf.
http://scholar.google.com/scholar?hl=en&q=ECMA+TC39.+2016.+ECMAScript+Language+test262.+Retrieved+from+https%3A%2F%2Fgithub.com%2Ftc39%2Ftest262.
http://scholar.google.com/scholar?hl=en&q=Anders+Evenrud.+2014.+OS.js%3A+JavaScript+cloud%2Fweb+desktop+platform.+Retrieved+from+http%3A%2F%2Fos.js.org.
http://scholar.google.com/scholar?hl=en&q=Facebook.+2008.+FBJS%3A+FaceBook+JavaScript.+Retrieved+from+https%3A%2F%2Fgithub.com%2Ffacebook%2Ffbjs.
http://scholar.google.com/scholar?hl=en&q=Carter+Feldman.+2015.+CCJS+v1.2%3A+The+world%E2%80%99s+first+C+compiler+written+in+JavaScript.+Retrieved+from+http%3A%2F%2Fcarterf.com%2Fcf.gy%2FccjsPublic%2F.
http://scholar.google.com/scholar?hl=en&q=Asger+Feldthaus%2C+Todd+Millstein%2C+Anders+M%C3%B8ller%2C+Max+Sch%C3%A4fer%2C+and+Frank+Tip.+2011.+Tool-supported+refactoring+for+JavaScript.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+119%2D%2D138.+10.1145%2F2048066.2048078+
http://scholar.google.com/scholar?hl=en&q=Asger+Feldthaus+and+Anders+M%C3%B8ller.+2013.+Semi-automatic+rename+refactoring+for+JavaScript.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+323%2D%2D338.+10.1145%2F2509136.2509520+
http://scholar.google.com/scholar?hl=en&q=Asger+Feldthaus+and+Anders+M%C3%B8ller.+2014.+Checking+correctness+of+typescript+interfaces+for+JavaScript+libraries.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+1%2D%2D16.+10.1145%2F2660193.2660215+
http://scholar.google.com/scholar?hl=en&q=Asger+Feldthaus%2C+Max+Sch%C3%A4fer%2C+Manu+Sridharan%2C+Julian+Dolby%2C+and+Frank+Tip.+2013.+Efficient+construction+of+approximate+call+graphs+for+JavaScript+IDE+services.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+752%2D%2D761.+10.1109%2FICSE.2013.6606621
http://scholar.google.com/scholar?hl=en&q=Robert+Bruce+Findler+and+Matthias+Felleisen.+2002.+Contracts+for+higher-order+functions.+In+Proc.+of+the+International+Conference+on+Functional+Programming.+48%2D%2D59.+10.1145%2F581478.581484+
http://scholar.google.com/scholar?hl=en&q=David+Flanagan.+2006.+JavaScript%3A+The+Definitive+Guide.+O%E2%80%99Reilly+Media%2C+Inc.
http://scholar.google.com/scholar?hl=en&q=Cedric+Fournet%2C+Nikhil+Swamy%2C+Juan+Chen%2C+Pierre-Evariste+Dagand%2C+Pierre-Yves+Strub%2C+and+Benjamin+Livshits.+2013.+Fully+abstract+compilation+to+JavaScript.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+371%2D%2D384.+10.1145%2F2429069.2429114+
http://scholar.google.com/scholar?hl=en&q=Adam+P.+Fuchs%2C+Avik+Chaudhuri%2C+and+Jeffrey+S.+Foster.+2009.+SCanDroid%3A+Automated+Security+Certification+of+Android+Applications.+Technical+Report+CS-TR-4991.+University+of+Maryland.
http://scholar.google.com/scholar?hl=en&q=Andreas+Gal%2C+Brendan+Eich%2C+Mike+Shaver%2C+David+Anderson%2C+David+Mandelin%2C+Mohammad+R.+Haghighat%2C+Blake+Kaplan%2C+Graydon+Hoare%2C+Boris+Zbarsky%2C+Jason+Orendorff%2C+Jesse+Ruderman%2C+Edwin+W.+Smith%2C+Rick+Reitmaier%2C+Michael+Bebenita%2C+Mason+Chang%2C+and+Michael+Franz.+2009.+Trace-based+just-in-time+type+specialization+for+dynamic+languages.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+465%2D%2D478.+10.1145%2F1542476.1542528+
http://scholar.google.com/scholar?hl=en&q=Philippa+Anne+Gardner%2C+Sergio+Maffeis%2C+and+Gareth+David+Smith.+2012.+Towards+a+program+logic+for+JavaScript.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+31%2D%2D44.+10.1145%2F2103656.2103663+
http://scholar.google.com/scholar?hl=en&q=Philippa+A.+Gardner%2C+Gareth+D.+Smith%2C+Mark+J.+Wheelhouse%2C+and+Uri+D.+Zarfaty.+2008.+Local+Hoare+reasoning+about+DOM.+In+Proc.+of+the+Symposium+on+Principles+of+Database+Systems.+261%2D%2D270.+10.1145%2F1376916.1376953+
http://scholar.google.com/scholar?hl=en&q=Andy+Gill+%28Ed.%29.+2015.+PLDI%E2%80%9915.+ACM+SIGPLAN+Notices+50%2C+6+%282015%29.
http://scholar.google.com/scholar?hl=en&q=GitHub.+2014.+JavaScript+game+engines.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fshowcases%2Fjavascript-game-engines.
http://scholar.google.com/scholar?hl=en&q=GitHub+Blog.+2015.+Language+Trends+on+GitHub.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fblog%2F2047-language-trends-on-github.
http://scholar.google.com/scholar?hl=en&q=Liang+Gong%2C+Michael+Pradel%2C+and+Koushik+Sen.+2015a.+JITProf%3A+Pinpointing+JIT-unfriendly+JavaScript+code.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+357%2D%2D368.+10.1145%2F2786805.2786831+
http://scholar.google.com/scholar?hl=en&q=Liang+Gong%2C+Michael+Pradel%2C+Manu+Sridharan%2C+and+Koushik+Sen.+2015b.+DLint%3A+Dynamically+checking+bad+coding+practices+in+JavaScript.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+94%2D%2D105.+10.1145%2F2771783.2771809+
http://scholar.google.com/scholar?hl=en&q=Google.+2009.+Closure+Compiler.+Retrieved+from+https%3A%2F%2Fdevelopers.google.com%2Fclosure%2Fcompiler%2F.
http://scholar.google.com/scholar?hl=en&q=Salvatore+Guarnieri+and+Benjamin+Livshits.+2009.+GATEKEEPER%3A+Mostly+static+enforcement+of+security+and+reliability+policies+for+JavaScript+code.+In+Proc.+of+the+USENIX+Conference+on+Security.+151%2D%2D168.
http://scholar.google.com/scholar?hl=en&q=Salvatore+Guarnieri+and+Benjamin+Livshits.+2010.+GULFSTREAM%3A+Staged+static+analysis+for+streaming+JavaScript+applications.+In+Proc.+of+the+USENIX+Conference+on+Web+Application+Development.+6%2D%2D6.
http://scholar.google.com/scholar?hl=en&q=Salvatore+Guarnieri%2C+Marco+Pistoia%2C+Omer+Tripp%2C+Julian+Dolby%2C+Stephen+Teilhet%2C+and+Ryan+Berg.+2011.+Saving+the+world+wide+web+from+vulnerable+JavaScript.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+177%2D%2D187.+10.1145%2F2001420.2001442+
http://scholar.google.com/scholar?hl=en&q=Arjun+Guha%2C+Claudiu+Saftoiu%2C+and+Shriram+Krishnamurthi.+2010.+The+essence+of+JavaScript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+126%2D%2D150.+10.1007%2F978-3-642-14107-2_7
http://scholar.google.com/scholar?hl=en&q=Arjun+Guha%2C+Claudiu+Saftoiu%2C+and+Shriram+Krishnamurthi.+2011.+Typing+local+control+and+state+using+flow+analysis.+In+Proc.+of+the+European+Symposium+on+Programming.+256%2D%2D275.+10.1007%2F978-3-642-19718-5_14
http://scholar.google.com/scholar?hl=en&q=Brian+Hackett+and+Shu-yu+Guo.+2012.+Fast+and+precise+hybrid+type+inference+for+JavaScript.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+239%2D%2D250.+10.1145%2F2254064.2254094+
http://scholar.google.com/scholar?hl=en&q=Mouna+Hammoudi%2C+Brian+Burg%2C+Gigon+Bae%2C+and+Gregg+Rothermel.+2015.+On+the+use+of+delta+debugging+to+reduce+recordings+and+facilitate+debugging+of+web+applications.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+333%2D%2D344.+10.1145%2F2786805.2786846+
http://scholar.google.com/scholar?hl=en&q=Ben+Hardekopf+and+Calvin+Lin.+2011.+Flow-sensitive+pointer+analysis+for+millions+of+lines+of+code.+In+International+Symposium+on+Code+Generation+and+Optimization.+289%2D%2D298.
http://scholar.google.com/scholar?hl=en&q=David+Hauzar+and+Jan+Kofro%C5%88.+2015.+Framework+for+static+analysis+of+PHP+applications.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+689%2D%2D711.
http://scholar.google.com/scholar?hl=en&q=Daniel+Hedin+and+Andrei+Sabelfeld.+2012.+Information-Flow+security+for+a+core+of+JavaScript.+In+Proc.+of+the+Computer+Security+Foundations+Symposium.+3%2D%2D18.+10.1109%2FCSF.2012.19+
http://scholar.google.com/scholar?hl=en&q=Phillip+Heidegger%2C+Annette+Bieniusa%2C+and+Peter+Thiemann.+2012.+Access+permission+contracts+for+scripting+languages.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+111%2D%2D122.+10.1145%2F2103656.2103671+
http://scholar.google.com/scholar?hl=en&q=Phillip+Heidegger+and+Peter+Thiemann.+2010a.+Contract-driven+testing+of+JavaScript+code.+In+Proc.+of+the+International+Conference+on+Objects%2C+Models%2C+Components%2C+Patterns.+154%2D%2D172.+10.1007%2F978-3-642-13953-6_9
http://scholar.google.com/scholar?hl=en&q=Phillip+Heidegger+and+Peter+Thiemann.+2010b.+Recency+types+for+analyzing+scripting+languages.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+200%2D%2D224.+10.1007%2F978-3-642-14107-2_10
http://scholar.google.com/scholar?hl=en&q=David+Herman+and+Cormac+Flanagan.+2007.+Status+report%3A+Specifying+JavaScript+with+ML.+In+Proc.+of+the+Workshop+on+ML.+126%2D%2D150.+10.1145%2F1292535.1292543+
http://scholar.google.com/scholar?hl=en&q=Stefan+Heule%2C+Manu+Sridharan%2C+and+Satish+Chandra.+2015.+Mimic%3A+Computing+models+for+opaque+code.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+710%2D%2D720.+10.1145%2F2786805.2786875+
http://scholar.google.com/scholar?hl=en&q=Mark+Hills%2C+Paul+Klint%2C+and+Jurgen+Vinju.+2013.+An+empirical+study+of+PHP+feature+usage%3A+A+static+analysis+perspective.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+325%2D%2D335.+10.1145%2F2483760.2483786+
http://scholar.google.com/scholar?hl=en&q=IBM.+2007.+IBM+Security+AppScan.+Retrieved+from+http%3A%2F%2Fwww-03.ibm.com%2Fsoftware%2Fproducts%2Fen%2Fappscan.
http://scholar.google.com/scholar?hl=en&q=IBM+Research.+2006.+T.J.+Watson+Libraries+for+Analysis+%28WALA%29.+Retrieved+from+http%3A%2F%2Fwala.sf.net.
http://scholar.google.com/scholar?hl=en&q=Dongseok+Jang+and+Kwang-Moo+Choe.+2009.+Points-to+analysis+for+JavaScript.+In+Proc.+of+the+Symposium+on+Applied+Computing.+1930%2D%2D1937.+10.1145%2F1529282.1529711+
http://scholar.google.com/scholar?hl=en&q=Dongseok+Jang%2C+Ranjit+Jhala%2C+Sorin+Lerner%2C+and+Hovav+Shacham.+2010.+An+empirical+study+of+privacy-violating+information+flows+in+JavaScript+web+applications.+In+Proc.+of+the+Conference+on+Computer+and+Communications+Security.+270%2D%2D283.+10.1145%2F1866307.1866339+
http://scholar.google.com/scholar?hl=en&q=Casper+S.+Jensen%2C+Anders+M%C3%B8ller%2C+Veselin+Raychev%2C+Dimitar+Dimitrov%2C+and+Martin+Vechev.+2015a.+Stateless+model+checking+of+event-driven+applications.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+57%2D%2D73.+10.1145%2F2814270.2814282+
http://scholar.google.com/scholar?hl=en&q=Simon+Holm+Jensen%2C+Peter+A.+Jonsson%2C+and+Anders+M%C3%B8ller.+2012.+Remedying+the+eval+that+men+do.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+34%2D%2D44.+10.1145%2F2338965.2336758+
http://scholar.google.com/scholar?hl=en&q=Simon+Holm+Jensen%2C+Magnus+Madsen%2C+and+Anders+M%C3%B8ller.+2011.+Modeling+the+HTML+DOM+and+browser+API+in+static+analysis+of+JavaScript+web+applications.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+59%2D%2D69.+10.1145%2F2025113.2025125+
http://scholar.google.com/scholar?hl=en&q=Simon+Holm+Jensen%2C+Anders+M%C3%B8ller%2C+and+Peter+Thiemann.+2009.+Type+analysis+for+JavaScript.+In+Proc.+of+the+International+Symposium+on+Static+Analysis.+238%2D%2D255.+10.1007%2F978-3-642-03237-0_17+
http://scholar.google.com/scholar?hl=en&q=Simon+Holm+Jensen%2C+Anders+M%C3%B8ller%2C+and+Peter+Thiemann.+2010.+Interprocedural+analysis+with+lazy+propagation.+In+Proc.+of+the+International+Symposium+on+Static+Analysis.+320%2D%2D339.+10.1007%2F978-3-642-15769-1_20
http://scholar.google.com/scholar?hl=en&q=Simon+Holm+Jensen%2C+Manu+Sridharan%2C+Koushik+Sen%2C+and+Satish+Chandra.+2015b.+MemInsight%3A+Platform-independent+memory+debugging+for+JavaScript.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+345%2D%2D356.+10.1145%2F2786805.2786860+
http://scholar.google.com/scholar?hl=en&q=L.+Jiang%2C+G.+Misherghi%2C+Z.+Su%2C+and+S.+Glondu.+2007.+DECKARD%3A+Scalable+and+accurate+tree-based+detection+of+code+clones.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+96%2D%2D105.+10.1109%2FICSE.2007.30+
http://scholar.google.com/scholar?hl=en&q=Richard+Joiner%2C+Thomas+Reps%2C+Somesh+Jha%2C+Mohan+Dhawan%2C+and+Vinod+Ganapathy.+2014.+Efficient+runtime-enforcement+techniques+for+policy+weaving.+In+Proc.+of+the+International+Symposium+on+Foundations+of+Software+Engineering.+224%2D%2D234.+10.1145%2F2635868.2635907+
http://scholar.google.com/scholar?hl=en&q=Seth+Just%2C+Alan+Cleary%2C+Brandon+Shirley%2C+and+Christian+Hammer.+2011.+Information+flow+analysis+for+JavaScript.+In+Proc.+of+the+International+Workshop+on+Programming+Language+and+Systems+Technologies+for+Internet+Clients.+9%2D%2D18.+10.1145%2F2093328.2093331+
http://scholar.google.com/scholar?hl=en&q=KAIST+PLRG.+2012.+SAFE%3A+JavaScript+analysis+framework.+Retrieved+from+http%3A%2F%2Fsafe.kaist.ac.kr.
http://scholar.google.com/scholar?hl=en&q=Seonghoon+Kang+and+Sukyoung+Ryu.+2012.+Formal+specification+of+a+JavaScript+module+system.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+621%2D%2D638.+10.1145%2F2384616.2384661+
http://scholar.google.com/scholar?hl=en&q=Rezwana+Karim%2C+Mohan+Dhawan%2C+Vinod+Ganapathy%2C+and+Chung-chieh+Shan.+2012.+An+analysis+of+the+Mozilla+Jetpack+extension+framework.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+333%2D%2D355.+10.1007%2F978-3-642-31057-7_16+
http://scholar.google.com/scholar?hl=en&q=Vineeth+Kashyap%2C+Kyle+Dewey%2C+Ethan+A.+Kuefner%2C+John+Wagner%2C+Kevin+Gibbons%2C+John+Sarracino%2C+Ben+Wiedermann%2C+and+Ben+Hardekopf.+2014.+JSAI%3A+A+static+analysis+platform+for+JavaScript.+In+Proc.+of+the+International+Symposium+on+Foundations+of+Software+Engineering.+121%2D%2D132.
http://scholar.google.com/scholar?hl=en&q=Vineeth+Kashyap+and+Ben+Hardekopf.+2014.+Security+signature+inference+for+JavaScript-based+browser+addons.+In+Proc.+of+the+International+Symposium+on+Code+Generation+and+Optimization.+219%2D%2D229.+10.1145%2F2581122.2544149
http://scholar.google.com/scholar?hl=en&q=Vineeth+Kashyap%2C+John+Sarracino%2C+John+Wagner%2C+Ben+Wiedermann%2C+and+Ben+Hardekopf.+2013.+Type+refinement+for+static+analysis+of+JavaScript.+In+Proc.+of+the+Symposium+on+Dynamic+Languages.+17%2D%2D26.+10.1145%2F2508168.2508175+
http://scholar.google.com/scholar?hl=en&q=Matthias+Keil+and+Peter+Thiemann.+2013.+Type-based+dependency+analysis+for+JavaScript.+In+Proc.+of+the+Workshop+on+Programming+Languages+and+Analysis+for+Security.+47%2D%2D58.+10.1145%2F2465106.2465118+
http://scholar.google.com/scholar?hl=en&q=Matthias+Keil+and+Peter+Thiemann.+2015.+TreatJS%3A+Higher-order+contracts+for+JavaScripts.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+28%2D%2D51.
http://scholar.google.com/scholar?hl=en&q=Gregor+Kiczales+and+Erik+Hilsdale.+2001.+Aspect-oriented+programming.+SIGSOFT+Software+Engineering+Notes+26%2C+5+%28Sept.+2001%29.+10.1145%2F503271.503260+
http://scholar.google.com/scholar?hl=en&q=Haruka+Kikuchi%2C+Dachuan+Yu%2C+Ajay+Chander%2C+Hiroshi+Inamura%2C+and+Igor+Serikov.+2008.+JavaScript+instrumentation+in+practice.+In+Proc.+of+the+Asian+Symposium+on+Programming+Languages+and+Systems.+326%2D%2D341.+10.1007%2F978-3-540-89330-1_23+
http://scholar.google.com/scholar?hl=en&q=Yoonseok+Ko%2C+Hongki+Lee%2C+Julian+Dolby%2C+and+Sukyoung+Ryu.+2015.+Practically+tunable+static+analysis+framework+for+large-scale+JavaScript+applications.+In+Proc.+of+the+International+Conference+on+Automated+Software+Engineering.+541%2D%2D551.+10.1109%2FASE.2015.28+
http://scholar.google.com/scholar?hl=en&q=Chris+Lattner%2C+Andrew+Lenharth%2C+and+Vikram+Adve.+2007.+Making+context-sensitive+points-to+analysis+with+heap+cloning+practical+for+the+real+world.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+278%2D%2D289.+10.1145%2F1250734.1250766+
http://scholar.google.com/scholar?hl=en&q=Hongki+Lee%2C+Sooncheol+Won%2C+Joonho+Jin%2C+Junhee+Cho%2C+and+Sukyoung+Ryu.+2012.+SAFE%3A+Formal+specification+and+implementation+of+a+scalable+analysis+framework+for+ECMAScript.+In+Proc.+of+the+International+Workshop+on+Foundations+of+Object-Oriented+Languages.
http://scholar.google.com/scholar?hl=en&q=Sungho+Lee%2C+Julian+Dolby%2C+and+Sukyoung+Ryu.+2016.+HybriDroid%3A+Static+analysis+framework+for+android+hybrid+applications.+In+Proc.+of+the+International+Conference+on+Automated+Software+Engineering.+250%2D%2D261.+10.1145%2F2970276.2970368+
http://scholar.google.com/scholar?hl=en&q=Benjamin+S.+Lerner%2C+Matthew+J.+Carroll%2C+Dan+P.+Kimmel%2C+Hannah+Quay-De+La+Vallee%2C+and+Shriram+Krishnamurthi.+2012.+Modeling+and+reasoning+about+DOM+events.+In+Proc.+of+the+USENIX+Conference+on+Web+Application+Development.+1%2D%2D12.
http://scholar.google.com/scholar?hl=en&q=Benjamin+S.+Lerner%2C+Liam+Elberty%2C+Jincheng+Li%2C+and+Shriram+Krishnamurthi.+2013.+Combining+form+and+function%3A+Static+types+for+jquery+programs.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+79%2D%2D103.+10.1007%2F978-3-642-39038-8_4+
http://scholar.google.com/scholar?hl=en&q=Benjamin+S.+Lerner%2C+Liam+Elberty%2C+Neal+Poole%2C+and+Shriram+Krishnamurthi.+2013b.+Verifying+web+browser+extensions%E2%80%99+compliance+with+private-browsing+mode.+In+Proc.+of+the+European+Symposium+on+Research+in+Computer+Security.+57%2D%2D74.
http://scholar.google.com/scholar?hl=en&q=Vladimir+I.+Levenshtein.+1996.+Binary+codes+capable+of+correcting+deletions%2C+insertions+and+reversal.+Soviet+Physics+Doklady+10%2C+8+%281996%29%2C+707%2D%2D710.
http://scholar.google.com/scholar?hl=en&q=Guodong+Li%2C+Esben+Andreasen%2C+and+Indradeep+Ghosh.+2014.+SymJS%3A+Automatic+symbolic+testing+of+JavaScript+web+applications.+In+Proc.+of+the+International+Symposium+on+Foundations+of+Software+Engineering.+449%2D%2D459.+10.1145%2F2635868.2635913+
http://scholar.google.com/scholar?hl=en&q=Benjamin+Livshits%2C+Manu+Sridharan%2C+Yannis+Smaragdakis%2C+Ond%C5%99ej+Lhot%C3%A1k%2C+J.+Nelson+Amaral%2C+Bor-Yuh+Evan+Chang%2C+Samuel+Z.+Guyer%2C+Uday+P.+Khedker%2C+Anders+M%C3%B8ller%2C+and+Dimitrios+Vardoulakis.+2015.+In+defense+of+soundiness%3A+A+manifesto.+Communications+of+the+ACM+58%2C+2+%282015%29%2C+44%2D%2D46.+10.1145%2F2644805+
http://scholar.google.com/scholar?hl=en&q=Francesco+Logozzo+and+Herman+Venter.+2010.+RATA%3A+Rapid+atomic+type+analysis+by+abstract+interpretation%E2%80%94Application+to+JavaScript+optimization.+In+Proc.+of+the+International+Conference+on+Compiler+Construction.+66%2D%2D83.+10.1007%2F978-3-642-11970-5_5+
http://scholar.google.com/scholar?hl=en&q=Wangzhong+Lu%2C+J.+Janssen%2C+E.+Milios%2C+N.+Japkowicz%2C+and+Yongzheng+Zhang.+2006.+Node+similarity+in+the+citation+graph.+Knowledge+and+Information+Systems+11%2C+1+%282006%29%2C+105%2D%2D129.+10.1007%2Fs10115-006-0023-9+
http://scholar.google.com/scholar?hl=en&q=Magnus+Madsen%2C+Benjamin+Livshits%2C+and+Michael+Fanning.+2013.+Practical+static+analysis+of+JavaScript+applications+in+the+presence+of+frameworks+and+libraries.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+499%2D%2D509.+10.1145%2F2491411.2491417+
http://scholar.google.com/scholar?hl=en&q=Magnus+Madsen+and+Anders+M%C3%B8ller.+2014.+Sparse+dataflow+analysis+with+pointers+and+reachability.+In+Proc.+of+the+International+Symposium+on+Static+Analysis.+201%2D%2D218.+10.1007%2F978-3-319-10936-7_13
http://scholar.google.com/scholar?hl=en&q=Magnus+Madsen%2C+Frank+Tip%2C+and+Ond%C5%99ej+Lhot%C3%A1k.+2015.+Static+analysis+of+event-driven+node.js+JavaScript+applications.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+505%2D%2D519.+10.1145%2F2814270.2814272+
http://scholar.google.com/scholar?hl=en&q=Sergio+Maffeis%2C+John+C.+Mitchell%2C+and+Ankur+Taly.+2008.+An+operational+semantics+for+JavaScript.+In+Proc.+of+the+Asian+Symposium+on+Programming+Languages+and+Systems.+307%2D%2D325.+10.1007%2F978-3-540-89330-1_22+
http://scholar.google.com/scholar?hl=en&q=Sergio+Maffeis%2C+John+C.+Mitchell%2C+and+Ankur+Taly.+2009a.+Isolating+JavaScript+with+filters%2C+rewriting%2C+and+wrappers.+In+Proc.+of+the+European+Conference+on+Research+in+Computer+Security.+505%2D%2D522.+10.1007%2F978-3-642-04444-1_31
http://scholar.google.com/scholar?hl=en&q=Sergio+Maffeis%2C+John+C.+Mitchell%2C+and+Ankur+Taly.+2009b.+Run-time+enforcement+of+secure+JavaScript+subsets.+In+Proc.+of+the+Workshop+in+Web+2.0+Security+%26+Privacy.
http://scholar.google.com/scholar?hl=en&q=Sergio+Maffeis+and+Ankur+Taly.+2009.+Language-based+isolation+of+untrusted+JavaScript.+In+Proc.+of+the+Computer+Security+Foundations+Symposium.+77%2D%2D91.+10.1109%2FCSF.2009.11+
http://scholar.google.com/scholar?hl=en&q=Josip+Maras%2C+Jan+Carlson%2C+and+Ivica+Crnkovi.+2012.+Extracting+client-side+web+application+code.+In+Proc.+of+the+Conference+on+World+Wide+Web.+819%2D%2D828.+10.1145%2F2187836.2187947+
http://scholar.google.com/scholar?hl=en&q=Josip+Maras%2C+Maja+%C5%A0tula%2C+and+Jan+Carlson.+2013.+Generating+feature+usage+scenarios+in+client-side+web+applications.+In+Proc.+of+the+International+Conference+on+Web+Engineering.+186%2D%2D200.+10.1007%2F978-3-642-39200-9_17+
http://scholar.google.com/scholar?hl=en&q=Fadi+Meawad%2C+Gregor+Richards%2C+Flor%C3%A9al+Morandat%2C+and+Jan+Vitek.+2012.+Eval+begone%26excl%3B%3A+Semi-automated+removal+of+eval+from+JavaScript+programs.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+607%2D%2D620.
http://scholar.google.com/scholar?hl=en&q=Ali+Mesbah%2C+Engin+Bozdag%2C+and+Arie+van+Deursen.+2008.+Crawling+AJAX+by+inferring+user+interface+state+changes.+In+Proc.+of+the+International+Conference+on+Web+Engineering.+122%2D%2D134.+10.1109%2FICWE.2008.24+
http://scholar.google.com/scholar?hl=en&q=Ali+Mesbah+and+Arie+van+Deursen.+2009.+Invariant-based+automatic+testing+of+AJAX+user+interfaces.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+210%2D%2D220.+10.1109%2FICSE.2009.5070522+
http://scholar.google.com/scholar?hl=en&q=Ali+Mesbah%2C+Arie+van+Deursen%2C+and+Stefan+Lenselink.+2012.+Crawling+ajax-based+web+applications+through+dynamic+analysis+of+user+interface+state+changes.+ACM+Transactions+on+the+Web+6%2C+1+%282012%29%2C+3%3A1%2D%2D3%3A30.
http://scholar.google.com/scholar?hl=en&q=Bertrand+Meyer.+1988.+Object-Oriented+Software+Construction.+Prentice-Hall.
http://scholar.google.com/scholar?hl=en&q=Leo+A.+Meyerovich+and+Benjamin+Livshits.+2010.+ConScript%3A+Specifying+and+enforcing+fine-grained+security+policies+for+JavaScript+in+the+browser.+In+Proc.+of+the+Symposium+on+Security+and+Privacy.+481%2D%2D496.+10.1109%2FSP.2010.36+
http://scholar.google.com/scholar?hl=en&q=Microsoft.+2012.+TypeScript.+Retrieved+from+http%3A%2F%2Fwww.typescriptlang.org.
http://scholar.google.com/scholar?hl=en&q=Amin+Milani+Fard%2C+Ali+Mesbah%2C+and+Eric+Wohlstadter.+2015.+Generating+fixtures+for+JavaScript+unit+testing.+In+Proc.+of+the+International+Conference+on+Automated+Software+Engineering.+190%2D%2D200.+10.1109%2FASE.2015.26+
http://scholar.google.com/scholar?hl=en&q=Mark+S.+Miller%2C+Mike+Samuel%2C+Ben+Laurie%2C+Ihab+Awad%2C+and+Mike+Stay.+2008.+Caja%3A+Safe+active+content+in+sanitized+JavaScript.+Google+white+paper.+Retrieved+from.+http%3A%2F%2Fgoogle-caja.googlecode.com.
http://scholar.google.com/scholar?hl=en&q=Eric+Miraglia.+2007.+A+JavaScript+Module+Pattern.+Yahoo%26excl%3B+User+Interface+Blog.+Retrieved+from+www.yuiblog.com%2Fblog%2F2007%2F06%2F12%2Fmodule-pattern%2F.
http://scholar.google.com/scholar?hl=en&q=Shabnam+Mirshokraie%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2013a.+Efficient+JavaScript+mutation+testing.+In+Proc.+of+the+International+Conference+on+Software+Testing%2C+Verification+and+Validation.+74%2D%2D83.+10.1109%2FICST.2013.23+
http://scholar.google.com/scholar?hl=en&q=Shabnam+Mirshokraie%2C+Ali+Mesbah%2C+and+Karthik+Pattabiraman.+2013b.+PYTHIA%3A+Generating+test+cases+with+oracles+for+JavaScript+applications.+In+Proc.+of+the+International+Conference+on+Automated+Software+Engineering.+610%2D%2D615.+10.1109%2FASE.2013.6693121+
http://scholar.google.com/scholar?hl=en&q=Mehdi+Mirzaaghaei+and+Ali+Mesbah.+2014.+DOM-based+test+adequacy+criteria+for+web+applications.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+71%2D%2D81.+10.1145%2F2610384.2610406+
http://scholar.google.com/scholar?hl=en&q=Anders+M%C3%B8ller%2C+Simon+Holm+Jensen%2C+Peter+Thiemann%2C+Magnus+Madsen%2C+Matthias+Diehn+Ingesman%2C+Peter+Jonsson%2C+and+Esben+Andreasen.+2012.+TAJS%3A+Type+Analyzer+for+JavaScript.+Retrieved+from+https%3A%2F%2Fgithub.com%2Fcs-au-dk%2FTAJS.
http://scholar.google.com/scholar?hl=en&q=Mozilla.+2013.+asm.jsJ.+Retrieved+from+http%3A%2F%2Fasmjs.org.
http://scholar.google.com/scholar?hl=en&q=Mozilla.+2014.+Jetpack.+Retrieved+from+http%3A%2F%2Fgoogle-caja.googlecode.com.
http://scholar.google.com/scholar?hl=en&q=Mozilla+Developer+Network.+2005.+About+JavaScript.+Retrieved+from+https%3A%2F%2Fdeveloper.mozilla.org%2Fen-US%2Fdocs%2FWeb%2FJavaScript%2FAbout_JavaScript.
http://scholar.google.com/scholar?hl=en&q=James+M.+Neighbors.+2015.+Tutorial%3A+Metacompilers.+Retrieved+from+http%3A%2F%2Fbayfronttechnologies.com%2Fmc_tutorial.html.
http://scholar.google.com/scholar?hl=en&q=Inc.+Neo+Technology.+2010.+Neo4J.+Retrieved+from+http%3A%2F%2Fneo4j.com.
http://scholar.google.com/scholar?hl=en&q=Nick+Nikiforakis%2C+Luca+Invernizzi%2C+Alexandros+Kapravelos%2C+Steven+Van+Acker%2C+Wouter+Joosen%2C+Christopher+Kruegel%2C+Frank+Piessens%2C+and+Giovanni+Vigna.+2012.+You+are+what+you+include%3A+Large-scale+evaluation+of+remote+JavaScript+inclusions.+In+Proc.+of+the+Conference+on+Computer+and+Communications+Security.+10.1145%2F2382196.2382274+
http://scholar.google.com/scholar?hl=en&q=James+Noble%2C+Sophia+Drossopoulou%2C+Mark+S.+Miller%2C+Toby+Murray%2C+and+Alex+Potanin.+2016.+Abstract+data+types+in+object-capability+systems.+In+Proc.+of+the+International+Workshop+on+Aliasing%2C+Capabilities+and+Ownership.
http://scholar.google.com/scholar?hl=en&q=Frolin+Ocariza%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2015.+Detecting+inconsistencies+in+JavaScript+MVC+applications.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+325%2D%2D335.+10.1109%2FICSE.2015.52
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza%2C+Jr.%2C+Kartik+Bajaj%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2013.+An+empirical+study+of+client-side+JavaScript+bugs.+In+International+Symposium+on+Empirical+Software+Engineering+and+Measurement.+55%2D%2D64.+10.1109%2FESEM.2013.18
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza%2C+Jr.%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2012.+AutoFLox%3A+An+automatic+fault+localizer+for+client-side+JavaScript.+In+Proc.+of+the+International+Conference+on+Software+Testing%2C+Verification+and+Validation.+31%2D%2D40.+10.1109%2FICST.2012.83+
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza%2C+Jr.%2C+Karthik+Pattabiraman%2C+and+Ali+Mesbah.+2014.+Vejovis%3A+Suggesting+fixes+for+JavaScript+faults.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+837%2D%2D847.+10.1145%2F2568225.2568257+
http://scholar.google.com/scholar?hl=en&q=Frolin+S.+Ocariza%2C+Jr.%2C+Karthik+Pattabiraman%2C+and+Benjamin+Zorn.+2011.+JavaScript+errors+in+the+wild%3A+An+empirical+study.+In+Proc.+of+the+International+Symposium+on+Software+Reliability+Engineering.+100%2D%2D109.+10.1109%2FISSRE.2011.28+
http://scholar.google.com/scholar?hl=en&q=Ejike+Ofuonye+and+James+Miller.+2008.+Resolving+JavaScript+vulnerabilities+in+the+browser+runtime.+In+Proc.+of+the+International+Symposium+on+Software+Reliability+Engineering.+57%2D%2D66.+10.1109%2FISSRE.2008.11+
http://scholar.google.com/scholar?hl=en&q=Hakjoo+Oh%2C+Kihong+Heo%2C+Wonchan+Lee%2C+Woosuk+Lee%2C+Daejun+Park%2C+Jeehoon+Kang%2C+and+Kwangkeun+Yi.+2014.+Global+sparse+analysis+framework.+ACM+Transactions+on+Programming+Languages+and+Systems+36%2C+3+%282014%29%2C+8%3A1%2D%2D8%3A44.
http://scholar.google.com/scholar?hl=en&q=OWASP.+2013.+Types+of+Cross-Site+Scripting.+Retrieved+from+https%3A%2F%2Fwww.owasp.org%2Findex.php%2FTypes_of_Cross-Site_Scripting.
http://scholar.google.com/scholar?hl=en&q=Carlos+Pacheco%2C+Shuvendu+K.+Lahiri%2C+Michael+D.+Ernst%2C+and+Thomas+Ball.+2007.+Feedback-directed+random+test+generation.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+75%2D%2D84.+10.1109%2FICSE.2007.37+
http://scholar.google.com/scholar?hl=en&q=Changhee+Park%2C+Hongki+Lee%2C+and+Sukyoung+Ryu.+2013.+All+about+the+with+statement+in+JavaScript%3A+Removing+with+statements+in+JavaScript+applications.+In+Proc.+of+the+Symposium+on+Dynamic+Languages.+10.1145%2F2508168.2508173+
http://scholar.google.com/scholar?hl=en&q=Changhee+Park+and+Sukyoung+Ryu.+2015.+Scalable+and+precise+static+analysis+of+JavaScript+applications+via+loop-sensitivity.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+735%2D%2D756.
http://scholar.google.com/scholar?hl=en&q=Changhee+Park%2C+Sooncheol+Won%2C+Joonho+Jin%2C+and+Sukyoung+Ryu.+2015b.+Static+analysis+of+JavaScript+web+applications+in+the+wild+via+practical+DOM+modeling.+In+Proc.+of+the+International+Conference+on+Automated+Software+Engineering.+552%2D%2D562.+10.1109%2FASE.2015.27+
http://scholar.google.com/scholar?hl=en&q=Daejun+Park%2C+Andrei+%C5%9Etef%C4%83nescu%2C+and+Grigore+Ro%C5%9Fu.+2015a.+KJS%3A+A+complete+formal+semantics+of+JavaScript.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+428%2D%2D438.+10.1145%2F2737924.2737991+
http://scholar.google.com/scholar?hl=en&q=Jihyeok+Park.+2014.+JavaScript+API+misuse+detection+by+using+typescript.+In+Proc.+of+the+International+Conference+on+Modularity+%28ACM+Student+Research+Competition%29.+11%2D%2D12.+10.1145%2F2584469.2584472+
http://scholar.google.com/scholar?hl=en&q=Joonyoung+Park%2C+Inho+Lim%2C+and+Sukyoung+Ryu.+2016.+Battles+with+false+positives+in+static+analysis+of+JavaScript+web+applications+in+the+wild.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+10.1145%2F2889160.2889227+
http://scholar.google.com/scholar?hl=en&q=Karthik+Pattabiraman+and+Benjamin+Zorn.+2010.+DoDOM%3A+Leveraging+DOM+invariants+for+web+2.0+application+robustness+testing.+In+Proc.+of+the+International+Symposium+on+Software+Reliability+Engineering.+191%2D%2D200.+10.1109%2FISSRE.2010.17+
http://scholar.google.com/scholar?hl=en&q=Boris+Petrov%2C+Martin+Vechev%2C+Manu+Sridharan%2C+and+Julian+Dolby.+2012.+Race+detection+for+web+applications.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+251%2D%2D262.+10.1145%2F2254064.2254095+
http://scholar.google.com/scholar?hl=en&q=Phu+H.+Phung%2C+David+Sands%2C+and+Andrey+Chudnov.+2009.+Lightweight+self-protecting+JavaScript.+In+Proc.+of+the+International+Symposium+on+Information%2C+Computer%2C+and+Communications+Security.+47%2D%2D60.+10.1145%2F1533057.1533067+
http://scholar.google.com/scholar?hl=en&q=Jacques+A.+Pienaar+and+Robert+Hundt.+2013.+JSWhiz%3A+Static+analysis+for+JavaScript+memory+leaks.+In+Proc.+of+the+International+Symposium+on+Code+Generation+and+Optimization.+1%2D%2D11.+10.1109%2FCGO.2013.6495007+
http://scholar.google.com/scholar?hl=en&q=Joe+Gibbs+Politz%2C+Spiridon+Aristides+Eliopoulos%2C+Arjun+Guha%2C+and+Shriram+Krishnamurthi.+2011.+ADsafety%3A+Type-based+verification+of+JavaScript+sandboxing.+In+Proc.+of+the+USENIX+Conference+on+Security.+12%2D%2D12.
http://scholar.google.com/scholar?hl=en&q=Joe+Gibbs+Politz%2C+Arjun+Guha%2C+and+Shriram+Krishnamurthi.+2012a.+Semantics+and+types+for+objects+with+first-class+member+names.+In+Proc.+of+the+International+Workshop+on+Foundations+of+Object-Oriented+Languages.
http://scholar.google.com/scholar?hl=en&q=Joe+Gibbs+Politz%2C+Matthew+J.+Carroll%2C+Benjamin+S.+Lerner%2C+Justin+Pombrio%2C+and+Shriram+Krishnamurthi.+2012b.+A+tested+semantics+for+getters%2C+setters%2C+and+eval+in+JavaScript.+In+Proc.+of+Symposium+on+Dynamic+Languages.+1%2D%2D16.+10.1145%2F2384577.2384579+
http://scholar.google.com/scholar?hl=en&q=Michael+Pradel%2C+Parker+Schuh%2C+George+Necula%2C+and+Koushik+Sen.+2014.+EventBreak%3A+Analyzing+the+responsiveness+of+user+interfaces+through+performance-guided+test+generation.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+33%2D%2D47.+10.1145%2F2660193.2660233+
http://scholar.google.com/scholar?hl=en&q=Michael+Pradel%2C+Parker+Schuh%2C+and+Koushik+Sen.+2015.+TypeDevil%3A+Dynamic+type+inconsistency+analysis+for+JavaScript.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+314%2D%2D324.+10.1109%2FICSE.2015.51
http://scholar.google.com/scholar?hl=en&q=Michael+Pradel+and+Koushik+Sen.+2015.+The+good%2C+the+bad%2C+and+the+ugly%3A+An+empirical+study+of+implicit+type+conversions+in+JavaScript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+519%2D%2D541.
http://scholar.google.com/scholar?hl=en&q=Aseem+Rastogi%2C+Nikhil+Swamy%2C+C%C3%A9dric+Fournet%2C+Gavin+Bierman%2C+and+Panagiotis+Vekris.+2015.+Safe+and+efficient+gradual+typing+for+typescript.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+167%2D%2D180.+10.1145%2F2676726.2676971+
http://scholar.google.com/scholar?hl=en&q=Paruj+Ratanaworabhan%2C+Benjamin+Livshits%2C+and+Benjamin+Zorn.+2009.+NOZZLE%3A+A+defense+against+heap-spraying+code+injection+attacks.+In+Proc.+of+the+Conference+on+USENIX+Security+Symposium.+169%2D%2D186.
http://scholar.google.com/scholar?hl=en&q=Paruj+Ratanaworabhan%2C+Benjamin+Livshits%2C+and+Benjamin+G.+Zorn.+2010.+JSMeter%3A+Comparing+the+behavior+of+JavaScript+benchmarks+with+real+web+applications.+In+Proc.+of+the+USENIX+Conference+on+Web+Application+Development.+3%2D%2D3.
http://scholar.google.com/scholar?hl=en&q=Veselin+Raychev%2C+Martin+Vechev%2C+and+Andreas+Krause.+2015.+Predicting+program+properties+from+%E2%80%9Cbig+code.%E2%80%9D+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+111%2D%2D124.
http://scholar.google.com/scholar?hl=en&q=Veselin+Raychev%2C+Martin+Vechev%2C+and+Manu+Sridharan.+2013.+Effective+race+detection+for+event-driven+programs.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+151%2D%2D166.+10.1145%2F2509136.2509538+
http://scholar.google.com/scholar?hl=en&q=Charles+Reis%2C+John+Dunagan%2C+Helen+J.+Wang%2C+Opher+Dubrovsky%2C+and+Saher+Esmeir.+2007.+BrowserShield%3A+Vulnerability-driven+filtering+of+dynamic+HTML.+ACM+Transactions+on+the+Web+1%2C+3%2C+Article+11+%282007%29.+10.1145%2F1281480.1281481+
http://scholar.google.com/scholar?hl=en&q=John+C.+Reynolds.+2002.+Separation+logic%3A+A+logic+for+shared+mutable+data+structures.+In+Proc.+of+the+Symposium+on+Logic+in+Computer+Science.+55%2D%2D74.+10.1109%2FLICS.2002.1029817
http://scholar.google.com/scholar?hl=en&q=Dustin+Rhodes%2C+Tim+Disney%2C+and+Cormac+Flanagan.+2014.+Dynamic+detection+of+object+capability+violations+through+model+checking.+In+Proc.+of+the+ACM+Symposium+on+Dynamic+Languages.+103%2D%2D112.+10.1145%2F2661088.2661099+
http://scholar.google.com/scholar?hl=en&q=Gregor+Richards%2C+Andreas+Gal%2C+Brendan+Eich%2C+and+Jan+Vitek.+2011a.+Automated+construction+of+JavaScript+benchmarks.+In+Proc.+of+the+Conference+on+Object-Oriented+Programming%2C+Systems%2C+Languages%2C+and+Applications.+677%2D%2D694.+10.1145%2F2048066.2048119+
http://scholar.google.com/scholar?hl=en&q=Gregor+Richards%2C+Christian+Hammer%2C+Brian+Burg%2C+and+Jan+Vitek.+2011b.+The+eval+that+men+do%3A+A+large-scale+study+of+the+use+of+eval+in+JavaScript+applications.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+52%2D%2D78.+10.1007%2F978-3-642-22655-7_4
http://scholar.google.com/scholar?hl=en&q=Gregor+Richards%2C+Sylvain+Lebresne%2C+Brian+Burg%2C+and+Jan+Vitek.+2010.+An+analysis+of+the+dynamic+behavior+of+JavaScript+programs.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+1%2D%2D12.+10.1145%2F1806596.1806598+
http://scholar.google.com/scholar?hl=en&q=Gregor+Richards%2C+Francesco+Zappa+Nardelli%2C+and+Jan+Vitek.+2015.+Concrete+types+for+typescript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+76%2D%2D100.
http://scholar.google.com/scholar?hl=en&q=Grigore+Rosu+and+Traian+Florin+Serbanuta.+2014.+K+overview+and+simple+case+study.+In+Proc.+of+the+International+K+Workshop+%28K%E2%80%9911%29%2C+Vol.+304.
http://scholar.google.com/scholar?hl=en&q=Prateek+Saxena%2C+Devdatta+Akhawe%2C+Steve+Hanna%2C+Feng+Mao%2C+Stephen+McCamant%2C+and+Dawn+Song.+2010.+A+symbolic+execution+framework+for+JavaScript.+In+Proc.+of+the+Symposium+on+Security+and+Privacy.+10.1109%2FSP.2010.38+
http://scholar.google.com/scholar?hl=en&q=Max+Sch%C3%A4fer%2C+Manu+Sridharan%2C+Julian+Dolby%2C+and+Frank+Tip.+2013.+Dynamic+determinacy+analysis.+In+Proc.+of+the+Conference+on+Programming+Language+Design+and+Implementation.+165%2D%2D174.
http://scholar.google.com/scholar?hl=en&q=Matthias+Schur%2C+Andreas+Roth%2C+and+Andreas+Zeller.+2013.+Mining+behavior+models+from+enterprise+web+applications.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+422%2D%2D432.+10.1145%2F2491411.2491426+
http://scholar.google.com/scholar?hl=en&q=Koushik+Sen%2C+Swaroop+Kalasapur%2C+Tasneem+Brutch%2C+and+Simon+Gibbs.+2013.+Jalangi%3A+A+tool+framework+for+concolic+testing%2C+selective+record-replay%2C+and+dynamic+analysis+of+JavaScript.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+615%2D%2D618.+10.1145%2F2491411.2494598+
http://scholar.google.com/scholar?hl=en&q=Koushik+Sen%2C+George+C.+Necula%2C+Liang+Gong%2C+and+Wontae+Choi.+2015.+MultiSE%3A+Multi-path+symbolic+execution+using+value+summaries.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.+10.1145%2F2786805.2786830+
http://scholar.google.com/scholar?hl=en&q=Manu+Sridharan%2C+Julian+Dolby%2C+Satish+Chandra%2C+Max+Sch%C3%A4fer%2C+and+Frank+Tip.+2012.+Correlation+tracking+for+points-to+analysis+of+JavaScript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+10.1007%2F978-3-642-31057-7_20+
http://scholar.google.com/scholar?hl=en&q=Vincent+St-Amour+and+Shu-yu+Guo.+2015.+Optimization+coaching+for+JavaScript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+271%2D%2D295.
http://scholar.google.com/scholar?hl=en&q=Louis+Stowasser.+2015.+CraftyJS%3A+A+flexible+framework+for+JavaScript+games.+Retrieved+from+http%3A%2F%2Fcraftyjs.com.
http://scholar.google.com/scholar?hl=en&q=Dafydd+Stuttard+and+Marcus+Pinto.+2011.+The+Web+Application+Hacker%E2%80%99s+Handbook%3A+Finding+and+Exploiting+Security+Flaws.+Wiley.
http://scholar.google.com/scholar?hl=en&q=Kwangwon+Sun+and+Sukyoung+Ryu.+2015.+Static+Analysis+of+JavaScript+Programs%3A+Challenges+and+Research+Trends+%28Paper+List+and+Citation+Graph%29.+Retrieved+from+http%3A%2F%2Fplrg.kaist.ac.kr%2Fdoku.php%3Fid%26equals%3Bresearch%3Amaterial.
http://scholar.google.com/scholar?hl=en&q=Nikhil+Swamy%2C+Cedric+Fournet%2C+Aseem+Rastogi%2C+Karthikeyan+Bhargavan%2C+Juan+Chen%2C+Pierre-Yves+Strub%2C+and+Gavin+Bierman.+2014.+Gradual+typing+embedded+securely+in+JavaScript.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+425%2D%2D437.+10.1145%2F2535838.2535889+
http://scholar.google.com/scholar?hl=en&q=Ankur+Taly%2C+%C3%9Alfar+Erlingsson%2C+John+C.+Mitchell%2C+Mark+S.+Miller%2C+and+Jasvir+Nagra.+2011.+Automated+analysis+of+security-critical+JavaScript+APIs.+In+Proc.+of+the+Symposium+on+Security+and+Privacy.+363%2D%2D378.+10.1109%2FSP.2011.39+
http://scholar.google.com/scholar?hl=en&q=The+jQuery+Foundation.+2006.+jQuery.+Retrieved+from+http%3A%2F%2Fjquery.com.
http://scholar.google.com/scholar?hl=en&q=Peter+Thiemann.+2005.+Towards+a+type+system+for+analyzing+javascript+programs.+In+Proc.+of+the+European+Symposium+on+Programming.+408%2D%2D422.+10.1007%2F978-3-540-31987-0_28+
http://scholar.google.com/scholar?hl=en&q=Suresh+Thummalapenta%2C+K.+Vasanta+Lakshmi%2C+Saurabh+Sinha%2C+Nishant+Sinha%2C+and+Satish+Chandra.+2013.+Guided+test+generation+for+web+applications.+In+Proc.+of+the+International+Conference+on+Software+Engineering.+162%2D%2D171.+10.1109%2FICSE.2013.6606562
http://scholar.google.com/scholar?hl=en&q=TIOBE+Software.+2015.+TIOBE+Index+for+November+2015.+Retrieved+from+www.tiobe.com%2Findex.php%2Fcontent%2Fpaperinfo%2Ftpci%2Findex.html.
http://scholar.google.com/scholar?hl=en&q=Omer+Tripp%2C+Pietro+Ferrara%2C+and+Marco+Pistoia.+2014.+Hybrid+security+analysis+of+web+JavaScript+code+via+dynamic+partial+evaluation.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+10.1145%2F2610384.2610385+
http://scholar.google.com/scholar?hl=en&q=Omer+Tripp+and+Omri+Weisman.+2011.+Hybrid+analysis+for+JavaScript+security+assessment.+In+Proc.+of+the+Joint+Meeting+on+Foundations+of+Software+Engineering.
http://scholar.google.com/scholar?hl=en&q=Philipp+Vogt%2C+Florian+Nentwich%2C+Nenad+Jovanovic%2C+Engin+Kirda%2C+Christopher+Kr%C3%BCgel%2C+and+Giovanni+Vigna.+2007.+Cross-site+scripting+prevention+with+dynamic+data+tainting+and+static+analysis.+In+Proc.+of+the+Network+and+Distributed+System+Security+Symposium.
http://scholar.google.com/scholar?hl=en&q=W3C.+1998.+Document+Object+Model+Activity+Statement.+Retrieved+from+http%3A%2F%2Fwww.w3.org%2FDOM%2FActivity.
http://scholar.google.com/scholar?hl=en&q=W3C.+2015.+UI+Events+Specification.+Retrieved+from+https%3A%2F%2Fwww.w3.org%2FTR%2Fuievents%2F.
http://scholar.google.com/scholar?hl=en&q=Shiyi+Wei+and+Barbara+G.+Ryder.+2013.+Practical+blended+taint+analysis+for+JavaScript.+In+Proc.+of+the+International+Symposium+on+Software+Testing+and+Analysis.+336%2D%2D346.+10.1145%2F2483760.2483788+
http://scholar.google.com/scholar?hl=en&q=Shiyi+Wei+and+Barbara+G.+Ryder.+2014.+State-sensitive+points-to+analysis+for+the+dynamic+behavior+of+JavaScript+objects.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+1%2D%2D26.+10.1007%2F978-3-662-44202-9_1+
http://scholar.google.com/scholar?hl=en&q=Shiyi+Wei+and+Barbara+G.+Ryder.+2015.+Adaptive+context-sensitive+analysis+for+JavaScript.+In+Proc.+of+the+European+Conference+on+Object-Oriented+Programming.+712%2D%2D734.
http://scholar.google.com/scholar?hl=en&q=Shiyi+Wei%2C+Franceska+Xhakaj%2C+and+Barbara+G.+Ryder.+2016.+Empirical+study+of+the+dynamic+behavior+of+JavaScript+objects.+Software%3A+Practice+and+Experience+46%2C+7+%282016%29%2C+867%2D%2D889.+10.1002%2Fspe.2334+
http://scholar.google.com/scholar?hl=en&q=Yahoo.+2008.+ADsafe%3A+Making+JavaScript+safe+for+advertising.+Retrieved+from+http%3A%2F%2Fwww.adsafe.org.
http://scholar.google.com/scholar?hl=en&q=Fabian+Yamaguchi%2C+Nico+Golde%2C+Daniel+Arp%2C+and+Konrad+Rieck.+2014.+Modeling+and+discovering+vulnerabilities+with+code+property+graphs.+In+Proc.+of+the+Symposium+on+Security+and+Privacy.+590%2D%2D604.+10.1109%2FSP.2014.44+
http://scholar.google.com/scholar?hl=en&q=Dachuan+Yu%2C+Ajay+Chander%2C+Nayeem+Islam%2C+and+Igor+Serikov.+2007.+JavaScript+instrumentation+for+browser+security.+In+Proc.+of+the+Symposium+on+Principles+of+Programming+Languages.+237%2D%2D249.+10.1145%2F1190216.1190252+
http://scholar.google.com/scholar?hl=en&q=Chuan+Yue+and+Haining+Wang.+2009.+Characterizing+insecure+JavaScript+practices+on+the+web.+In+Proc.+of+the+International+Conference+on+World+Wide+Web.+961%2D%2D970.+10.1145%2F1526709.1526838+
http://scholar.google.com/scholar?hl=en&q=Tian+Zhao.+2011.+Polymorphic+type+inference+for+scripting+languages+with+object+extensions.+In+Proc.+of+the+Symposium+on+Dynamic+Languages.+37%2D%2D50.+10.1145%2F2047849.2047855+
